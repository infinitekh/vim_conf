!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/kh/.vim/tags/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
APIENTRY	/usr/include/SDL/SDL_opengl.h	/^#define APIENTRY$/;"	d
APIENTRYP	/usr/include/SDL/SDL_opengl.h	/^#define APIENTRYP /;"	d
AUDIO_S16	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_S16	/;"	d
AUDIO_S16LSB	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_S16LSB	/;"	d
AUDIO_S16MSB	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_S16MSB	/;"	d
AUDIO_S16SYS	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_S16SYS	/;"	d
AUDIO_S8	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_S8	/;"	d
AUDIO_U16	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_U16	/;"	d
AUDIO_U16LSB	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_U16LSB	/;"	d
AUDIO_U16MSB	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_U16MSB	/;"	d
AUDIO_U16SYS	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_U16SYS	/;"	d
AUDIO_U8	/usr/include/SDL/SDL_audio.h	/^#define AUDIO_U8	/;"	d
Aloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Aloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Amask	/usr/include/SDL/SDL_video.h	/^	Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Ashift	/usr/include/SDL/SDL_video.h	/^	Uint8  Ashift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BitsPerPixel	/usr/include/SDL/SDL_video.h	/^	Uint8  BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Bloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Bshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Bshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BytesPerPixel	/usr/include/SDL/SDL_video.h	/^	Uint8  BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
CD_ERROR	/usr/include/SDL/SDL_cdrom.h	/^	CD_ERROR = -1$/;"	e	enum:__anon8692752f0103	access:public
CD_FPS	/usr/include/SDL/SDL_cdrom.h	/^#define CD_FPS	/;"	d
CD_INDRIVE	/usr/include/SDL/SDL_cdrom.h	/^#define CD_INDRIVE(/;"	d	signature:(status)
CD_PAUSED	/usr/include/SDL/SDL_cdrom.h	/^	CD_PAUSED,$/;"	e	enum:__anon8692752f0103	access:public
CD_PLAYING	/usr/include/SDL/SDL_cdrom.h	/^	CD_PLAYING,$/;"	e	enum:__anon8692752f0103	access:public
CD_STOPPED	/usr/include/SDL/SDL_cdrom.h	/^	CD_STOPPED,$/;"	e	enum:__anon8692752f0103	access:public
CD_TRAYEMPTY	/usr/include/SDL/SDL_cdrom.h	/^	CD_TRAYEMPTY,$/;"	e	enum:__anon8692752f0103	access:public
CDstatus	/usr/include/SDL/SDL_cdrom.h	/^} CDstatus;$/;"	t	typeref:enum:__anon8692752f0103
C_LINKAGE	/usr/include/SDL/SDL_main.h	/^#define C_LINKAGE	/;"	d
C_LINKAGE	/usr/include/SDL/SDL_main.h	/^#define C_LINKAGE$/;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#    define DECLSPEC	/;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#    define DECLSPEC /;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#    define DECLSPEC$/;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#   define DECLSPEC	/;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#   define DECLSPEC$/;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#define DECLSPEC /;"	d
DECLSPEC	/usr/include/SDL/begin_code.h	/^#define DECLSPEC$/;"	d
DUMMY_ENUM_VALUE	/usr/include/SDL/SDL_stdinc.h	/^	DUMMY_ENUM_VALUE$/;"	e	enum:__anoncb8ed01f0303	access:public
FRAMES_TO_MSF	/usr/include/SDL/SDL_cdrom.h	/^#define FRAMES_TO_MSF(/;"	d	signature:(f,M,S,F)
GLAPI	/usr/include/SDL/SDL_opengl.h	/^#define GLAPI /;"	d
GL_1PASS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_1PASS_SGIS /;"	d
GL_2PASS_0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_2X_BIT_ATI /;"	d
GL_3DFX_multisample	/usr/include/SDL/SDL_opengl.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	/usr/include/SDL/SDL_opengl.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	/usr/include/SDL/SDL_opengl.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_422_AVERAGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_422_REV_EXT /;"	d
GL_4PASS_0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_4X_BIT_ATI /;"	d
GL_8X_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ABGR_EXT /;"	d
GL_ACTIVE_ATTRIBUTES	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	/usr/include/SDL/SDL_opengl.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_COMPLETED_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALPHA12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_MAX_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALWAYS_FAST_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_APPLE_client_storage	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_element_array	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_specular_vector	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_transform_hint	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_ycbcr_422	/usr/include/SDL/SDL_opengl.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_color_buffer_float	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_depth_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_draw_buffers	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_fragment_program	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_half_float_pixel	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_matrix_palette	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multisample	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_pixel_buffer_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_shader_objects	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shading_language_100	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shadow	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_texture_border_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_compression	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_cube_map	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_env_add	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_float	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_mirrored_repeat	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_non_power_of_two	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_rectangle	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_transpose_matrix	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_vertex_blend	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_window_pos	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARB_window_pos /;"	d
GL_ARRAY_BUFFER	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATI_draw_buffers	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_pixel_format_float	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_pixel_format_float /;"	d
GL_ATI_pn_triangles	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_text_fragment_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_env_combine3	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATTACHED_SHADERS	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_AVERAGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_AVERAGE_EXT /;"	d
GL_AVERAGE_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_AVERAGE_HP /;"	d
GL_BACK_NORMALS_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_BGR /;"	d
GL_BGRA	/usr/include/SDL/SDL_opengl.h	/^#define GL_BGRA /;"	d
GL_BGRA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BGRA_EXT /;"	d
GL_BGR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BGR_EXT /;"	d
GL_BIAS_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINORMAL_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BLEND_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_SRC_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLUE_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_MAX_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BOOL	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BUFFER_ACCESS	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_MAPPED	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAP_POINTER	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_USAGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUMP_ENVMAP_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLIENT_ACTIVE_TEXTURE	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIP_FAR_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CMYKA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CND_ATI /;"	d
GL_COLOR3_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT10_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT11_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT13_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT14_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT15_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT3_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT5_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT6_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT7_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT9_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_INDEX12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_MATRIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_SUM	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COMBINE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMPARE_R_TO_TEXTURE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPILE_STATUS	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGBA	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMP_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_BORDER	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_BORDER_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_BORDER_HP /;"	d
GL_CONSTANT_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONVOLUTION_1D	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	d
GL_CONVOLUTION_BORDER_MODE	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_10_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_10_ATI /;"	d
GL_CON_11_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_11_ATI /;"	d
GL_CON_12_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_12_ATI /;"	d
GL_CON_13_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_13_ATI /;"	d
GL_CON_14_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_14_ATI /;"	d
GL_CON_15_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_15_ATI /;"	d
GL_CON_16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_16_ATI /;"	d
GL_CON_17_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_17_ATI /;"	d
GL_CON_18_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_18_ATI /;"	d
GL_CON_19_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_19_ATI /;"	d
GL_CON_1_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_20_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_20_ATI /;"	d
GL_CON_21_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_21_ATI /;"	d
GL_CON_22_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_22_ATI /;"	d
GL_CON_23_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_23_ATI /;"	d
GL_CON_24_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_24_ATI /;"	d
GL_CON_25_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_25_ATI /;"	d
GL_CON_26_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_26_ATI /;"	d
GL_CON_27_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_27_ATI /;"	d
GL_CON_28_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_28_ATI /;"	d
GL_CON_29_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_29_ATI /;"	d
GL_CON_2_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_30_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_30_ATI /;"	d
GL_CON_31_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_31_ATI /;"	d
GL_CON_3_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_7_ATI /;"	d
GL_CON_8_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_8_ATI /;"	d
GL_CON_9_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_CON_9_ATI /;"	d
GL_COORD_REPLACE	/usr/include/SDL/SDL_opengl.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_CUBIC_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_CUBIC_HP /;"	d
GL_CULL_FRAGMENT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_FOG_COORD	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	d
GL_CURRENT_SECONDARY_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_VERTEX_ATTRIB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_DECR_WRAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEFORMATIONS_MASK_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	d
GL_DELETE_STATUS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH_ATTACHMENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BOUNDS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_CLAMP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX /;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX /;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_PASS_INSTRUMENT_SGIX /;"	d
GL_DEPTH_STENCIL_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEXTURE_MODE	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	d
GL_DETAIL_TEXTURE_2D_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	d
GL_DISCARD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DISCARD_NV /;"	d
GL_DISTANCE_ATTENUATION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DISTANCE_ATTENUATION_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	d
GL_DOT2_ADD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DRAW_BUFFER0	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER1	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER11	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER12	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER13	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER14	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER15	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER1_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER2	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER3	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER4	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER5	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER6	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER7	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER8	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER9	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_PIXELS_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DSDT_NV /;"	d
GL_DS_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUAL_ALPHA12_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	d
GL_DUAL_ALPHA16_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	d
GL_DUAL_ALPHA4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	d
GL_DUAL_ALPHA8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	d
GL_DUAL_INTENSITY12_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	d
GL_DUAL_INTENSITY16_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	d
GL_DUAL_INTENSITY4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	d
GL_DUAL_INTENSITY8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	d
GL_DUAL_LUMINANCE12_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	d
GL_DUAL_LUMINANCE16_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	d
GL_DUAL_LUMINANCE4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	d
GL_DUAL_LUMINANCE8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	d
GL_DUDV_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DUDV_ATI /;"	d
GL_DYNAMIC_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_EDGEFLAG_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EIGHTH_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ARRAY_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BUFFER	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_EMBOSS_CONSTANT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EVAL_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXPAND_NEGATE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXT_422_pixels	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_abgr	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_blend_color	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_matrix	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_color_matrix /;"	d
GL_EXT_color_subtable	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_depth_bounds_test	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_draw_range_elements	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_fog_coord	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_framebuffer_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_histogram	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_misc_attribute	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_packed_pixels	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_rescale_normal	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_secondary_color	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_separate_specular_color	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shadow_funcs	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shared_texture_palette	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_stencil_two_side	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_env_add	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_lod_bias	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_vertex_array	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	/usr/include/SDL/SDL_opengl.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FENCE_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FILTER4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_FILTER4_SGIS /;"	d
GL_FIXED_ONLY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT3	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT4	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_R16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG_COORD	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_POINTER	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DISTANCE_MODE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_FUNC_POINTS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	d
GL_FOG_FUNC_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_FUNC_SGIS /;"	d
GL_FOG_OFFSET_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SCALE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_SCALE_SGIX /;"	d
GL_FOG_SCALE_VALUE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_SCALE_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FORCE_BLUE_TO_ONE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRAGMENT_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	d
GL_FRAGMENT_DEPTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_LIGHT0_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	d
GL_FRAGMENT_LIGHT1_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	d
GL_FRAGMENT_LIGHT2_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	d
GL_FRAGMENT_LIGHT3_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	d
GL_FRAGMENT_LIGHT4_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	d
GL_FRAGMENT_LIGHT5_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	d
GL_FRAGMENT_LIGHT6_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	d
GL_FRAGMENT_LIGHT7_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	d
GL_FRAGMENT_LIGHTING_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_SHADER	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_FRAMEZOOM_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_FRAMEZOOM_SGIX /;"	d
GL_FULL_RANGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FUNC_ADD	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GENERATE_MIPMAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	/usr/include/SDL/SDL_opengl.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_DEFORMATION_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	d
GL_GLEXT_VERSION	/usr/include/SDL/SDL_opengl.h	/^#define GL_GLEXT_VERSION /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GREEN_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_MAX_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREMEDY_string_marker	/usr/include/SDL/SDL_opengl.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_HALF_BIAS_NEGATE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HILO16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HILO_NV /;"	d
GL_HISTOGRAM	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HP_convolution_border_modes	/usr/include/SDL/SDL_opengl.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	/usr/include/SDL/SDL_opengl.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	/usr/include/SDL/SDL_opengl.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	/usr/include/SDL/SDL_opengl.h	/^#define GL_HP_texture_lighting /;"	d
GL_IBM_cull_vertex	/usr/include/SDL/SDL_opengl.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	/usr/include/SDL/SDL_opengl.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	/usr/include/SDL/SDL_opengl.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_vertex_array_lists	/usr/include/SDL/SDL_opengl.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IGNORE_BORDER_HP /;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	d
GL_IMAGE_MAG_FILTER_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	d
GL_IMAGE_MIN_FILTER_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	d
GL_IMAGE_ROTATE_ANGLE_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	d
GL_IMAGE_SCALE_X_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_SCALE_X_HP /;"	d
GL_IMAGE_SCALE_Y_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	d
GL_IMAGE_TRANSFORM_2D_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	d
GL_IMAGE_TRANSLATE_X_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	d
GL_IMAGE_TRANSLATE_Y_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	/usr/include/SDL/SDL_opengl.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCR_WRAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_MATERIAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_MATERIAL_EXT /;"	d
GL_INDEX_MATERIAL_FACE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	d
GL_INDEX_TEST_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_TEST_EXT /;"	d
GL_INDEX_TEST_FUNC_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	d
GL_INDEX_TEST_REF_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INDEX_TEST_REF_EXT /;"	d
GL_INFO_LOG_LENGTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_blend_func_separate	/usr/include/SDL/SDL_opengl.h	/^#define GL_INGR_blend_func_separate /;"	d
GL_INGR_color_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	/usr/include/SDL/SDL_opengl.h	/^#define GL_INGR_interlace_read /;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	d
GL_INTEL_parallel_arrays	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTENSITY12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTERLACE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERPOLATE	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_VEC2	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVARIANT_DATATYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERTED_SCREEN_W_REND	/usr/include/SDL/SDL_opengl.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_IR_INSTRUMENT1_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	d
GL_IUI_N3F_V2F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_IUI_N3F_V2F_EXT /;"	d
GL_IUI_N3F_V3F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_IUI_N3F_V3F_EXT /;"	d
GL_IUI_V2F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_IUI_V2F_EXT /;"	d
GL_IUI_V3F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_IUI_V3F_EXT /;"	d
GL_LERP_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_LERP_ATI /;"	d
GL_LIGHT_ENV_MODE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	/usr/include/SDL/SDL_opengl.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	d
GL_LINEAR_DETAIL_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	d
GL_LINEAR_SHARPEN_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	d
GL_LINK_STATUS	/usr/include/SDL/SDL_opengl.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_PRIORITY_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_LIST_PRIORITY_SGIX /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOWER_LEFT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LOWER_LEFT /;"	d
GL_LO_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUMINANCE12_ALPHA12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16_ALPHA16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE4_ALPHA4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE_ALPHA16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_MAD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAP1_BINORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_TANGENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_TANGENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_TESSELLATION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MATERIAL_SIDE_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_PALETTE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_CONVOLUTION_HEIGHT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	d
GL_MAX_DRAW_BUFFERS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_ELEMENTS_INDICES	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_MAX_GENERAL_COMBINERS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_MAP_TESSELLATION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SHININESS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPOT_EXPONENT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_TEXTURE_COORDS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_UNITS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_VARYING_FLOATS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATTRIBS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MESA_pack_invert	/usr/include/SDL/SDL_opengl.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_resize_buffers	/usr/include/SDL/SDL_opengl.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_window_pos	/usr/include/SDL/SDL_opengl.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIN /;"	d
GL_MINMAX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MIN_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIN_EXT /;"	d
GL_MIRRORED_REPEAT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MODELVIEW0_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_PROJECTION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODULATE_ADD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SUBTRACT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MOV_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MOV_ATI /;"	d
GL_MULTISAMPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MUL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	d
GL_NEGATE_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_W_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NORMALIZED_RANGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NV_blend_square	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_blend_square /;"	d
GL_NV_copy_depth_to_color	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_depth_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_evaluators	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_evaluators /;"	d
GL_NV_fence	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_fence /;"	d
GL_NV_float_buffer	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_program	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program_option	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_half_float	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_half_float /;"	d
GL_NV_light_max_exponent	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_filter_hint	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_pixel_data_range	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_primitive_restart	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_register_combiners	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_texgen_emboss	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_compression_vtc	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_rectangle	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_shader	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_vertex_array_range	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_program	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	/usr/include/SDL/SDL_opengl.h	/^#define GL_NV_vertex_program3 /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_POINT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_TEST_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_OCCLUSION_TEST_HP /;"	d
GL_OCCLUSION_TEST_RESULT_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	d
GL_OES_read_format	/usr/include/SDL/SDL_opengl.h	/^#define GL_OES_read_format /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	/usr/include/SDL/SDL_opengl.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	/usr/include/SDL/SDL_opengl.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	/usr/include/SDL/SDL_opengl.h	/^#define GL_OML_subsample /;"	d
GL_ONE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_OPERAND0_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OP_ADD_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OUTPUT_COLOR0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_PACK_CMYK_HINT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_IMAGE_DEPTH_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	d
GL_PACK_IMAGE_HEIGHT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_RESAMPLE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_SKIP_IMAGES	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_VOLUMES_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PARALLEL_ARRAYS_INTEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PASS_THROUGH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PERTURB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_STAGE_CONSTANTS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	/usr/include/SDL/SDL_opengl.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	/usr/include/SDL/SDL_opengl.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_PHONG_WIN /;"	d
GL_PIXEL_COUNTER_BITS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	d
GL_PIXEL_GROUP_COLOR_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	d
GL_PIXEL_MAG_FILTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MIN_FILTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_PACK_BUFFER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TEXTURE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX /;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX /;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX /;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX /;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX /;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX /;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX /;"	d
GL_PIXEL_TEX_GEN_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_WIDTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PN_TRIANGLES_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT_DISTANCE_ATTENUATION	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	d
GL_POINT_SIZE_MAX	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MAX_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	d
GL_POINT_SIZE_MIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_MIN_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	d
GL_POINT_SPRITE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESERVE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_PARAMETERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_RESIDENT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_STRING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROXY_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_PROXY_TEXTURE_1D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_3D	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_4D_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_QUAD_ALPHA4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	d
GL_QUAD_ALPHA8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	d
GL_QUAD_INTENSITY4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	d
GL_QUAD_INTENSITY8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	d
GL_QUAD_LUMINANCE4_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	d
GL_QUAD_LUMINANCE8_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	d
GL_QUAD_MESH_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	d
GL_QUARTER_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY_COUNTER_BITS	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_RESULT	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_R1UI_C3F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_READ_ONLY	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_REDUCE	/usr/include/SDL/SDL_opengl.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_MAX_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	/usr/include/SDL/SDL_opengl.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	d
GL_REFERENCE_PLANE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	d
GL_REFLECTION_MAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGISTER_COMBINERS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_10_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_10_ATI /;"	d
GL_REG_11_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_11_ATI /;"	d
GL_REG_12_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_12_ATI /;"	d
GL_REG_13_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_13_ATI /;"	d
GL_REG_14_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_14_ATI /;"	d
GL_REG_15_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_15_ATI /;"	d
GL_REG_16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_16_ATI /;"	d
GL_REG_17_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_17_ATI /;"	d
GL_REG_18_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_18_ATI /;"	d
GL_REG_19_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_19_ATI /;"	d
GL_REG_1_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_20_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_20_ATI /;"	d
GL_REG_21_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_21_ATI /;"	d
GL_REG_22_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_22_ATI /;"	d
GL_REG_23_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_23_ATI /;"	d
GL_REG_24_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_24_ATI /;"	d
GL_REG_25_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_25_ATI /;"	d
GL_REG_26_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_26_ATI /;"	d
GL_REG_27_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_27_ATI /;"	d
GL_REG_28_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_28_ATI /;"	d
GL_REG_29_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_29_ATI /;"	d
GL_REG_2_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_30_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_30_ATI /;"	d
GL_REG_31_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_31_ATI /;"	d
GL_REG_3_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_5_ATI /;"	d
GL_REG_6_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_6_ATI /;"	d
GL_REG_7_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_7_ATI /;"	d
GL_REG_8_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_8_ATI /;"	d
GL_REG_9_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_REG_9_ATI /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_REND_screen_coordinates	/usr/include/SDL/SDL_opengl.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLICATE_BORDER	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPLICATE_BORDER_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_REPLICATE_BORDER_HP /;"	d
GL_RESAMPLE_AVERAGE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESTART_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_RESTART_SUN /;"	d
GL_RGB10_A2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB5_A1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB8_EXT /;"	d
GL_RGBA12_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_S3TC	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_S3TC	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_FLOAT16_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_S3TC	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_S3_s3tc	/usr/include/SDL/SDL_opengl.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER_1D	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_SHADOW	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_RECT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_3D	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_CUBE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLES	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SATURATE_BIT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALE_BY_FOUR_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCREEN_COORDINATES_REND	/usr/include/SDL/SDL_opengl.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SECONDARY_COLOR_ARRAY	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SEPARABLE_2D	/usr/include/SDL/SDL_opengl.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_SPECULAR_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SGIS_detail_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_point_parameters	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_point_parameters /;"	d
GL_SGIS_sharpen_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_color_mask	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture_color_mask /;"	d
GL_SGIS_texture_edge_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIX_async	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_calligraphic_fragment	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_pass_instrument	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fog_scale	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_fog_scale /;"	d
GL_SGIX_fragment_lighting	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_fragment_lighting /;"	d
GL_SGIX_framezoom	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_igloo_interface	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_instruments	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_instruments /;"	d
GL_SGIX_interlace	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_tiles	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_reference_plane	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subsample	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_scale_bias	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_texture_select	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_texture_select /;"	d
GL_SGIX_vertex_preclip	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_ycrcb	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_table	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	/usr/include/SDL/SDL_opengl.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SHADER_CONSISTENT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_OBJECT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OPERATION_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_TYPE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_SIGNED_ALPHA8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_RGB8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SINGLE_COLOR	/usr/include/SDL/SDL_opengl.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SLICE_ACCUM_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	/usr/include/SDL/SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	/usr/include/SDL/SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SOURCE0_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPARE1_NV /;"	d
GL_SPRITE_AXIAL_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	d
GL_SPRITE_AXIS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_AXIS_SGIX /;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	d
GL_SPRITE_MODE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_MODE_SGIX /;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	d
GL_SPRITE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_SGIX /;"	d
GL_SPRITE_TRANSLATION_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	d
GL_SRC0_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SRC2_RGB /;"	d
GL_STATIC_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STENCIL_ATTACHMENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_INDEX16_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STORAGE_CACHED_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_READ	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBTRACT	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUB_ATI /;"	d
GL_SUNX_constant_data	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_slice_accum	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	/usr/include/SDL/SDL_opengl.h	/^#define GL_SUN_vertex /;"	d
GL_SWIZZLE_STQ_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_T2F_IUI_N3F_V2F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	d
GL_T2F_IUI_N3F_V3F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	d
GL_T2F_IUI_V2F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_T2F_IUI_V2F_EXT /;"	d
GL_T2F_IUI_V3F_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_T2F_IUI_V3F_EXT /;"	d
GL_TABLE_TOO_LARGE	/usr/include/SDL/SDL_opengl.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TABLE_TOO_LARGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	d
GL_TANGENT_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TEXCOORD1_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE0	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_3D	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_4DSIZE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	d
GL_TEXTURE_4D_BINDING_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	d
GL_TEXTURE_4D_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_4D_SGIS /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_3D	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER_VALUES_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_MODE	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPRESSED	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEFORMATION_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	d
GL_TEXTURE_DEPTH	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV_BIAS_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	d
GL_TEXTURE_FILTER_CONTROL	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HI_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHTING_MODE_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	d
GL_TEXTURE_LIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	d
GL_TEXTURE_LO_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MIN_LOD	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_POST_SPECULAR_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	d
GL_TEXTURE_PRE_SPECULAR_HP	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	d
GL_TEXTURE_PRIORITY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RECTANGLE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_RED_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RESIDENT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SHADER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_TOO_LARGE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_WRAP_Q_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	d
GL_TEXTURE_WRAP_R	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TRACK_MATRIX_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_HINT_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSPOSE_COLOR_MATRIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLE_LIST_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TYPE_RGBA_FLOAT_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_TYPE_RGBA_FLOAT_ATI /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	d
GL_UNPACK_IMAGE_HEIGHT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_RESAMPLE_OML	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_SKIP_IMAGES	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT_10_10_10_2	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INVERT_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	/usr/include/SDL/SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	/usr/include/SDL/SDL_opengl.h	/^#define GL_UPPER_LEFT /;"	d
GL_VALIDATE_STATUS	/usr/include/SDL/SDL_opengl.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VECTOR_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VECTOR_EXT /;"	d
GL_VERSION_1_2	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERTEX23_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LIST_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_BLEND_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_WEIGHTING_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VIBRANCE_BIAS_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_WEIGHT_ARRAY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	/usr/include/SDL/SDL_opengl.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WIN_phong_shading	/usr/include/SDL/SDL_opengl.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	/usr/include/SDL/SDL_opengl.h	/^#define GL_WIN_specular_fog /;"	d
GL_WRAP_BORDER_SUN	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITE_ONLY	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL/SDL_opengl.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_W_EXT /;"	d
GL_X_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_X_EXT /;"	d
GL_YCBCR_422_APPLE	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCRCBA_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_422_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCRCB_422_SGIX /;"	d
GL_YCRCB_444_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCRCB_444_SGIX /;"	d
GL_YCRCB_SGIX	/usr/include/SDL/SDL_opengl.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_Y_EXT /;"	d
GL_ZERO_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_ZERO_EXT /;"	d
GL_Z_EXT	/usr/include/SDL/SDL_opengl.h	/^#define GL_Z_EXT /;"	d
GLchar	/usr/include/SDL/SDL_opengl.h	/^typedef char GLchar;			\/* native character *\/$/;"	t	typeref:typename:char
GLcharARB	/usr/include/SDL/SDL_opengl.h	/^typedef char GLcharARB;		\/* native character *\/$/;"	t	typeref:typename:char
GLhalfARB	/usr/include/SDL/SDL_opengl.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	/usr/include/SDL/SDL_opengl.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	/usr/include/SDL/SDL_opengl.h	/^typedef unsigned int GLhandleARB;	\/* shader object handle *\/$/;"	t	typeref:typename:unsigned int
GLhandleARB	/usr/include/SDL/SDL_opengl.h	/^typedef void *GLhandleARB;	\/* shader object handle *\/$/;"	t	typeref:typename:void *
GLintptr	/usr/include/SDL/SDL_opengl.h	/^typedef long GLintptr;$/;"	t	typeref:typename:long
GLintptr	/usr/include/SDL/SDL_opengl.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	/usr/include/SDL/SDL_opengl.h	/^typedef long GLintptrARB;$/;"	t	typeref:typename:long
GLintptrARB	/usr/include/SDL/SDL_opengl.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	/usr/include/SDL/SDL_opengl.h	/^typedef long GLsizeiptr;$/;"	t	typeref:typename:long
GLsizeiptr	/usr/include/SDL/SDL_opengl.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	/usr/include/SDL/SDL_opengl.h	/^typedef long GLsizeiptrARB;$/;"	t	typeref:typename:long
GLsizeiptrARB	/usr/include/SDL/SDL_opengl.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
Gloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Gloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Gmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Gshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Gshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
HAVE_ABS	/usr/include/SDL/SDL_config.h	/^#define HAVE_ABS /;"	d
HAVE_ALLOCA	/usr/include/SDL/SDL_config.h	/^#define HAVE_ALLOCA /;"	d
HAVE_ALLOCA_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_ALLOCA_H /;"	d
HAVE_ATOF	/usr/include/SDL/SDL_config.h	/^#define HAVE_ATOF /;"	d
HAVE_ATOI	/usr/include/SDL/SDL_config.h	/^#define HAVE_ATOI /;"	d
HAVE_BCOPY	/usr/include/SDL/SDL_config.h	/^#define HAVE_BCOPY /;"	d
HAVE_CALLOC	/usr/include/SDL/SDL_config.h	/^#define HAVE_CALLOC /;"	d
HAVE_CTYPE_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_CTYPE_H /;"	d
HAVE_FREE	/usr/include/SDL/SDL_config.h	/^#define HAVE_FREE /;"	d
HAVE_GETENV	/usr/include/SDL/SDL_config.h	/^#define HAVE_GETENV /;"	d
HAVE_GETPAGESIZE	/usr/include/SDL/SDL_config.h	/^#define HAVE_GETPAGESIZE /;"	d
HAVE_ICONV	/usr/include/SDL/SDL_config.h	/^#define HAVE_ICONV /;"	d
HAVE_ICONV_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_ICONV_H /;"	d
HAVE_INTTYPES_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_LIBC	/usr/include/SDL/SDL_config.h	/^#define HAVE_LIBC /;"	d
HAVE_MALLOC	/usr/include/SDL/SDL_config.h	/^#define HAVE_MALLOC /;"	d
HAVE_MALLOC_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_MALLOC_H /;"	d
HAVE_MATH_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_MATH_H /;"	d
HAVE_MEMCMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_MEMCMP /;"	d
HAVE_MEMCPY	/usr/include/SDL/SDL_config.h	/^#define HAVE_MEMCPY /;"	d
HAVE_MEMMOVE	/usr/include/SDL/SDL_config.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMORY_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MEMSET	/usr/include/SDL/SDL_config.h	/^#define HAVE_MEMSET /;"	d
HAVE_MPROTECT	/usr/include/SDL/SDL_config.h	/^#define HAVE_MPROTECT /;"	d
HAVE_NANOSLEEP	/usr/include/SDL/SDL_config.h	/^#define HAVE_NANOSLEEP /;"	d
HAVE_PUTENV	/usr/include/SDL/SDL_config.h	/^#define HAVE_PUTENV /;"	d
HAVE_QSORT	/usr/include/SDL/SDL_config.h	/^#define HAVE_QSORT /;"	d
HAVE_REALLOC	/usr/include/SDL/SDL_config.h	/^#define HAVE_REALLOC /;"	d
HAVE_SA_SIGACTION	/usr/include/SDL/SDL_config.h	/^#define HAVE_SA_SIGACTION /;"	d
HAVE_SEM_TIMEDWAIT	/usr/include/SDL/SDL_config.h	/^#define HAVE_SEM_TIMEDWAIT /;"	d
HAVE_SETJMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_SETJMP /;"	d
HAVE_SIGACTION	/usr/include/SDL/SDL_config.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGNAL_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SNPRINTF	/usr/include/SDL/SDL_config.h	/^#define HAVE_SNPRINTF /;"	d
HAVE_SSCANF	/usr/include/SDL/SDL_config.h	/^#define HAVE_SSCANF /;"	d
HAVE_STDARG_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDINT_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDIO_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDLIB_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRCASECMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRCASECMP /;"	d
HAVE_STRCHR	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRCHR /;"	d
HAVE_STRCMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRCMP /;"	d
HAVE_STRDUP	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRDUP /;"	d
HAVE_STRINGS_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRLEN	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRLEN /;"	d
HAVE_STRNCASECMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRNCASECMP /;"	d
HAVE_STRNCMP	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRNCMP /;"	d
HAVE_STRRCHR	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRRCHR /;"	d
HAVE_STRSTR	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRSTR /;"	d
HAVE_STRTOD	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRTOD /;"	d
HAVE_STRTOL	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRTOL /;"	d
HAVE_STRTOLL	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRTOLL /;"	d
HAVE_STRTOUL	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRTOUL /;"	d
HAVE_STRTOULL	/usr/include/SDL/SDL_config.h	/^#define HAVE_STRTOULL /;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL/SDL_config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_UNSETENV	/usr/include/SDL/SDL_config.h	/^#define HAVE_UNSETENV /;"	d
HAVE_VSNPRINTF	/usr/include/SDL/SDL_config.h	/^#define HAVE_VSNPRINTF /;"	d
IMG_GetError	/usr/include/SDL/SDL_image.h	/^#define IMG_GetError	/;"	d
IMG_INIT_JPG	/usr/include/SDL/SDL_image.h	/^    IMG_INIT_JPG = 0x00000001,$/;"	e	enum:__anon683629bd0103	access:public
IMG_INIT_PNG	/usr/include/SDL/SDL_image.h	/^    IMG_INIT_PNG = 0x00000002,$/;"	e	enum:__anon683629bd0103	access:public
IMG_INIT_TIF	/usr/include/SDL/SDL_image.h	/^    IMG_INIT_TIF = 0x00000004,$/;"	e	enum:__anon683629bd0103	access:public
IMG_INIT_WEBP	/usr/include/SDL/SDL_image.h	/^    IMG_INIT_WEBP = 0x00000008$/;"	e	enum:__anon683629bd0103	access:public
IMG_Init	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_Init(int flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int flags)
IMG_InitFlags	/usr/include/SDL/SDL_image.h	/^} IMG_InitFlags;$/;"	t	typeref:enum:__anon683629bd0103
IMG_InvertAlpha	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_InvertAlpha(int on);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int on)
IMG_Linked_Version	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC const SDL_version * SDLCALL IMG_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
IMG_Load	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_Load(const char *file);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(const char * file)
IMG_LoadBMP_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadBMP_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadCUR_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadCUR_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadGIF_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadGIF_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadICO_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadICO_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadJPG_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadJPG_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadLBM_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadLBM_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPCX_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPCX_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPNG_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPNG_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPNM_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPNM_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTGA_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTGA_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTIF_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTIF_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTyped_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTyped_RW(SDL_RWops *src, int freesrc, char *type);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc,char * type)
IMG_LoadWEBP_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadWEBP_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXCF_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXCF_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXPM_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXPM_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXV_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXV_RW(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_Load_RW	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_Load_RW(SDL_RWops *src, int freesrc);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc)
IMG_Quit	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC void SDLCALL IMG_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
IMG_ReadXPMFromArray	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_ReadXPMFromArray(char **xpm);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(char ** xpm)
IMG_SetError	/usr/include/SDL/SDL_image.h	/^#define IMG_SetError	/;"	d
IMG_isBMP	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isBMP(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isCUR	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isCUR(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isGIF	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isGIF(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isICO	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isICO(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isJPG	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isJPG(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isLBM	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isLBM(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPCX	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPCX(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPNG	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPNG(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPNM	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPNM(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isTIF	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isTIF(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isWEBP	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isWEBP(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXCF	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXCF(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXPM	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXPM(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXV	/usr/include/SDL/SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXV(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
INADDR_ANY	/usr/include/SDL/SDL_net.h	/^#define INADDR_ANY	/;"	d
INADDR_BROADCAST	/usr/include/SDL/SDL_net.h	/^#define INADDR_BROADCAST	/;"	d
INADDR_LOOPBACK	/usr/include/SDL/SDL_net.h	/^#define INADDR_LOOPBACK	/;"	d
INADDR_NONE	/usr/include/SDL/SDL_net.h	/^#define INADDR_NONE	/;"	d
IPaddress	/usr/include/SDL/SDL_net.h	/^} IPaddress;$/;"	t	typeref:struct:__anon1a0e7ea10108
KMOD_ALT	/usr/include/SDL/SDL_keysym.h	/^#define KMOD_ALT	/;"	d
KMOD_CAPS	/usr/include/SDL/SDL_keysym.h	/^	KMOD_CAPS  = 0x2000,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_CTRL	/usr/include/SDL/SDL_keysym.h	/^#define KMOD_CTRL	/;"	d
KMOD_LALT	/usr/include/SDL/SDL_keysym.h	/^	KMOD_LALT  = 0x0100,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_LCTRL	/usr/include/SDL/SDL_keysym.h	/^	KMOD_LCTRL = 0x0040,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_LMETA	/usr/include/SDL/SDL_keysym.h	/^	KMOD_LMETA = 0x0400,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_LSHIFT	/usr/include/SDL/SDL_keysym.h	/^	KMOD_LSHIFT= 0x0001,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_META	/usr/include/SDL/SDL_keysym.h	/^#define KMOD_META	/;"	d
KMOD_MODE	/usr/include/SDL/SDL_keysym.h	/^	KMOD_MODE  = 0x4000,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_NONE	/usr/include/SDL/SDL_keysym.h	/^	KMOD_NONE  = 0x0000,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_NUM	/usr/include/SDL/SDL_keysym.h	/^	KMOD_NUM   = 0x1000,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_RALT	/usr/include/SDL/SDL_keysym.h	/^	KMOD_RALT  = 0x0200,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_RCTRL	/usr/include/SDL/SDL_keysym.h	/^	KMOD_RCTRL = 0x0080,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_RESERVED	/usr/include/SDL/SDL_keysym.h	/^	KMOD_RESERVED = 0x8000$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_RMETA	/usr/include/SDL/SDL_keysym.h	/^	KMOD_RMETA = 0x0800,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_RSHIFT	/usr/include/SDL/SDL_keysym.h	/^	KMOD_RSHIFT= 0x0002,$/;"	e	enum:__anon188e16bc0203	access:public
KMOD_SHIFT	/usr/include/SDL/SDL_keysym.h	/^#define KMOD_SHIFT	/;"	d
MIX_CHANNELS	/usr/include/SDL/SDL_mixer.h	/^#define MIX_CHANNELS	/;"	d
MIX_CHANNEL_POST	/usr/include/SDL/SDL_mixer.h	/^#define MIX_CHANNEL_POST /;"	d
MIX_DEFAULT_CHANNELS	/usr/include/SDL/SDL_mixer.h	/^#define MIX_DEFAULT_CHANNELS	/;"	d
MIX_DEFAULT_FORMAT	/usr/include/SDL/SDL_mixer.h	/^#define MIX_DEFAULT_FORMAT	/;"	d
MIX_DEFAULT_FREQUENCY	/usr/include/SDL/SDL_mixer.h	/^#define MIX_DEFAULT_FREQUENCY	/;"	d
MIX_EFFECTSMAXSPEED	/usr/include/SDL/SDL_mixer.h	/^#define MIX_EFFECTSMAXSPEED /;"	d
MIX_FADING_IN	/usr/include/SDL/SDL_mixer.h	/^	MIX_FADING_IN$/;"	e	enum:__anon9469cc5f0203	access:public
MIX_FADING_OUT	/usr/include/SDL/SDL_mixer.h	/^	MIX_FADING_OUT,$/;"	e	enum:__anon9469cc5f0203	access:public
MIX_INIT_FLAC	/usr/include/SDL/SDL_mixer.h	/^    MIX_INIT_FLAC        = 0x00000001,$/;"	e	enum:__anon9469cc5f0103	access:public
MIX_INIT_FLUIDSYNTH	/usr/include/SDL/SDL_mixer.h	/^    MIX_INIT_FLUIDSYNTH  = 0x00000010$/;"	e	enum:__anon9469cc5f0103	access:public
MIX_INIT_MOD	/usr/include/SDL/SDL_mixer.h	/^    MIX_INIT_MOD         = 0x00000002,$/;"	e	enum:__anon9469cc5f0103	access:public
MIX_INIT_MP3	/usr/include/SDL/SDL_mixer.h	/^    MIX_INIT_MP3         = 0x00000004,$/;"	e	enum:__anon9469cc5f0103	access:public
MIX_INIT_OGG	/usr/include/SDL/SDL_mixer.h	/^    MIX_INIT_OGG         = 0x00000008,$/;"	e	enum:__anon9469cc5f0103	access:public
MIX_InitFlags	/usr/include/SDL/SDL_mixer.h	/^} MIX_InitFlags;$/;"	t	typeref:enum:__anon9469cc5f0103
MIX_MAJOR_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define MIX_MAJOR_VERSION	/;"	d
MIX_MAX_VOLUME	/usr/include/SDL/SDL_mixer.h	/^#define MIX_MAX_VOLUME	/;"	d
MIX_MINOR_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define MIX_MINOR_VERSION	/;"	d
MIX_NO_FADING	/usr/include/SDL/SDL_mixer.h	/^	MIX_NO_FADING,$/;"	e	enum:__anon9469cc5f0203	access:public
MIX_PATCHLEVEL	/usr/include/SDL/SDL_mixer.h	/^#define MIX_PATCHLEVEL	/;"	d
MIX_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define MIX_VERSION(/;"	d	signature:(X)
MSF_TO_FRAMES	/usr/include/SDL/SDL_cdrom.h	/^#define MSF_TO_FRAMES(/;"	d	signature:(M,S,F)
MUS_CMD	/usr/include/SDL/SDL_mixer.h	/^	MUS_CMD,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_FLAC	/usr/include/SDL/SDL_mixer.h	/^	MUS_FLAC,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_MID	/usr/include/SDL/SDL_mixer.h	/^	MUS_MID,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_MOD	/usr/include/SDL/SDL_mixer.h	/^	MUS_MOD,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_MODPLUG	/usr/include/SDL/SDL_mixer.h	/^	MUS_MODPLUG$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_MP3	/usr/include/SDL/SDL_mixer.h	/^	MUS_MP3,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_MP3_MAD	/usr/include/SDL/SDL_mixer.h	/^	MUS_MP3_MAD,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_NONE	/usr/include/SDL/SDL_mixer.h	/^	MUS_NONE,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_OGG	/usr/include/SDL/SDL_mixer.h	/^	MUS_OGG,$/;"	e	enum:__anon9469cc5f0303	access:public
MUS_WAV	/usr/include/SDL/SDL_mixer.h	/^	MUS_WAV,$/;"	e	enum:__anon9469cc5f0303	access:public
Mix_AllocateChannels	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_AllocateChannels(int numchans);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int numchans)
Mix_ChannelFinished	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_ChannelFinished(void (*channel_finished)(int channel));$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (* channel_finished)(int channel))
Mix_Chunk	/usr/include/SDL/SDL_mixer.h	/^typedef struct Mix_Chunk {$/;"	s
Mix_Chunk	/usr/include/SDL/SDL_mixer.h	/^} Mix_Chunk;$/;"	t	typeref:struct:Mix_Chunk
Mix_Chunk::abuf	/usr/include/SDL/SDL_mixer.h	/^	Uint8 *abuf;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8 *	access:public
Mix_Chunk::alen	/usr/include/SDL/SDL_mixer.h	/^	Uint32 alen;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint32	access:public
Mix_Chunk::allocated	/usr/include/SDL/SDL_mixer.h	/^	int allocated;$/;"	m	struct:Mix_Chunk	typeref:typename:int	access:public
Mix_Chunk::volume	/usr/include/SDL/SDL_mixer.h	/^	Uint8 volume;		\/* Per-sample volume, 0-128 *\/$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8	access:public
Mix_CloseAudio	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_CloseAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_EachSoundFont	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_EachSoundFont(int (*function)(const char*, void*), void *data);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int (* function)(const char *,void *),void * data)
Mix_EffectDone_t	/usr/include/SDL/SDL_mixer.h	/^typedef void (*Mix_EffectDone_t)(int chan, void *udata);$/;"	t	typeref:typename:void (*)(int chan,void * udata)
Mix_EffectFunc_t	/usr/include/SDL/SDL_mixer.h	/^typedef void (*Mix_EffectFunc_t)(int chan, void *stream, int len, void *udata);$/;"	t	typeref:typename:void (*)(int chan,void * stream,int len,void * udata)
Mix_ExpireChannel	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_ExpireChannel(int channel, int ticks);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int ticks)
Mix_FadeInChannel	/usr/include/SDL/SDL_mixer.h	/^#define Mix_FadeInChannel(/;"	d	signature:(channel,chunk,loops,ms)
Mix_FadeInChannelTimed	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInChannelTimed(int channel, Mix_Chunk *chunk, int loops, int/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_Chunk * chunk,int loops,int ms,int ticks)
Mix_FadeInMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInMusic(Mix_Music *music, int loops, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops,int ms)
Mix_FadeInMusicPos	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeInMusicPos(Mix_Music *music, int loops, int ms, double posit/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops,int ms,double position)
Mix_FadeOutChannel	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutChannel(int which, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int which,int ms)
Mix_FadeOutGroup	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutGroup(int tag, int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag,int ms)
Mix_FadeOutMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_FadeOutMusic(int ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int ms)
Mix_Fading	/usr/include/SDL/SDL_mixer.h	/^} Mix_Fading;$/;"	t	typeref:enum:__anon9469cc5f0203
Mix_FadingChannel	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Fading SDLCALL Mix_FadingChannel(int which);$/;"	p	typeref:typename:DECLSPEC Mix_Fading SDLCALL	signature:(int which)
Mix_FadingMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Fading SDLCALL Mix_FadingMusic(void);$/;"	p	typeref:typename:DECLSPEC Mix_Fading SDLCALL	signature:(void)
Mix_FreeChunk	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_FreeChunk(Mix_Chunk *chunk);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Mix_Chunk * chunk)
Mix_FreeMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_FreeMusic(Mix_Music *music);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Mix_Music * music)
Mix_GetChunk	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_GetChunk(int channel);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(int channel)
Mix_GetChunkDecoder	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC const char * SDLCALL Mix_GetChunkDecoder(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
Mix_GetError	/usr/include/SDL/SDL_mixer.h	/^#define Mix_GetError	/;"	d
Mix_GetMusicDecoder	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC const char * SDLCALL Mix_GetMusicDecoder(int index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
Mix_GetMusicHookData	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void * SDLCALL Mix_GetMusicHookData(void);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
Mix_GetMusicType	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_MusicType SDLCALL Mix_GetMusicType(const Mix_Music *music);$/;"	p	typeref:typename:DECLSPEC Mix_MusicType SDLCALL	signature:(const Mix_Music * music)
Mix_GetNumChunkDecoders	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetNumChunkDecoders(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GetNumMusicDecoders	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetNumMusicDecoders(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GetSoundFonts	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC const char* SDLCALL Mix_GetSoundFonts(void);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
Mix_GetSynchroValue	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GetSynchroValue(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_GroupAvailable	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupAvailable(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupChannel	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupChannel(int which, int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int which,int tag)
Mix_GroupChannels	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupChannels(int from, int to, int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int from,int to,int tag)
Mix_GroupCount	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupCount(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupNewer	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupNewer(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_GroupOldest	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_GroupOldest(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_HaltChannel	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltChannel(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_HaltGroup	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltGroup(int tag);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int tag)
Mix_HaltMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_HaltMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_HookMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_HookMusic(void (*mix_func)$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (* mix_func)(void * udata,Uint8 * stream,int len),void * arg)
Mix_HookMusicFinished	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_HookMusicFinished(void (*music_finished)(void));$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (* music_finished)(void))
Mix_Init	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Init(int flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int flags)
Mix_Linked_Version	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC const SDL_version * SDLCALL Mix_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
Mix_LoadMUS	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUS(const char *file);$/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(const char * file)
Mix_LoadMUSType_RW	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUSType_RW(SDL_RWops *rw, Mix_MusicType type, int fr/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(SDL_RWops * rw,Mix_MusicType type,int freesrc)
Mix_LoadMUS_RW	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Music * SDLCALL Mix_LoadMUS_RW(SDL_RWops *rw);$/;"	p	typeref:typename:DECLSPEC Mix_Music * SDLCALL	signature:(SDL_RWops * rw)
Mix_LoadWAV	/usr/include/SDL/SDL_mixer.h	/^#define Mix_LoadWAV(/;"	d	signature:(file)
Mix_LoadWAV_RW	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_LoadWAV_RW(SDL_RWops *src, int freesrc);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(SDL_RWops * src,int freesrc)
Mix_Music	/usr/include/SDL/SDL_mixer.h	/^typedef struct _Mix_Music Mix_Music;$/;"	t	typeref:struct:_Mix_Music
Mix_MusicType	/usr/include/SDL/SDL_mixer.h	/^} Mix_MusicType;$/;"	t	typeref:enum:__anon9469cc5f0303
Mix_OpenAudio	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_OpenAudio(int frequency, Uint16 format, int channels,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int frequency,Uint16 format,int channels,int chunksize)
Mix_Pause	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Pause(int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int channel)
Mix_PauseMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_PauseMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_Paused	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Paused(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_PausedMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PausedMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_PlayChannel	/usr/include/SDL/SDL_mixer.h	/^#define Mix_PlayChannel(/;"	d	signature:(channel,chunk,loops)
Mix_PlayChannelTimed	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayChannelTimed(int channel, Mix_Chunk *chunk, int loops, int t/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_Chunk * chunk,int loops,int ticks)
Mix_PlayMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayMusic(Mix_Music *music, int loops);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Music * music,int loops)
Mix_Playing	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Playing(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_PlayingMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_PlayingMusic(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
Mix_QuerySpec	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_QuerySpec(int *frequency,Uint16 *format,int *channels);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int * frequency,Uint16 * format,int * channels)
Mix_QuickLoad_RAW	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_QuickLoad_RAW(Uint8 *mem, Uint32 len);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(Uint8 * mem,Uint32 len)
Mix_QuickLoad_WAV	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC Mix_Chunk * SDLCALL Mix_QuickLoad_WAV(Uint8 *mem);$/;"	p	typeref:typename:DECLSPEC Mix_Chunk * SDLCALL	signature:(Uint8 * mem)
Mix_Quit	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_RegisterEffect	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_RegisterEffect(int chan, Mix_EffectFunc_t f,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int chan,Mix_EffectFunc_t f,Mix_EffectDone_t d,void * arg)
Mix_ReserveChannels	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_ReserveChannels(int num);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int num)
Mix_Resume	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_Resume(int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int channel)
Mix_ResumeMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_ResumeMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_RewindMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_RewindMusic(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
Mix_SetDistance	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetDistance(int channel, Uint8 distance);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Uint8 distance)
Mix_SetError	/usr/include/SDL/SDL_mixer.h	/^#define Mix_SetError	/;"	d
Mix_SetMusicCMD	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetMusicCMD(const char *command);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * command)
Mix_SetMusicPosition	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetMusicPosition(double position);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(double position)
Mix_SetPanning	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetPanning(int channel, Uint8 left, Uint8 right);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Uint8 left,Uint8 right)
Mix_SetPosition	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetPosition(int channel, Sint16 angle, Uint8 distance);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Sint16 angle,Uint8 distance)
Mix_SetPostMix	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC void SDLCALL Mix_SetPostMix(void (*mix_func)$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void (* mix_func)(void * udata,Uint8 * stream,int len),void * arg)
Mix_SetReverseStereo	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetReverseStereo(int channel, int flip);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int flip)
Mix_SetSoundFonts	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetSoundFonts(const char *paths);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * paths)
Mix_SetSynchroValue	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_SetSynchroValue(int value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int value)
Mix_UnregisterAllEffects	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_UnregisterAllEffects(int channel);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel)
Mix_UnregisterEffect	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_UnregisterEffect(int channel, Mix_EffectFunc_t f);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,Mix_EffectFunc_t f)
Mix_Volume	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_Volume(int channel, int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int channel,int volume)
Mix_VolumeChunk	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_VolumeChunk(Mix_Chunk *chunk, int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Mix_Chunk * chunk,int volume)
Mix_VolumeMusic	/usr/include/SDL/SDL_mixer.h	/^extern DECLSPEC int SDLCALL Mix_VolumeMusic(int volume);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int volume)
NOMINMAX	/usr/include/SDL/SDL_opengl.h	/^#define NOMINMAX	/;"	d
NULL	/usr/include/SDL/begin_code.h	/^#define NULL /;"	d
NeedFunctionPrototypes	/usr/include/SDL/SDL_name.h	/^#define NeedFunctionPrototypes /;"	d
PFNGLACTIVESTENCILFACEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLALPHAFRAGMENTOP1ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLAPPLYTEXTUREEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINFRAGMENTSHADERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINQUERYARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINVERTEXSHADEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBINDATTRIBLOCATIONARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDFRAGMENTSHADERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDLIGHTPARAMETEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDPARAMETEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDRENDERBUFFEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDTEXGENPARAMETEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDVERTEXARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXSHADEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINORMAL3BEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLBLENDCOLOREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GL/;"	t	typeref:typename:void (APIENTRYP)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDCOLORPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLcla/;"	t	typeref:typename:void (APIENTRYP)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDEQUATIONEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCSEPARATEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBUFFERDATAARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const GLvoid * data,GLenum usage)
PFNGLBUFFERDATAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
PFNGLBUFFERSUBDATAARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const GLvoid * data)
PFNGLBUFFERSUBDATAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCLAMPCOLORARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLIENTACTIVETEXTUREARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLORFRAGMENTOP1ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const GLvoid * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *po/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const GLvoid ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
PFNGLCOLORSUBTABLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
PFNGLCOLORTABLEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const GLvoid * table)
PFNGLCOLORTABLEPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * table)
PFNGLCOLORTABLESGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * table)
PFNGLCOMBINERINPUTNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * image)
PFNGLCONVOLUTIONFILTER1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * image)
PFNGLCONVOLUTIONFILTER2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOPYCOLORSUBTABLEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXIMAGE1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCREATEPROGRAMOBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADEROBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCULLPARAMETERDVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEFORMATIONMAP3DSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEOBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETETEXTURESEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDETACHOBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDRAWARRAYSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWBUFFERSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWMESHARRAYSSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWRANGEELEMENTSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLEDGEFLAGPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointe/;"	t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLELEMENTPOINTERAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLvoid * pointer)
PFNGLELEMENTPOINTERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLvoid * pointer)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDFRAGMENTSHADERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDQUERYARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDVERTEXSHADEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLEVALMAPSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTRACTCOMPONENTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLFINALCOMBINERINPUTNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHPIXELDATARANGENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,GLvoid * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoi/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLFOGFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEZOOMSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLGENASYNCMARKERSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENFENCESAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENOCCLUSIONQUERIESNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPROGRAMSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSYMBOLSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENVERTEXARRAYSAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATTRIBARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * obj)
PFNGLGETATTRIBLOCATIONARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBUFFERPARAMETERIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPOINTERVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERPOINTERVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERSUBDATAARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,GLvoid * data)
PFNGLGETBUFFERSUBDATAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLvoid * data)
PFNGLGETCOLORTABLEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * table)
PFNGLGETCOLORTABLESGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETCONVOLUTIONFILTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * image)
PFNGLGETCONVOLUTIONFILTERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETDETAILTEXFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETFENCEIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFOGFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETHANDLEARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINVARIANTBOOLEANVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLISTPARAMETERFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,GLvoid * points)
PFNGLGETMAPPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
PFNGLGETOBJECTBUFFERFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPOINTERVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLvoid ** params)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMINFOLOGPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMSTRINGARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *stri/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLvoid * string)
PFNGLGETPROGRAMSTRINGNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETQUERYIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * row,GLvoid * column,GLvoid * span)
PFNGLGETSEPARABLEFILTERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLvoid * row,GLvoid * column,GLvoid * span)
PFNGLGETSHADERINFOLOGPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERSOURCEARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXFILTERFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTRACKMATRIXIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETUNIFORMFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLvoid ** data)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLvoid ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid*/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLvoid ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLvoid ** pointer)
PFNGLGLOBALALPHAFACTORBSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLvoid * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLINDEXFUNCEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const GLvoid * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLINSERTCOMPONENTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSTRUMENTSBUFFERSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLISASYNCMARKERSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISFENCEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSHADERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISTEXTUREEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISVARIANTENABLEDEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLLIGHTENVISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLINKPROGRAMARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTPARAMETERFSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADPROGRAMNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOCKARRAYSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAPBUFFERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPCONTROLPOINTSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const GLvoid * points)
PFNGLMAPOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMATRIXINDEXPOINTERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLMATRIXINDEXUBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMINMAXEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMULTIDRAWARRAYSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint * first,GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint * first,GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const GLvoid * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXCOORD1DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLNEWOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLe/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const GLvoid * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMALPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const GLvoid * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid*/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLvoid ** pointer)
PFNGLNORMALSTREAM3BATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLPASSTEXCOORDATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPIXELDATARANGENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *point/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,GLvoid * pointer)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPNTRIANGLESFATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERFARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOLLASYNCSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPRIMITIVERESTARTINDEXNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPROGRAMENVPARAMETER4DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERS4DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint count,const GLfloat * v)
PFNGLPROGRAMSTRINGARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const GLvoid * string)
PFNGLREADINSTRUMENTSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREFERENCEPLANESGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRENDERBUFFERSTORAGEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const GLvoid ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSAMPLECOVERAGEARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSECONDARYCOLOR3BEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLSEPARABLEFILTER2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * row,const GLvoid * column)
PFNGLSEPARABLEFILTER2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * row,const GLvoid * column)
PFNGLSETFENCEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const GLvoid * addr)
PFNGLSETLOCALCONSTANTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *add/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const GLvoid * addr)
PFNGLSHADEROP1EXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *str/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar ** string,const GLint * length)
PFNGLSHARPENTEXFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTENCILFUNCSEPARATEATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTOPINSTRUMENTSSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei len,const GLvoid * string)
PFNGLSWIZZLEEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLTAGSAMPLEBUFFERSGIXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid */;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLTBUFFERMASK3DFXPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESTFENCEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORDPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const GLvoid * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* /;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const GLvoid ** pointer)
PFNGLTEXFILTERFUNCSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXIMAGE3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE4DSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE1DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXTURECOLORMASKSGISPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTURELIGHTEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTRACKMATRIXNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLUNIFORM1FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORMMATRIX2FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNLOCKARRAYSEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUPDATEOBJECTBUFFERATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const GLvoid * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const GLvoid * addr)
PFNGLVARIANTSVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVERTEX2HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,GLvoid * pointer)
PFNGLVERTEXARRAYRANGENVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLvoid * pointer)
PFNGLVERTEXATTRIB1DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBPOINTERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBLENDARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const GLvoid * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const GLvoid ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *p/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const GLvoid ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLWEIGHTBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPOINTERARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLWEIGHTSVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWRITEMASKEXTPROC	/usr/include/SDL/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
RW_SEEK_CUR	/usr/include/SDL/SDL_rwops.h	/^#define RW_SEEK_CUR	/;"	d
RW_SEEK_END	/usr/include/SDL/SDL_rwops.h	/^#define RW_SEEK_END	/;"	d
RW_SEEK_SET	/usr/include/SDL/SDL_rwops.h	/^#define RW_SEEK_SET	/;"	d
Rloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Rloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Rmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Rshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Rshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDLCALL	/usr/include/SDL/SDL_audio.h	/^	void (SDLCALL *callback)(void *userdata, Uint8 *stream, int len);$/;"	m	struct:SDL_AudioSpec	typeref:typename:void (* callback)(void * userdata,Uint8 * stream,int len)	access:public
SDLCALL	/usr/include/SDL/SDL_audio.h	/^	void (SDLCALL *filters[10])(struct SDL_AudioCVT *cvt, Uint16 format);$/;"	m	struct:SDL_AudioCVT	typeref:typename:void (* filters[10])(struct SDL_AudioCVT * cvt,Uint16 format)	access:public
SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *close)(struct SDL_RWops *context);$/;"	m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *read)(struct SDL_RWops *context, void *ptr, int size, int maxnum);$/;"	m	struct:SDL_RWops	typeref:typename:int (* read)(struct SDL_RWops * context,void * ptr,int size,int maxnum)	access:public
SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *seek)(struct SDL_RWops *context, int offset, int whence);$/;"	m	struct:SDL_RWops	typeref:typename:int (* seek)(struct SDL_RWops * context,int offset,int whence)	access:public
SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *write)(struct SDL_RWops *context, const void *ptr, int size, int num);$/;"	m	struct:SDL_RWops	typeref:typename:int (* write)(struct SDL_RWops * context,const void * ptr,int size,int num)	access:public
SDLCALL	/usr/include/SDL/begin_code.h	/^#   define SDLCALL /;"	d
SDLCALL	/usr/include/SDL/begin_code.h	/^#  define SDLCALL /;"	d
SDLCALL	/usr/include/SDL/begin_code.h	/^#  define SDLCALL$/;"	d
SDLK_0	/usr/include/SDL/SDL_keysym.h	/^	SDLK_0			= 48,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_1	/usr/include/SDL/SDL_keysym.h	/^	SDLK_1			= 49,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_2	/usr/include/SDL/SDL_keysym.h	/^	SDLK_2			= 50,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_3	/usr/include/SDL/SDL_keysym.h	/^	SDLK_3			= 51,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_4	/usr/include/SDL/SDL_keysym.h	/^	SDLK_4			= 52,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_5	/usr/include/SDL/SDL_keysym.h	/^	SDLK_5			= 53,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_6	/usr/include/SDL/SDL_keysym.h	/^	SDLK_6			= 54,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_7	/usr/include/SDL/SDL_keysym.h	/^	SDLK_7			= 55,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_8	/usr/include/SDL/SDL_keysym.h	/^	SDLK_8			= 56,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_9	/usr/include/SDL/SDL_keysym.h	/^	SDLK_9			= 57,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_AMPERSAND	/usr/include/SDL/SDL_keysym.h	/^	SDLK_AMPERSAND		= 38,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_ASTERISK	/usr/include/SDL/SDL_keysym.h	/^	SDLK_ASTERISK		= 42,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_AT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_AT			= 64,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_BACKQUOTE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_BACKQUOTE		= 96,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_BACKSLASH	/usr/include/SDL/SDL_keysym.h	/^	SDLK_BACKSLASH		= 92,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_BACKSPACE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_BACKSPACE		= 8,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_BREAK	/usr/include/SDL/SDL_keysym.h	/^	SDLK_BREAK		= 318,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_CAPSLOCK	/usr/include/SDL/SDL_keysym.h	/^	SDLK_CAPSLOCK		= 301,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_CARET	/usr/include/SDL/SDL_keysym.h	/^	SDLK_CARET		= 94,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_CLEAR	/usr/include/SDL/SDL_keysym.h	/^	SDLK_CLEAR		= 12,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_COLON	/usr/include/SDL/SDL_keysym.h	/^	SDLK_COLON		= 58,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_COMMA	/usr/include/SDL/SDL_keysym.h	/^	SDLK_COMMA		= 44,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_COMPOSE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_COMPOSE		= 314,		\/**< Multi-key compose key *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_DELETE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_DELETE		= 127,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_DOLLAR	/usr/include/SDL/SDL_keysym.h	/^	SDLK_DOLLAR		= 36,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_DOWN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_DOWN		= 274,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_END	/usr/include/SDL/SDL_keysym.h	/^	SDLK_END		= 279,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_EQUALS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_EQUALS		= 61,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_ESCAPE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_ESCAPE		= 27,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_EURO	/usr/include/SDL/SDL_keysym.h	/^	SDLK_EURO		= 321,		\/**< Some european keyboards *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_EXCLAIM	/usr/include/SDL/SDL_keysym.h	/^	SDLK_EXCLAIM		= 33,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F1	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F1			= 282,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F10	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F10		= 291,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F11	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F11		= 292,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F12	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F12		= 293,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F13	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F13		= 294,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F14	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F14		= 295,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F15	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F15		= 296,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F2	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F2			= 283,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F3	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F3			= 284,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F4	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F4			= 285,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F5	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F5			= 286,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F6	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F6			= 287,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F7	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F7			= 288,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F8	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F8			= 289,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_F9	/usr/include/SDL/SDL_keysym.h	/^	SDLK_F9			= 290,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_FIRST	/usr/include/SDL/SDL_keysym.h	/^	SDLK_FIRST		= 0,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_GREATER	/usr/include/SDL/SDL_keysym.h	/^	SDLK_GREATER		= 62,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_HASH	/usr/include/SDL/SDL_keysym.h	/^	SDLK_HASH		= 35,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_HELP	/usr/include/SDL/SDL_keysym.h	/^	SDLK_HELP		= 315,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_HOME	/usr/include/SDL/SDL_keysym.h	/^	SDLK_HOME		= 278,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_INSERT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_INSERT		= 277,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP0	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP0		= 256,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP1	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP1		= 257,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP2	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP2		= 258,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP3	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP3		= 259,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP4	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP4		= 260,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP5	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP5		= 261,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP6	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP6		= 262,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP7	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP7		= 263,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP8	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP8		= 264,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP9	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP9		= 265,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_DIVIDE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_DIVIDE		= 267,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_ENTER	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_ENTER		= 271,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_EQUALS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_EQUALS		= 272,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_MINUS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_MINUS		= 269,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_MULTIPLY	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_MULTIPLY	= 268,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_PERIOD	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_PERIOD		= 266,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_KP_PLUS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_KP_PLUS		= 270,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LALT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LALT		= 308,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LAST	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LAST$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LCTRL	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LCTRL		= 306,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LEFT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LEFT		= 276,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LEFTBRACKET	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LEFTBRACKET	= 91,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LEFTPAREN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LEFTPAREN		= 40,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LESS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LESS		= 60,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LMETA	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LMETA		= 310,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LSHIFT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LSHIFT		= 304,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_LSUPER	/usr/include/SDL/SDL_keysym.h	/^	SDLK_LSUPER		= 311,		\/**< Left "Windows" key *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_MENU	/usr/include/SDL/SDL_keysym.h	/^	SDLK_MENU		= 319,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_MINUS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_MINUS		= 45,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_MODE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_MODE		= 313,		\/**< "Alt Gr" key *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_NUMLOCK	/usr/include/SDL/SDL_keysym.h	/^	SDLK_NUMLOCK		= 300,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PAGEDOWN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PAGEDOWN		= 281,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PAGEUP	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PAGEUP		= 280,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PAUSE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PAUSE		= 19,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PERIOD	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PERIOD		= 46,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PLUS	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PLUS		= 43,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_POWER	/usr/include/SDL/SDL_keysym.h	/^	SDLK_POWER		= 320,		\/**< Power Macintosh power key *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_PRINT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_PRINT		= 316,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_QUESTION	/usr/include/SDL/SDL_keysym.h	/^	SDLK_QUESTION		= 63,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_QUOTE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_QUOTE		= 39,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_QUOTEDBL	/usr/include/SDL/SDL_keysym.h	/^	SDLK_QUOTEDBL		= 34,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RALT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RALT		= 307,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RCTRL	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RCTRL		= 305,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RETURN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RETURN		= 13,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RIGHT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RIGHT		= 275,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RIGHTBRACKET	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RIGHTBRACKET	= 93,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RIGHTPAREN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RIGHTPAREN		= 41,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RMETA	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RMETA		= 309,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RSHIFT	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RSHIFT		= 303,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_RSUPER	/usr/include/SDL/SDL_keysym.h	/^	SDLK_RSUPER		= 312,		\/**< Right "Windows" key *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_SCROLLOCK	/usr/include/SDL/SDL_keysym.h	/^	SDLK_SCROLLOCK		= 302,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_SEMICOLON	/usr/include/SDL/SDL_keysym.h	/^	SDLK_SEMICOLON		= 59,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_SLASH	/usr/include/SDL/SDL_keysym.h	/^	SDLK_SLASH		= 47,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_SPACE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_SPACE		= 32,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_SYSREQ	/usr/include/SDL/SDL_keysym.h	/^	SDLK_SYSREQ		= 317,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_TAB	/usr/include/SDL/SDL_keysym.h	/^	SDLK_TAB		= 9,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_UNDERSCORE	/usr/include/SDL/SDL_keysym.h	/^	SDLK_UNDERSCORE		= 95,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_UNDO	/usr/include/SDL/SDL_keysym.h	/^	SDLK_UNDO		= 322,		\/**< Atari keyboard has Undo *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_UNKNOWN	/usr/include/SDL/SDL_keysym.h	/^	SDLK_UNKNOWN		= 0,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_UP	/usr/include/SDL/SDL_keysym.h	/^	SDLK_UP			= 273,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_0	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_0		= 160,		\/* 0xA0 *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_1	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_1		= 161,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_10	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_10		= 170,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_11	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_11		= 171,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_12	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_12		= 172,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_13	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_13		= 173,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_14	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_14		= 174,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_15	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_15		= 175,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_16	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_16		= 176,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_17	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_17		= 177,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_18	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_18		= 178,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_19	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_19		= 179,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_2	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_2		= 162,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_20	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_20		= 180,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_21	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_21		= 181,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_22	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_22		= 182,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_23	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_23		= 183,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_24	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_24		= 184,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_25	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_25		= 185,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_26	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_26		= 186,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_27	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_27		= 187,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_28	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_28		= 188,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_29	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_29		= 189,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_3	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_3		= 163,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_30	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_30		= 190,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_31	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_31		= 191,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_32	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_32		= 192,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_33	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_33		= 193,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_34	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_34		= 194,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_35	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_35		= 195,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_36	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_36		= 196,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_37	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_37		= 197,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_38	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_38		= 198,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_39	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_39		= 199,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_4	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_4		= 164,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_40	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_40		= 200,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_41	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_41		= 201,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_42	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_42		= 202,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_43	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_43		= 203,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_44	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_44		= 204,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_45	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_45		= 205,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_46	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_46		= 206,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_47	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_47		= 207,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_48	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_48		= 208,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_49	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_49		= 209,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_5	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_5		= 165,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_50	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_50		= 210,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_51	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_51		= 211,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_52	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_52		= 212,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_53	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_53		= 213,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_54	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_54		= 214,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_55	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_55		= 215,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_56	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_56		= 216,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_57	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_57		= 217,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_58	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_58		= 218,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_59	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_59		= 219,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_6	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_6		= 166,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_60	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_60		= 220,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_61	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_61		= 221,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_62	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_62		= 222,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_63	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_63		= 223,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_64	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_64		= 224,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_65	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_65		= 225,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_66	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_66		= 226,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_67	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_67		= 227,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_68	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_68		= 228,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_69	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_69		= 229,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_7	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_7		= 167,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_70	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_70		= 230,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_71	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_71		= 231,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_72	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_72		= 232,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_73	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_73		= 233,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_74	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_74		= 234,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_75	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_75		= 235,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_76	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_76		= 236,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_77	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_77		= 237,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_78	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_78		= 238,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_79	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_79		= 239,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_8	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_8		= 168,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_80	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_80		= 240,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_81	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_81		= 241,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_82	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_82		= 242,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_83	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_83		= 243,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_84	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_84		= 244,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_85	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_85		= 245,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_86	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_86		= 246,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_87	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_87		= 247,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_88	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_88		= 248,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_89	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_89		= 249,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_9	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_9		= 169,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_90	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_90		= 250,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_91	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_91		= 251,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_92	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_92		= 252,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_93	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_93		= 253,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_94	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_94		= 254,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_WORLD_95	/usr/include/SDL/SDL_keysym.h	/^	SDLK_WORLD_95		= 255,		\/* 0xFF *\/$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_a	/usr/include/SDL/SDL_keysym.h	/^	SDLK_a			= 97,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_b	/usr/include/SDL/SDL_keysym.h	/^	SDLK_b			= 98,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_c	/usr/include/SDL/SDL_keysym.h	/^	SDLK_c			= 99,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_d	/usr/include/SDL/SDL_keysym.h	/^	SDLK_d			= 100,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_e	/usr/include/SDL/SDL_keysym.h	/^	SDLK_e			= 101,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_f	/usr/include/SDL/SDL_keysym.h	/^	SDLK_f			= 102,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_g	/usr/include/SDL/SDL_keysym.h	/^	SDLK_g			= 103,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_h	/usr/include/SDL/SDL_keysym.h	/^	SDLK_h			= 104,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_i	/usr/include/SDL/SDL_keysym.h	/^	SDLK_i			= 105,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_j	/usr/include/SDL/SDL_keysym.h	/^	SDLK_j			= 106,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_k	/usr/include/SDL/SDL_keysym.h	/^	SDLK_k			= 107,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_l	/usr/include/SDL/SDL_keysym.h	/^	SDLK_l			= 108,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_m	/usr/include/SDL/SDL_keysym.h	/^	SDLK_m			= 109,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_n	/usr/include/SDL/SDL_keysym.h	/^	SDLK_n			= 110,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_o	/usr/include/SDL/SDL_keysym.h	/^	SDLK_o			= 111,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_p	/usr/include/SDL/SDL_keysym.h	/^	SDLK_p			= 112,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_q	/usr/include/SDL/SDL_keysym.h	/^	SDLK_q			= 113,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_r	/usr/include/SDL/SDL_keysym.h	/^	SDLK_r			= 114,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_s	/usr/include/SDL/SDL_keysym.h	/^	SDLK_s			= 115,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_t	/usr/include/SDL/SDL_keysym.h	/^	SDLK_t			= 116,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_u	/usr/include/SDL/SDL_keysym.h	/^	SDLK_u			= 117,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_v	/usr/include/SDL/SDL_keysym.h	/^	SDLK_v			= 118,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_w	/usr/include/SDL/SDL_keysym.h	/^	SDLK_w			= 119,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_x	/usr/include/SDL/SDL_keysym.h	/^	SDLK_x			= 120,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_y	/usr/include/SDL/SDL_keysym.h	/^	SDLK_y			= 121,$/;"	e	enum:__anon188e16bc0103	access:public
SDLK_z	/usr/include/SDL/SDL_keysym.h	/^	SDLK_z			= 122,$/;"	e	enum:__anon188e16bc0103	access:public
SDLKey	/usr/include/SDL/SDL_keysym.h	/^} SDLKey;$/;"	t	typeref:enum:__anon188e16bc0103
SDLMod	/usr/include/SDL/SDL_keysym.h	/^} SDLMod;$/;"	t	typeref:enum:__anon188e16bc0203
SDLNET_MAX_UDPADDRESSES	/usr/include/SDL/SDL_net.h	/^#define SDLNET_MAX_UDPADDRESSES	/;"	d
SDLNET_MAX_UDPCHANNELS	/usr/include/SDL/SDL_net.h	/^#define SDLNET_MAX_UDPCHANNELS	/;"	d
SDLNet_AddSocket	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_AddSocket(SDLNet_SocketSet set, SDLNet_GenericSocket sock);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,SDLNet_GenericSocket sock)
SDLNet_AllocPacket	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC UDPpacket * SDLCALL SDLNet_AllocPacket(int size);$/;"	p	typeref:typename:DECLSPEC UDPpacket * SDLCALL	signature:(int size)
SDLNet_AllocPacketV	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC UDPpacket ** SDLCALL SDLNet_AllocPacketV(int howmany, int size);$/;"	p	typeref:typename:DECLSPEC UDPpacket ** SDLCALL	signature:(int howmany,int size)
SDLNet_AllocSocketSet	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC SDLNet_SocketSet SDLCALL SDLNet_AllocSocketSet(int maxsockets);$/;"	p	typeref:typename:DECLSPEC SDLNet_SocketSet SDLCALL	signature:(int maxsockets)
SDLNet_CheckSockets	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_CheckSockets(SDLNet_SocketSet set, Uint32 timeout);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,Uint32 timeout)
SDLNet_DelSocket	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_DelSocket(SDLNet_SocketSet set, SDLNet_GenericSocket sock);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDLNet_SocketSet set,SDLNet_GenericSocket sock)
SDLNet_FreePacket	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreePacket(UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPpacket * packet)
SDLNet_FreePacketV	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreePacketV(UDPpacket **packetV);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPpacket ** packetV)
SDLNet_FreeSocketSet	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_FreeSocketSet(SDLNet_SocketSet set);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDLNet_SocketSet set)
SDLNet_GenericSocket	/usr/include/SDL/SDL_net.h	/^} *SDLNet_GenericSocket;$/;"	t	typeref:struct:_SDLNet_GenericSocket *
SDLNet_GetError	/usr/include/SDL/SDL_net.h	/^#define SDLNet_GetError	/;"	d
SDLNet_GetLocalAddresses	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_GetLocalAddresses(IPaddress *addresses, int maxcount);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(IPaddress * addresses,int maxcount)
SDLNet_Init	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int  SDLCALL SDLNet_Init(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDLNet_Linked_Version	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC const SDL_version * SDLCALL SDLNet_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
SDLNet_Quit	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDLNet_Read16	/usr/include/SDL/SDL_net.h	/^#define SDLNet_Read16(/;"	d	signature:(areap)
SDLNet_Read16	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC Uint16 SDLCALL SDLNet_Read16(void *area);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(void * area)
SDLNet_Read32	/usr/include/SDL/SDL_net.h	/^#define SDLNet_Read32(/;"	d	signature:(areap)
SDLNet_Read32	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC Uint32 SDLCALL SDLNet_Read32(void *area);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(void * area)
SDLNet_ResizePacket	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_ResizePacket(UDPpacket *packet, int newsize);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPpacket * packet,int newsize)
SDLNet_ResolveHost	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_ResolveHost(IPaddress *address, const char *host, Uint16 port/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(IPaddress * address,const char * host,Uint16 port)
SDLNet_ResolveIP	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC const char * SDLCALL SDLNet_ResolveIP(const IPaddress *ip);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(const IPaddress * ip)
SDLNet_SetError	/usr/include/SDL/SDL_net.h	/^#define SDLNet_SetError	/;"	d
SDLNet_SocketReady	/usr/include/SDL/SDL_net.h	/^#define SDLNet_SocketReady(/;"	d	signature:(sock)
SDLNet_SocketSet	/usr/include/SDL/SDL_net.h	/^typedef struct _SDLNet_SocketSet *SDLNet_SocketSet;$/;"	t	typeref:struct:_SDLNet_SocketSet *
SDLNet_TCP_Accept	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC TCPsocket SDLCALL SDLNet_TCP_Accept(TCPsocket server);$/;"	p	typeref:typename:DECLSPEC TCPsocket SDLCALL	signature:(TCPsocket server)
SDLNet_TCP_AddSocket	/usr/include/SDL/SDL_net.h	/^#define SDLNet_TCP_AddSocket(/;"	d	signature:(set,sock)
SDLNet_TCP_Close	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_TCP_Close(TCPsocket sock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TCPsocket sock)
SDLNet_TCP_DelSocket	/usr/include/SDL/SDL_net.h	/^#define SDLNet_TCP_DelSocket(/;"	d	signature:(set,sock)
SDLNet_TCP_GetPeerAddress	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC IPaddress * SDLCALL SDLNet_TCP_GetPeerAddress(TCPsocket sock);$/;"	p	typeref:typename:DECLSPEC IPaddress * SDLCALL	signature:(TCPsocket sock)
SDLNet_TCP_Open	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC TCPsocket SDLCALL SDLNet_TCP_Open(IPaddress *ip);$/;"	p	typeref:typename:DECLSPEC TCPsocket SDLCALL	signature:(IPaddress * ip)
SDLNet_TCP_Recv	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_TCP_Recv(TCPsocket sock, void *data, int maxlen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TCPsocket sock,void * data,int maxlen)
SDLNet_TCP_Send	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_TCP_Send(TCPsocket sock, const void *data,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TCPsocket sock,const void * data,int len)
SDLNet_UDP_AddSocket	/usr/include/SDL/SDL_net.h	/^#define SDLNet_UDP_AddSocket(/;"	d	signature:(set,sock)
SDLNet_UDP_Bind	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Bind(UDPsocket sock, int channel, const IPaddress *addres/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,int channel,const IPaddress * address)
SDLNet_UDP_Close	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_Close(UDPsocket sock);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock)
SDLNet_UDP_DelSocket	/usr/include/SDL/SDL_net.h	/^#define SDLNet_UDP_DelSocket(/;"	d	signature:(set,sock)
SDLNet_UDP_GetPeerAddress	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC IPaddress * SDLCALL SDLNet_UDP_GetPeerAddress(UDPsocket sock, int channel);$/;"	p	typeref:typename:DECLSPEC IPaddress * SDLCALL	signature:(UDPsocket sock,int channel)
SDLNet_UDP_Open	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC UDPsocket SDLCALL SDLNet_UDP_Open(Uint16 port);$/;"	p	typeref:typename:DECLSPEC UDPsocket SDLCALL	signature:(Uint16 port)
SDLNet_UDP_Recv	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Recv(UDPsocket sock, UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket * packet)
SDLNet_UDP_RecvV	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_RecvV(UDPsocket sock, UDPpacket **packets);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket ** packets)
SDLNet_UDP_Send	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_Send(UDPsocket sock, int channel, UDPpacket *packet);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,int channel,UDPpacket * packet)
SDLNet_UDP_SendV	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC int SDLCALL SDLNet_UDP_SendV(UDPsocket sock, UDPpacket **packets, int npackets);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(UDPsocket sock,UDPpacket ** packets,int npackets)
SDLNet_UDP_SetPacketLoss	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_SetPacketLoss(UDPsocket sock, int percent);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock,int percent)
SDLNet_UDP_Unbind	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_UDP_Unbind(UDPsocket sock, int channel);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(UDPsocket sock,int channel)
SDLNet_Write16	/usr/include/SDL/SDL_net.h	/^#define SDLNet_Write16(/;"	d	signature:(value,areap)
SDLNet_Write16	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_Write16(Uint16 value, void *area);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint16 value,void * area)
SDLNet_Write32	/usr/include/SDL/SDL_net.h	/^#define SDLNet_Write32(/;"	d	signature:(value,areap)
SDLNet_Write32	/usr/include/SDL/SDL_net.h	/^extern DECLSPEC void SDLCALL SDLNet_Write32(Uint32 value, void *area);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 value,void * area)
SDL_ACTIVEEVENT	/usr/include/SDL/SDL_events.h	/^       SDL_ACTIVEEVENT,			\/**< Application loses\/gains visibility *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_ACTIVEEVENTMASK	/usr/include/SDL/SDL_events.h	/^	SDL_ACTIVEEVENTMASK	= SDL_EVENTMASK(SDL_ACTIVEEVENT),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_ADDEVENT	/usr/include/SDL/SDL_events.h	/^	SDL_ADDEVENT,$/;"	e	enum:__anon7c9cd6cf0303	access:public
SDL_ALLEVENTS	/usr/include/SDL/SDL_events.h	/^#define SDL_ALLEVENTS	/;"	d
SDL_ALL_HOTKEYS	/usr/include/SDL/SDL_keyboard.h	/^#define SDL_ALL_HOTKEYS	/;"	d
SDL_ALPHA_OPAQUE	/usr/include/SDL/SDL_video.h	/^#define SDL_ALPHA_OPAQUE /;"	d
SDL_ALPHA_TRANSPARENT	/usr/include/SDL/SDL_video.h	/^#define SDL_ALPHA_TRANSPARENT /;"	d
SDL_ANYFORMAT	/usr/include/SDL/SDL_video.h	/^#define SDL_ANYFORMAT	/;"	d
SDL_APPACTIVE	/usr/include/SDL/SDL_active.h	/^#define SDL_APPACTIVE	/;"	d
SDL_APPINPUTFOCUS	/usr/include/SDL/SDL_active.h	/^#define SDL_APPINPUTFOCUS	/;"	d
SDL_APPMOUSEFOCUS	/usr/include/SDL/SDL_active.h	/^#define SDL_APPMOUSEFOCUS	/;"	d
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL/SDL_config.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	d
SDL_ASYNCBLIT	/usr/include/SDL/SDL_video.h	/^#define SDL_ASYNCBLIT	/;"	d
SDL_AUDIO_DRIVER_ALSA	/usr/include/SDL/SDL_config.h	/^#define SDL_AUDIO_DRIVER_ALSA /;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL/SDL_config.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL/SDL_config.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	d
SDL_AUDIO_DRIVER_OSS	/usr/include/SDL/SDL_config.h	/^#define SDL_AUDIO_DRIVER_OSS /;"	d
SDL_AUDIO_DRIVER_PULSE	/usr/include/SDL/SDL_config.h	/^#define SDL_AUDIO_DRIVER_PULSE /;"	d
SDL_AUDIO_PAUSED	/usr/include/SDL/SDL_audio.h	/^	SDL_AUDIO_PAUSED$/;"	e	enum:__anon1345158c0103	access:public
SDL_AUDIO_PLAYING	/usr/include/SDL/SDL_audio.h	/^	SDL_AUDIO_PLAYING,$/;"	e	enum:__anon1345158c0103	access:public
SDL_AUDIO_STOPPED	/usr/include/SDL/SDL_audio.h	/^	SDL_AUDIO_STOPPED = 0,$/;"	e	enum:__anon1345158c0103	access:public
SDL_AUDIO_TRACK	/usr/include/SDL/SDL_cdrom.h	/^#define SDL_AUDIO_TRACK	/;"	d
SDL_ActiveEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_ActiveEvent {$/;"	s
SDL_ActiveEvent	/usr/include/SDL/SDL_events.h	/^} SDL_ActiveEvent;$/;"	t	typeref:struct:SDL_ActiveEvent
SDL_ActiveEvent::gain	/usr/include/SDL/SDL_events.h	/^	Uint8 gain;	\/**< Whether given states were gained or lost (1\/0) *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
SDL_ActiveEvent::state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< A mask of the focus states *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
SDL_ActiveEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_ACTIVEEVENT *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
SDL_AddTimer	/usr/include/SDL/SDL_timer.h	/^extern DECLSPEC SDL_TimerID SDLCALL SDL_AddTimer(Uint32 interval, SDL_NewTimerCallback callback,/;"	p	typeref:typename:DECLSPEC SDL_TimerID SDLCALL	signature:(Uint32 interval,SDL_NewTimerCallback callback,void * param)
SDL_AllocRW	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC SDL_RWops * SDLCALL SDL_AllocRW(void);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void)
SDL_AllocSurface	/usr/include/SDL/SDL_video.h	/^#define SDL_AllocSurface /;"	d
SDL_AudioCVT	/usr/include/SDL/SDL_audio.h	/^typedef struct SDL_AudioCVT {$/;"	s
SDL_AudioCVT	/usr/include/SDL/SDL_audio.h	/^} SDL_AudioCVT;$/;"	t	typeref:struct:SDL_AudioCVT
SDL_AudioCVT::SDLCALL	/usr/include/SDL/SDL_audio.h	/^	void (SDLCALL *filters[10])(struct SDL_AudioCVT *cvt, Uint16 format);$/;"	m	struct:SDL_AudioCVT	typeref:typename:void (* filters[10])(struct SDL_AudioCVT * cvt,Uint16 format)	access:public
SDL_AudioCVT::buf	/usr/include/SDL/SDL_audio.h	/^	Uint8 *buf;			\/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
SDL_AudioCVT::dst_format	/usr/include/SDL/SDL_audio.h	/^	Uint16 dst_format;		\/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint16	access:public
SDL_AudioCVT::filter_index	/usr/include/SDL/SDL_audio.h	/^	int filter_index;		\/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len	/usr/include/SDL/SDL_audio.h	/^	int    len;			\/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_cvt	/usr/include/SDL/SDL_audio.h	/^	int    len_cvt;			\/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_mult	/usr/include/SDL/SDL_audio.h	/^	int    len_mult;		\/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_ratio	/usr/include/SDL/SDL_audio.h	/^	double len_ratio; 	\/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::needed	/usr/include/SDL/SDL_audio.h	/^	int needed;			\/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::rate_incr	/usr/include/SDL/SDL_audio.h	/^	double rate_incr;		\/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::src_format	/usr/include/SDL/SDL_audio.h	/^	Uint16 src_format;		\/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint16	access:public
SDL_AudioDriverName	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC char * SDLCALL SDL_AudioDriverName(char *namebuf, int maxlen);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * namebuf,int maxlen)
SDL_AudioInit	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioInit(const char *driver_name);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name)
SDL_AudioQuit	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioQuit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_AudioSpec	/usr/include/SDL/SDL_audio.h	/^typedef struct SDL_AudioSpec {$/;"	s
SDL_AudioSpec	/usr/include/SDL/SDL_audio.h	/^} SDL_AudioSpec;$/;"	t	typeref:struct:SDL_AudioSpec
SDL_AudioSpec::SDLCALL	/usr/include/SDL/SDL_audio.h	/^	void (SDLCALL *callback)(void *userdata, Uint8 *stream, int len);$/;"	m	struct:SDL_AudioSpec	typeref:typename:void (* callback)(void * userdata,Uint8 * stream,int len)	access:public
SDL_AudioSpec::channels	/usr/include/SDL/SDL_audio.h	/^	Uint8  channels;	\/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::format	/usr/include/SDL/SDL_audio.h	/^	Uint16 format;		\/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::freq	/usr/include/SDL/SDL_audio.h	/^	int freq;		\/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:int	access:public
SDL_AudioSpec::padding	/usr/include/SDL/SDL_audio.h	/^	Uint16 padding;		\/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::samples	/usr/include/SDL/SDL_audio.h	/^	Uint16 samples;		\/**< Audio buffer size in samples (power of 2) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::silence	/usr/include/SDL/SDL_audio.h	/^	Uint8  silence;		\/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::size	/usr/include/SDL/SDL_audio.h	/^	Uint32 size;		\/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
SDL_AudioSpec::userdata	/usr/include/SDL/SDL_audio.h	/^	void  *userdata;$/;"	m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
SDL_BIG_ENDIAN	/usr/include/SDL/SDL_endian.h	/^#define SDL_BIG_ENDIAN	/;"	d
SDL_BUTTON	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON(/;"	d	signature:(X)
SDL_BUTTON_LEFT	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_LEFT	/;"	d
SDL_BUTTON_LMASK	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_LMASK	/;"	d
SDL_BUTTON_MIDDLE	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_MIDDLE	/;"	d
SDL_BUTTON_MMASK	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_MMASK	/;"	d
SDL_BUTTON_RIGHT	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_RIGHT	/;"	d
SDL_BUTTON_RMASK	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_RMASK	/;"	d
SDL_BUTTON_WHEELDOWN	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_WHEELDOWN	/;"	d
SDL_BUTTON_WHEELUP	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_WHEELUP	/;"	d
SDL_BUTTON_X1	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_X1	/;"	d
SDL_BUTTON_X1MASK	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_X1MASK	/;"	d
SDL_BUTTON_X2	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_X2	/;"	d
SDL_BUTTON_X2MASK	/usr/include/SDL/SDL_mouse.h	/^#define SDL_BUTTON_X2MASK	/;"	d
SDL_BYTEORDER	/usr/include/SDL/SDL_config.h	/^#define SDL_BYTEORDER /;"	d
SDL_BYTEORDER	/usr/include/SDL/SDL_endian.h	/^#define SDL_BYTEORDER	/;"	d
SDL_BYTEORDER	/usr/include/SDL/SDL_endian.h	/^#define SDL_BYTEORDER /;"	d
SDL_BlitSurface	/usr/include/SDL/SDL_video.h	/^#define SDL_BlitSurface /;"	d
SDL_BuildAudioCVT	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT *cvt,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt,Uint16 src_format,Uint8 src_channels,int src_rate,Uint16 dst_format,Uint8 dst_channels,int dst_rate)
SDL_CD	/usr/include/SDL/SDL_cdrom.h	/^typedef struct SDL_CD {$/;"	s
SDL_CD	/usr/include/SDL/SDL_cdrom.h	/^} SDL_CD;$/;"	t	typeref:struct:SDL_CD
SDL_CD::cur_frame	/usr/include/SDL/SDL_cdrom.h	/^	int cur_frame;		\/**< Current frame offset within current track *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
SDL_CD::cur_track	/usr/include/SDL/SDL_cdrom.h	/^	int cur_track;		\/**< Current track position *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
SDL_CD::id	/usr/include/SDL/SDL_cdrom.h	/^	int id;			\/**< Private drive identifier *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
SDL_CD::numtracks	/usr/include/SDL/SDL_cdrom.h	/^	int numtracks;		\/**< Number of tracks on disk *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
SDL_CD::status	/usr/include/SDL/SDL_cdrom.h	/^	CDstatus status;	\/**< Current drive status *\/$/;"	m	struct:SDL_CD	typeref:typename:CDstatus	access:public
SDL_CD::track	/usr/include/SDL/SDL_cdrom.h	/^	SDL_CDtrack track[SDL_MAX_TRACKS+1];$/;"	m	struct:SDL_CD	typeref:typename:SDL_CDtrack[]	access:public
SDL_CDClose	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC void SDLCALL SDL_CDClose(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDEject	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDEject(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDName	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC const char * SDLCALL SDL_CDName(int drive);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int drive)
SDL_CDNumDrives	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDNumDrives(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_CDOpen	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC SDL_CD * SDLCALL SDL_CDOpen(int drive);$/;"	p	typeref:typename:DECLSPEC SDL_CD * SDLCALL	signature:(int drive)
SDL_CDPause	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDPause(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDPlay	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDPlay(SDL_CD *cdrom, int start, int length);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom,int start,int length)
SDL_CDPlayTracks	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDPlayTracks(SDL_CD *cdrom,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom,int start_track,int start_frame,int ntracks,int nframes)
SDL_CDROM_LINUX	/usr/include/SDL/SDL_config.h	/^#define SDL_CDROM_LINUX /;"	d
SDL_CDResume	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDResume(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDStatus	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC CDstatus SDLCALL SDL_CDStatus(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC CDstatus SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDStop	/usr/include/SDL/SDL_cdrom.h	/^extern DECLSPEC int SDLCALL SDL_CDStop(SDL_CD *cdrom);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_CD * cdrom)
SDL_CDtrack	/usr/include/SDL/SDL_cdrom.h	/^typedef struct SDL_CDtrack {$/;"	s
SDL_CDtrack	/usr/include/SDL/SDL_cdrom.h	/^} SDL_CDtrack;$/;"	t	typeref:struct:SDL_CDtrack
SDL_CDtrack::id	/usr/include/SDL/SDL_cdrom.h	/^	Uint8 id;		\/**< Track number *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint8	access:public
SDL_CDtrack::length	/usr/include/SDL/SDL_cdrom.h	/^	Uint32 length;		\/**< Length, in frames, of this track *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint32	access:public
SDL_CDtrack::offset	/usr/include/SDL/SDL_cdrom.h	/^	Uint32 offset;		\/**< Offset, in frames, from start of disk *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint32	access:public
SDL_CDtrack::type	/usr/include/SDL/SDL_cdrom.h	/^	Uint8 type;		\/**< Data or audio track *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint8	access:public
SDL_CDtrack::unused	/usr/include/SDL/SDL_cdrom.h	/^	Uint16 unused;$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint16	access:public
SDL_COMPILEDVERSION	/usr/include/SDL/SDL_version.h	/^#define SDL_COMPILEDVERSION /;"	d
SDL_COMPILE_TIME_ASSERT	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_COMPILE_TIME_ASSERT(/;"	d	signature:(name,x)
SDL_ClearError	/usr/include/SDL/SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_ClearError(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_CloseAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Color	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_Color {$/;"	s
SDL_Color	/usr/include/SDL/SDL_video.h	/^} SDL_Color;$/;"	t	typeref:struct:SDL_Color
SDL_Color::b	/usr/include/SDL/SDL_video.h	/^	Uint8 b;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::g	/usr/include/SDL/SDL_video.h	/^	Uint8 g;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::r	/usr/include/SDL/SDL_video.h	/^	Uint8 r;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::unused	/usr/include/SDL/SDL_video.h	/^	Uint8 unused;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Colour	/usr/include/SDL/SDL_video.h	/^#define SDL_Colour /;"	d
SDL_CondBroadcast	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondBroadcast(SDL_cond *cond);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondSignal	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondSignal(SDL_cond *cond);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondWait	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWait(SDL_cond *cond, SDL_mutex *mut);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mut)
SDL_CondWaitTimeout	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond *cond, SDL_mutex *mutex, Uint32 ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mutex,Uint32 ms)
SDL_ConvertAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_ConvertAudio(SDL_AudioCVT *cvt);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt)
SDL_ConvertSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_ConvertSurface$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * src,SDL_PixelFormat * fmt,Uint32 flags)
SDL_CreateCond	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC SDL_cond * SDLCALL SDL_CreateCond(void);$/;"	p	typeref:typename:DECLSPEC SDL_cond * SDLCALL	signature:(void)
SDL_CreateCursor	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor * SDLCALL SDL_CreateCursor$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(Uint8 * data,Uint8 * mask,int w,int h,int hot_x,int hot_y)
SDL_CreateMutex	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC SDL_mutex * SDLCALL SDL_CreateMutex(void);$/;"	p	typeref:typename:DECLSPEC SDL_mutex * SDLCALL	signature:(void)
SDL_CreateRGBSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_CreateRGBSurface$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(Uint32 flags,int width,int height,int depth,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateRGBSurfaceFrom	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_CreateRGBSurfaceFrom(void *pixels,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void * pixels,int width,int height,int depth,int pitch,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateSemaphore	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC SDL_sem * SDLCALL SDL_CreateSemaphore(Uint32 initial_value);$/;"	p	typeref:typename:DECLSPEC SDL_sem * SDLCALL	signature:(Uint32 initial_value)
SDL_CreateThread	/usr/include/SDL/SDL_thread.h	/^#define SDL_CreateThread(/;"	d	signature:(fn,data)
SDL_CreateThread	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC SDL_Thread * SDLCALL SDL_CreateThread(int (SDLCALL *fn)(void *), void *data);$/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(int (SDLCALL * fn)(void *),void * data)
SDL_CreateThread	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC SDL_Thread * SDLCALL SDL_CreateThread(int (SDLCALL *fn)(void *), void *data, pfn/;"	p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(int (SDLCALL * fn)(void *),void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateYUVOverlay	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Overlay * SDLCALL SDL_CreateYUVOverlay(int width, int height,$/;"	p	typeref:typename:DECLSPEC SDL_Overlay * SDLCALL	signature:(int width,int height,Uint32 format,SDL_Surface * display)
SDL_Cursor	/usr/include/SDL/SDL_mouse.h	/^typedef struct SDL_Cursor {$/;"	s
SDL_Cursor	/usr/include/SDL/SDL_mouse.h	/^} SDL_Cursor;$/;"	t	typeref:struct:SDL_Cursor
SDL_Cursor::area	/usr/include/SDL/SDL_mouse.h	/^	SDL_Rect area;			\/**< The area of the mouse cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:SDL_Rect	access:public
SDL_Cursor::data	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *data;			\/**< B\/W cursor data *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 *	access:public
SDL_Cursor::hot_x	/usr/include/SDL/SDL_mouse.h	/^	Sint16 hot_x, hot_y;		\/**< The "tip" of the cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Sint16	access:public
SDL_Cursor::hot_y	/usr/include/SDL/SDL_mouse.h	/^	Sint16 hot_x, hot_y;		\/**< The "tip" of the cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Sint16	access:public
SDL_Cursor::mask	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *mask;			\/**< B\/W cursor mask *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 *	access:public
SDL_Cursor::save	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *save[2];			\/**< Place to save cursor area *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 * [2]	access:public
SDL_Cursor::wm_cursor	/usr/include/SDL/SDL_mouse.h	/^	WMcursor *wm_cursor;		\/**< Window-manager cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:WMcursor *	access:public
SDL_DATA_ALIGNED	/usr/include/SDL/SDL_net.h	/^#define SDL_DATA_ALIGNED	/;"	d
SDL_DATA_TRACK	/usr/include/SDL/SDL_cdrom.h	/^#define SDL_DATA_TRACK	/;"	d
SDL_DEFAULT_REPEAT_DELAY	/usr/include/SDL/SDL_keyboard.h	/^#define SDL_DEFAULT_REPEAT_DELAY	/;"	d
SDL_DEFAULT_REPEAT_INTERVAL	/usr/include/SDL/SDL_keyboard.h	/^#define SDL_DEFAULT_REPEAT_INTERVAL	/;"	d
SDL_DISABLE	/usr/include/SDL/SDL_events.h	/^#define SDL_DISABLE	/;"	d
SDL_DOUBLEBUF	/usr/include/SDL/SDL_video.h	/^#define SDL_DOUBLEBUF	/;"	d
SDL_DUMMY_ENUM	/usr/include/SDL/SDL_stdinc.h	/^} SDL_DUMMY_ENUM;$/;"	t	typeref:enum:__anoncb8ed01f0303
SDL_Delay	/usr/include/SDL/SDL_timer.h	/^extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 ms)
SDL_DestroyCond	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyCond(SDL_cond *cond);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_cond * cond)
SDL_DestroyMutex	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyMutex(SDL_mutex *mutex);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_mutex * mutex)
SDL_DestroySemaphore	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroySemaphore(SDL_sem *sem);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_sem * sem)
SDL_DisplayFormat	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_DisplayFormat(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * surface)
SDL_DisplayFormatAlpha	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_DisplayFormatAlpha(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * surface)
SDL_DisplayYUVOverlay	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_DisplayYUVOverlay(SDL_Overlay *overlay, SDL_Rect *dstrect);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Overlay * overlay,SDL_Rect * dstrect)
SDL_EFREAD	/usr/include/SDL/SDL_error.h	/^	SDL_EFREAD,$/;"	e	enum:__anon412f3cc40103	access:public
SDL_EFSEEK	/usr/include/SDL/SDL_error.h	/^	SDL_EFSEEK,$/;"	e	enum:__anon412f3cc40103	access:public
SDL_EFWRITE	/usr/include/SDL/SDL_error.h	/^	SDL_EFWRITE,$/;"	e	enum:__anon412f3cc40103	access:public
SDL_ENABLE	/usr/include/SDL/SDL_events.h	/^#define SDL_ENABLE	/;"	d
SDL_ENOMEM	/usr/include/SDL/SDL_error.h	/^	SDL_ENOMEM,$/;"	e	enum:__anon412f3cc40103	access:public
SDL_EVENTMASK	/usr/include/SDL/SDL_events.h	/^#define SDL_EVENTMASK(/;"	d	signature:(X)
SDL_EVENT_RESERVED2	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED2,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVED3	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED3,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVED4	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED4,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVED5	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED5,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVED6	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED6,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVED7	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVED7,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVEDA	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVEDA,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EVENT_RESERVEDB	/usr/include/SDL/SDL_events.h	/^       SDL_EVENT_RESERVEDB,		\/**< Reserved for future use.. *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_EnableKeyRepeat	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC int SDLCALL SDL_EnableKeyRepeat(int delay, int interval);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int delay,int interval)
SDL_EnableUNICODE	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC int SDLCALL SDL_EnableUNICODE(int enable);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int enable)
SDL_Error	/usr/include/SDL/SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_Error(SDL_errorcode code);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_errorcode code)
SDL_Event	/usr/include/SDL/SDL_events.h	/^typedef union SDL_Event {$/;"	u
SDL_Event	/usr/include/SDL/SDL_events.h	/^} SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event::active	/usr/include/SDL/SDL_events.h	/^	SDL_ActiveEvent active;$/;"	m	union:SDL_Event	typeref:typename:SDL_ActiveEvent	access:public
SDL_Event::button	/usr/include/SDL/SDL_events.h	/^	SDL_MouseButtonEvent button;$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
SDL_Event::expose	/usr/include/SDL/SDL_events.h	/^	SDL_ExposeEvent expose;$/;"	m	union:SDL_Event	typeref:typename:SDL_ExposeEvent	access:public
SDL_Event::jaxis	/usr/include/SDL/SDL_events.h	/^	SDL_JoyAxisEvent jaxis;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
SDL_Event::jball	/usr/include/SDL/SDL_events.h	/^	SDL_JoyBallEvent jball;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
SDL_Event::jbutton	/usr/include/SDL/SDL_events.h	/^	SDL_JoyButtonEvent jbutton;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
SDL_Event::jhat	/usr/include/SDL/SDL_events.h	/^	SDL_JoyHatEvent jhat;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
SDL_Event::key	/usr/include/SDL/SDL_events.h	/^	SDL_KeyboardEvent key;$/;"	m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
SDL_Event::motion	/usr/include/SDL/SDL_events.h	/^	SDL_MouseMotionEvent motion;$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
SDL_Event::quit	/usr/include/SDL/SDL_events.h	/^	SDL_QuitEvent quit;$/;"	m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
SDL_Event::resize	/usr/include/SDL/SDL_events.h	/^	SDL_ResizeEvent resize;$/;"	m	union:SDL_Event	typeref:typename:SDL_ResizeEvent	access:public
SDL_Event::syswm	/usr/include/SDL/SDL_events.h	/^	SDL_SysWMEvent syswm;$/;"	m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
SDL_Event::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;$/;"	m	union:SDL_Event	typeref:typename:Uint8	access:public
SDL_Event::user	/usr/include/SDL/SDL_events.h	/^	SDL_UserEvent user;$/;"	m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
SDL_EventFilter	/usr/include/SDL/SDL_events.h	/^typedef int (SDLCALL *SDL_EventFilter)(const SDL_Event *event);$/;"	t	typeref:typename:int (SDLCALL *)(const SDL_Event * event)
SDL_EventMask	/usr/include/SDL/SDL_events.h	/^} SDL_EventMask ;$/;"	t	typeref:enum:__anon7c9cd6cf0203
SDL_EventState	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC Uint8 SDLCALL SDL_EventState(Uint8 type, int state);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(Uint8 type,int state)
SDL_EventType	/usr/include/SDL/SDL_events.h	/^} SDL_EventType;$/;"	t	typeref:enum:__anon7c9cd6cf0103
SDL_ExposeEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_ExposeEvent {$/;"	s
SDL_ExposeEvent	/usr/include/SDL/SDL_events.h	/^} SDL_ExposeEvent;$/;"	t	typeref:struct:SDL_ExposeEvent
SDL_ExposeEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_VIDEOEXPOSE *\/$/;"	m	struct:SDL_ExposeEvent	typeref:typename:Uint8	access:public
SDL_FALSE	/usr/include/SDL/SDL_stdinc.h	/^	SDL_FALSE = 0,$/;"	e	enum:__anoncb8ed01f0103	access:public
SDL_FULLSCREEN	/usr/include/SDL/SDL_video.h	/^#define SDL_FULLSCREEN	/;"	d
SDL_FillRect	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_FillRect$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * dst,SDL_Rect * dstrect,Uint32 color)
SDL_Flip	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_Flip(SDL_Surface *screen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * screen)
SDL_FreeCursor	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_FreeCursor(SDL_Cursor *cursor);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_FreeRW	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC void SDLCALL SDL_FreeRW(SDL_RWops *area);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_RWops * area)
SDL_FreeSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_FreeSurface(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_FreeWAV	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeWAV(Uint8 *audio_buf);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * audio_buf)
SDL_FreeYUVOverlay	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_FreeYUVOverlay(SDL_Overlay *overlay);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Overlay * overlay)
SDL_GETEVENT	/usr/include/SDL/SDL_events.h	/^	SDL_GETEVENT$/;"	e	enum:__anon7c9cd6cf0303	access:public
SDL_GL_ACCELERATED_VISUAL	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ACCELERATED_VISUAL,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_ACCUM_ALPHA_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ACCUM_ALPHA_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_ACCUM_BLUE_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ACCUM_BLUE_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_ACCUM_GREEN_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ACCUM_GREEN_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_ACCUM_RED_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ACCUM_RED_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_ALPHA_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_ALPHA_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_BLUE_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_BLUE_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_BUFFER_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_BUFFER_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_DEPTH_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_DEPTH_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_DOUBLEBUFFER	/usr/include/SDL/SDL_video.h	/^    SDL_GL_DOUBLEBUFFER,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_GREEN_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_GREEN_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_GetAttribute	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetAttribute(SDL_GLattr attr, int* value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int * value)
SDL_GL_GetProcAddress	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void * SDLCALL SDL_GL_GetProcAddress(const char* proc);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * proc)
SDL_GL_LoadLibrary	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_LoadLibrary(const char *path);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * path)
SDL_GL_Lock	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_Lock(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GL_MULTISAMPLEBUFFERS	/usr/include/SDL/SDL_video.h	/^    SDL_GL_MULTISAMPLEBUFFERS,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_MULTISAMPLESAMPLES	/usr/include/SDL/SDL_video.h	/^    SDL_GL_MULTISAMPLESAMPLES,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_RED_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_RED_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_STENCIL_SIZE	/usr/include/SDL/SDL_video.h	/^    SDL_GL_STENCIL_SIZE,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_STEREO	/usr/include/SDL/SDL_video.h	/^    SDL_GL_STEREO,$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_SWAP_CONTROL	/usr/include/SDL/SDL_video.h	/^    SDL_GL_SWAP_CONTROL$/;"	e	enum:__anon47cbf8510103	access:public
SDL_GL_SetAttribute	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetAttribute(SDL_GLattr attr, int value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int value)
SDL_GL_SwapBuffers	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_SwapBuffers(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GL_Unlock	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_Unlock(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GL_UpdateRects	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_UpdateRects(int numrects, SDL_Rect* rects);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int numrects,SDL_Rect * rects)
SDL_GLattr	/usr/include/SDL/SDL_video.h	/^} SDL_GLattr;$/;"	t	typeref:enum:__anon47cbf8510103
SDL_GRAB_FULLSCREEN	/usr/include/SDL/SDL_video.h	/^	SDL_GRAB_FULLSCREEN	\/**< Used internally *\/$/;"	e	enum:__anon47cbf8510203	access:public
SDL_GRAB_OFF	/usr/include/SDL/SDL_video.h	/^	SDL_GRAB_OFF = 0,$/;"	e	enum:__anon47cbf8510203	access:public
SDL_GRAB_ON	/usr/include/SDL/SDL_video.h	/^	SDL_GRAB_ON = 1,$/;"	e	enum:__anon47cbf8510203	access:public
SDL_GRAB_QUERY	/usr/include/SDL/SDL_video.h	/^	SDL_GRAB_QUERY = -1,$/;"	e	enum:__anon47cbf8510203	access:public
SDL_GetAppState	/usr/include/SDL/SDL_active.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GetAppState(void);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(void)
SDL_GetAudioStatus	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC SDL_audiostatus SDLCALL SDL_GetAudioStatus(void);$/;"	p	typeref:typename:DECLSPEC SDL_audiostatus SDLCALL	signature:(void)
SDL_GetClipRect	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetClipRect(SDL_Surface *surface, SDL_Rect *rect);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface,SDL_Rect * rect)
SDL_GetCursor	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor * SDLCALL SDL_GetCursor(void);$/;"	p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(void)
SDL_GetError	/usr/include/SDL/SDL_error.h	/^extern DECLSPEC char * SDLCALL SDL_GetError(void);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(void)
SDL_GetEventFilter	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC SDL_EventFilter SDLCALL SDL_GetEventFilter(void);$/;"	p	typeref:typename:DECLSPEC SDL_EventFilter SDLCALL	signature:(void)
SDL_GetGammaRamp	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetGammaRamp(Uint16 *red, Uint16 *green, Uint16 *blue);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint16 * red,Uint16 * green,Uint16 * blue)
SDL_GetKeyName	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC char * SDLCALL SDL_GetKeyName(SDLKey key);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(SDLKey key)
SDL_GetKeyRepeat	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_GetKeyRepeat(int *delay, int *interval);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int * delay,int * interval)
SDL_GetKeyState	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC Uint8 * SDLCALL SDL_GetKeyState(int *numkeys);$/;"	p	typeref:typename:DECLSPEC Uint8 * SDLCALL	signature:(int * numkeys)
SDL_GetModState	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC SDLMod SDLCALL SDL_GetModState(void);$/;"	p	typeref:typename:DECLSPEC SDLMod SDLCALL	signature:(void)
SDL_GetMouseState	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GetMouseState(int *x, int *y);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(int * x,int * y)
SDL_GetRGB	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetRGB(Uint32 pixel,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * const fmt,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetRGBA	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetRGBA(Uint32 pixel,$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * const fmt,Uint8 * r,Uint8 * g,Uint8 * b,Uint8 * a)
SDL_GetRelativeMouseState	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GetRelativeMouseState(int *x, int *y);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(int * x,int * y)
SDL_GetThreadID	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetThreadID(SDL_Thread *thread);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Thread * thread)
SDL_GetTicks	/usr/include/SDL/SDL_timer.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetTicks(void);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(void)
SDL_GetVideoInfo	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC const SDL_VideoInfo * SDLCALL SDL_GetVideoInfo(void);$/;"	p	typeref:typename:DECLSPEC const SDL_VideoInfo * SDLCALL	signature:(void)
SDL_GetVideoSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_GetVideoSurface(void);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void)
SDL_GetWMInfo	/usr/include/SDL/SDL_syswm.h	/^extern DECLSPEC int SDLCALL SDL_GetWMInfo(SDL_SysWMinfo *info);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_SysWMinfo * info)
SDL_GrabMode	/usr/include/SDL/SDL_video.h	/^} SDL_GrabMode;$/;"	t	typeref:enum:__anon47cbf8510203
SDL_HAS_64BIT_TYPE	/usr/include/SDL/SDL_config.h	/^#define SDL_HAS_64BIT_TYPE /;"	d
SDL_HAT_CENTERED	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_CENTERED	/;"	d
SDL_HAT_DOWN	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_DOWN	/;"	d
SDL_HAT_LEFT	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_LEFT	/;"	d
SDL_HAT_LEFTDOWN	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_LEFTDOWN	/;"	d
SDL_HAT_LEFTUP	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_LEFTUP	/;"	d
SDL_HAT_RIGHT	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_RIGHT	/;"	d
SDL_HAT_RIGHTDOWN	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_RIGHTDOWN	/;"	d
SDL_HAT_RIGHTUP	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_RIGHTUP	/;"	d
SDL_HAT_UP	/usr/include/SDL/SDL_joystick.h	/^#define SDL_HAT_UP	/;"	d
SDL_HWACCEL	/usr/include/SDL/SDL_video.h	/^#define SDL_HWACCEL	/;"	d
SDL_HWPALETTE	/usr/include/SDL/SDL_video.h	/^#define SDL_HWPALETTE	/;"	d
SDL_HWSURFACE	/usr/include/SDL/SDL_video.h	/^#define SDL_HWSURFACE	/;"	d
SDL_Has3DNow	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Has3DNow(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_Has3DNowExt	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Has3DNowExt(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAltiVec	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAltiVec(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasMMX	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasMMX(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasMMXExt	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasMMXExt(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasRDTSC	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasRDTSC(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE2	/usr/include/SDL/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE2(void);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_ICONV_E2BIG	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ICONV_E2BIG	/;"	d
SDL_ICONV_EILSEQ	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ICONV_EILSEQ	/;"	d
SDL_ICONV_EINVAL	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ICONV_EINVAL	/;"	d
SDL_ICONV_ERROR	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ICONV_ERROR	/;"	d
SDL_IGNORE	/usr/include/SDL/SDL_events.h	/^#define SDL_IGNORE	/;"	d
SDL_IMAGE_MAJOR_VERSION	/usr/include/SDL/SDL_image.h	/^#define SDL_IMAGE_MAJOR_VERSION	/;"	d
SDL_IMAGE_MINOR_VERSION	/usr/include/SDL/SDL_image.h	/^#define SDL_IMAGE_MINOR_VERSION	/;"	d
SDL_IMAGE_PATCHLEVEL	/usr/include/SDL/SDL_image.h	/^#define SDL_IMAGE_PATCHLEVEL	/;"	d
SDL_IMAGE_VERSION	/usr/include/SDL/SDL_image.h	/^#define SDL_IMAGE_VERSION(/;"	d	signature:(X)
SDL_INIT_AUDIO	/usr/include/SDL/SDL.h	/^#define SDL_INIT_AUDIO	/;"	d
SDL_INIT_CDROM	/usr/include/SDL/SDL.h	/^#define SDL_INIT_CDROM	/;"	d
SDL_INIT_EVENTTHREAD	/usr/include/SDL/SDL.h	/^#define SDL_INIT_EVENTTHREAD	/;"	d
SDL_INIT_EVERYTHING	/usr/include/SDL/SDL.h	/^#define SDL_INIT_EVERYTHING	/;"	d
SDL_INIT_JOYSTICK	/usr/include/SDL/SDL.h	/^#define SDL_INIT_JOYSTICK	/;"	d
SDL_INIT_NOPARACHUTE	/usr/include/SDL/SDL.h	/^#define SDL_INIT_NOPARACHUTE	/;"	d
SDL_INIT_TIMER	/usr/include/SDL/SDL.h	/^#define	SDL_INIT_TIMER	/;"	d
SDL_INIT_VIDEO	/usr/include/SDL/SDL.h	/^#define SDL_INIT_VIDEO	/;"	d
SDL_INLINE_OKAY	/usr/include/SDL/begin_code.h	/^#define SDL_INLINE_OKAY$/;"	d
SDL_INPUT_LINUXEV	/usr/include/SDL/SDL_config.h	/^#define SDL_INPUT_LINUXEV /;"	d
SDL_IYUV_OVERLAY	/usr/include/SDL/SDL_video.h	/^#define SDL_IYUV_OVERLAY /;"	d
SDL_Init	/usr/include/SDL/SDL.h	/^extern DECLSPEC int SDLCALL SDL_Init(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_InitQuickDraw	/usr/include/SDL/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_InitQuickDraw(struct QDGlobals *the_qd);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(struct QDGlobals * the_qd)
SDL_InitSubSystem	/usr/include/SDL/SDL.h	/^extern DECLSPEC int SDLCALL SDL_InitSubSystem(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_JOYAXISMOTION	/usr/include/SDL/SDL_events.h	/^       SDL_JOYAXISMOTION,		\/**< Joystick axis motion *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_JOYAXISMOTIONMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYAXISMOTIONMASK	= SDL_EVENTMASK(SDL_JOYAXISMOTION),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYBALLMOTION	/usr/include/SDL/SDL_events.h	/^       SDL_JOYBALLMOTION,		\/**< Joystick trackball motion *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_JOYBALLMOTIONMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYBALLMOTIONMASK	= SDL_EVENTMASK(SDL_JOYBALLMOTION),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYBUTTONDOWN	/usr/include/SDL/SDL_events.h	/^       SDL_JOYBUTTONDOWN,		\/**< Joystick button pressed *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_JOYBUTTONDOWNMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYBUTTONDOWNMASK	= SDL_EVENTMASK(SDL_JOYBUTTONDOWN),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYBUTTONUP	/usr/include/SDL/SDL_events.h	/^       SDL_JOYBUTTONUP,			\/**< Joystick button released *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_JOYBUTTONUPMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYBUTTONUPMASK	= SDL_EVENTMASK(SDL_JOYBUTTONUP),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYEVENTMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYEVENTMASK	= SDL_EVENTMASK(SDL_JOYAXISMOTION)|$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYHATMOTION	/usr/include/SDL/SDL_events.h	/^       SDL_JOYHATMOTION,		\/**< Joystick hat position change *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_JOYHATMOTIONMASK	/usr/include/SDL/SDL_events.h	/^	SDL_JOYHATMOTIONMASK	= SDL_EVENTMASK(SDL_JOYHATMOTION),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_JOYSTICK_LINUX	/usr/include/SDL/SDL_config.h	/^#define SDL_JOYSTICK_LINUX /;"	d
SDL_JoyAxisEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_JoyAxisEvent {$/;"	s
SDL_JoyAxisEvent	/usr/include/SDL/SDL_events.h	/^} SDL_JoyAxisEvent;$/;"	t	typeref:struct:SDL_JoyAxisEvent
SDL_JoyAxisEvent::axis	/usr/include/SDL/SDL_events.h	/^	Uint8 axis;	\/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::value	/usr/include/SDL/SDL_events.h	/^	Sint16 value;	\/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
SDL_JoyAxisEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_JoyBallEvent {$/;"	s
SDL_JoyBallEvent	/usr/include/SDL/SDL_events.h	/^} SDL_JoyBallEvent;$/;"	t	typeref:struct:SDL_JoyBallEvent
SDL_JoyBallEvent::ball	/usr/include/SDL/SDL_events.h	/^	Uint8 ball;	\/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::xrel	/usr/include/SDL/SDL_events.h	/^	Sint16 xrel;	\/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyBallEvent::yrel	/usr/include/SDL/SDL_events.h	/^	Sint16 yrel;	\/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyButtonEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_JoyButtonEvent {$/;"	s
SDL_JoyButtonEvent	/usr/include/SDL/SDL_events.h	/^} SDL_JoyButtonEvent;$/;"	t	typeref:struct:SDL_JoyButtonEvent
SDL_JoyButtonEvent::button	/usr/include/SDL/SDL_events.h	/^	Uint8 button;	\/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_JoyHatEvent {$/;"	s
SDL_JoyHatEvent	/usr/include/SDL/SDL_events.h	/^} SDL_JoyHatEvent;$/;"	t	typeref:struct:SDL_JoyHatEvent
SDL_JoyHatEvent::hat	/usr/include/SDL/SDL_events.h	/^	Uint8 hat;	\/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::value	/usr/include/SDL/SDL_events.h	/^	Uint8 value;	\/**< The hat position value:$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_Joystick	/usr/include/SDL/SDL_joystick.h	/^typedef struct _SDL_Joystick SDL_Joystick;$/;"	t	typeref:struct:_SDL_Joystick
SDL_JoystickClose	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickClose(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickEventState	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickEventState(int state);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int state)
SDL_JoystickGetAxis	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC Sint16 SDLCALL SDL_JoystickGetAxis(SDL_Joystick *joystick, int axis);$/;"	p	typeref:typename:DECLSPEC Sint16 SDLCALL	signature:(SDL_Joystick * joystick,int axis)
SDL_JoystickGetBall	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetBall(SDL_Joystick *joystick, int ball, int *dx, int */;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick,int ball,int * dx,int * dy)
SDL_JoystickGetButton	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetButton(SDL_Joystick *joystick, int button);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int button)
SDL_JoystickGetHat	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetHat(SDL_Joystick *joystick, int hat);$/;"	p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int hat)
SDL_JoystickIndex	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickIndex(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickName	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC const char * SDLCALL SDL_JoystickName(int device_index);$/;"	p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_JoystickNumAxes	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumAxes(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumBalls	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumBalls(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumButtons	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumButtons(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumHats	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumHats(SDL_Joystick *joystick);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickOpen	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC SDL_Joystick * SDLCALL SDL_JoystickOpen(int device_index);$/;"	p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(int device_index)
SDL_JoystickOpened	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickOpened(int device_index);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_JoystickUpdate	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickUpdate(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_KEYDOWN	/usr/include/SDL/SDL_events.h	/^       SDL_KEYDOWN,			\/**< Keys pressed *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_KEYDOWNMASK	/usr/include/SDL/SDL_events.h	/^	SDL_KEYDOWNMASK		= SDL_EVENTMASK(SDL_KEYDOWN),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_KEYEVENTMASK	/usr/include/SDL/SDL_events.h	/^	SDL_KEYEVENTMASK	= SDL_EVENTMASK(SDL_KEYDOWN)|$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_KEYUP	/usr/include/SDL/SDL_events.h	/^       SDL_KEYUP,			\/**< Keys released *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_KEYUPMASK	/usr/include/SDL/SDL_events.h	/^	SDL_KEYUPMASK		= SDL_EVENTMASK(SDL_KEYUP),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_KeyboardEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_KeyboardEvent {$/;"	s
SDL_KeyboardEvent	/usr/include/SDL/SDL_events.h	/^} SDL_KeyboardEvent;$/;"	t	typeref:struct:SDL_KeyboardEvent
SDL_KeyboardEvent::keysym	/usr/include/SDL/SDL_events.h	/^	SDL_keysym keysym;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:SDL_keysym	access:public
SDL_KeyboardEvent::state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_KEYDOWN or SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The keyboard device index *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KillThread	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_KillThread(SDL_Thread *thread);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread)
SDL_LASTERROR	/usr/include/SDL/SDL_error.h	/^	SDL_LASTERROR$/;"	e	enum:__anon412f3cc40103	access:public
SDL_LIL_ENDIAN	/usr/include/SDL/SDL_endian.h	/^#define SDL_LIL_ENDIAN	/;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL/SDL_config.h	/^#define SDL_LOADSO_DLOPEN /;"	d
SDL_LOGPAL	/usr/include/SDL/SDL_video.h	/^#define SDL_LOGPAL /;"	d
SDL_Linked_Version	/usr/include/SDL/SDL_version.h	/^extern DECLSPEC const SDL_version * SDLCALL SDL_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
SDL_ListModes	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Rect ** SDLCALL SDL_ListModes(SDL_PixelFormat *format, Uint32 flags);$/;"	p	typeref:typename:DECLSPEC SDL_Rect ** SDLCALL	signature:(SDL_PixelFormat * format,Uint32 flags)
SDL_LoadBMP	/usr/include/SDL/SDL_video.h	/^#define SDL_LoadBMP(/;"	d	signature:(file)
SDL_LoadBMP_RW	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_LoadBMP_RW(SDL_RWops *src, int freesrc);$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc)
SDL_LoadFunction	/usr/include/SDL/SDL_loadso.h	/^extern DECLSPEC void * SDLCALL SDL_LoadFunction(void *handle, const char *name);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * handle,const char * name)
SDL_LoadObject	/usr/include/SDL/SDL_loadso.h	/^extern DECLSPEC void * SDLCALL SDL_LoadObject(const char *sofile);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * sofile)
SDL_LoadWAV	/usr/include/SDL/SDL_audio.h	/^#define SDL_LoadWAV(/;"	d	signature:(file,spec,audio_buf,audio_len)
SDL_LoadWAV_RW	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC SDL_AudioSpec * SDLCALL SDL_LoadWAV_RW(SDL_RWops *src, int freesrc, SDL_AudioSpe/;"	p	typeref:typename:DECLSPEC SDL_AudioSpec * SDLCALL	signature:(SDL_RWops * src,int freesrc,SDL_AudioSpec * spec,Uint8 ** audio_buf,Uint32 * audio_len)
SDL_LockAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LockMutex	/usr/include/SDL/SDL_mutex.h	/^#define SDL_LockMutex(/;"	d	signature:(m)
SDL_LockSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_LockSurface(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface)
SDL_LockYUVOverlay	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_LockYUVOverlay(SDL_Overlay *overlay);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Overlay * overlay)
SDL_LowerBlit	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlit$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_MAJOR_VERSION	/usr/include/SDL/SDL_version.h	/^#define SDL_MAJOR_VERSION	/;"	d
SDL_MAX_TRACKS	/usr/include/SDL/SDL_cdrom.h	/^#define SDL_MAX_TRACKS	/;"	d
SDL_MINOR_VERSION	/usr/include/SDL/SDL_version.h	/^#define SDL_MINOR_VERSION	/;"	d
SDL_MIXER_MAJOR_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define SDL_MIXER_MAJOR_VERSION	/;"	d
SDL_MIXER_MINOR_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define SDL_MIXER_MINOR_VERSION	/;"	d
SDL_MIXER_PATCHLEVEL	/usr/include/SDL/SDL_mixer.h	/^#define SDL_MIXER_PATCHLEVEL /;"	d
SDL_MIXER_VERSION	/usr/include/SDL/SDL_mixer.h	/^#define SDL_MIXER_VERSION(/;"	d	signature:(X)
SDL_MIX_MAXVOLUME	/usr/include/SDL/SDL_audio.h	/^#define SDL_MIX_MAXVOLUME /;"	d
SDL_MOUSEBUTTONDOWN	/usr/include/SDL/SDL_events.h	/^       SDL_MOUSEBUTTONDOWN,		\/**< Mouse button pressed *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_MOUSEBUTTONDOWNMASK	/usr/include/SDL/SDL_events.h	/^	SDL_MOUSEBUTTONDOWNMASK	= SDL_EVENTMASK(SDL_MOUSEBUTTONDOWN),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_MOUSEBUTTONUP	/usr/include/SDL/SDL_events.h	/^       SDL_MOUSEBUTTONUP,		\/**< Mouse button released *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_MOUSEBUTTONUPMASK	/usr/include/SDL/SDL_events.h	/^	SDL_MOUSEBUTTONUPMASK	= SDL_EVENTMASK(SDL_MOUSEBUTTONUP),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_MOUSEEVENTMASK	/usr/include/SDL/SDL_events.h	/^	SDL_MOUSEEVENTMASK	= SDL_EVENTMASK(SDL_MOUSEMOTION)|$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_MOUSEMOTION	/usr/include/SDL/SDL_events.h	/^       SDL_MOUSEMOTION,			\/**< Mouse moved *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_MOUSEMOTIONMASK	/usr/include/SDL/SDL_events.h	/^	SDL_MOUSEMOTIONMASK	= SDL_EVENTMASK(SDL_MOUSEMOTION),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_MUSTLOCK	/usr/include/SDL/SDL_video.h	/^#define SDL_MUSTLOCK(/;"	d	signature:(surface)
SDL_MUTEX_MAXWAIT	/usr/include/SDL/SDL_mutex.h	/^#define SDL_MUTEX_MAXWAIT	/;"	d
SDL_MUTEX_TIMEDOUT	/usr/include/SDL/SDL_mutex.h	/^#define SDL_MUTEX_TIMEDOUT	/;"	d
SDL_MapRGB	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGB$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * const format,const Uint8 r,const Uint8 g,const Uint8 b)
SDL_MapRGBA	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGBA$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * const format,const Uint8 r,const Uint8 g,const Uint8 b,const Uint8 a)
SDL_MixAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudio(Uint8 *dst, const Uint8 *src, Uint32 len, int volume);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * dst,const Uint8 * src,Uint32 len,int volume)
SDL_MouseButtonEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_MouseButtonEvent {$/;"	s
SDL_MouseButtonEvent	/usr/include/SDL/SDL_events.h	/^} SDL_MouseButtonEvent;$/;"	t	typeref:struct:SDL_MouseButtonEvent
SDL_MouseButtonEvent::button	/usr/include/SDL/SDL_events.h	/^	Uint8 button;	\/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_MOUSEBUTTONDOWN or SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The mouse device index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::x	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse at press time *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint16	access:public
SDL_MouseButtonEvent::y	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse at press time *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint16	access:public
SDL_MouseMotionEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_MouseMotionEvent {$/;"	s
SDL_MouseMotionEvent	/usr/include/SDL/SDL_events.h	/^} SDL_MouseMotionEvent;$/;"	t	typeref:struct:SDL_MouseMotionEvent
SDL_MouseMotionEvent::state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
SDL_MouseMotionEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
SDL_MouseMotionEvent::which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The mouse device index *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
SDL_MouseMotionEvent::x	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint16	access:public
SDL_MouseMotionEvent::xrel	/usr/include/SDL/SDL_events.h	/^	Sint16 xrel;	\/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint16	access:public
SDL_MouseMotionEvent::y	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint16	access:public
SDL_MouseMotionEvent::yrel	/usr/include/SDL/SDL_events.h	/^	Sint16 yrel;	\/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint16	access:public
SDL_NAME	/usr/include/SDL/SDL_name.h	/^#define SDL_NAME(/;"	d	signature:(X)
SDL_NET_MAJOR_VERSION	/usr/include/SDL/SDL_net.h	/^#define SDL_NET_MAJOR_VERSION	/;"	d
SDL_NET_MINOR_VERSION	/usr/include/SDL/SDL_net.h	/^#define SDL_NET_MINOR_VERSION	/;"	d
SDL_NET_PATCHLEVEL	/usr/include/SDL/SDL_net.h	/^#define SDL_NET_PATCHLEVEL	/;"	d
SDL_NET_VERSION	/usr/include/SDL/SDL_net.h	/^#define SDL_NET_VERSION(/;"	d	signature:(X)
SDL_NOEVENT	/usr/include/SDL/SDL_events.h	/^       SDL_NOEVENT = 0,			\/**< Unused (do not remove) *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_NOFRAME	/usr/include/SDL/SDL_video.h	/^#define SDL_NOFRAME	/;"	d
SDL_NUMEVENTS	/usr/include/SDL/SDL_events.h	/^       SDL_NUMEVENTS = 32$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_NewTimerCallback	/usr/include/SDL/SDL_timer.h	/^typedef Uint32 (SDLCALL *SDL_NewTimerCallback)(Uint32 interval, void *param);$/;"	t	typeref:typename:Uint32 (SDLCALL *)(Uint32 interval,void * param)
SDL_NumJoysticks	/usr/include/SDL/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_NumJoysticks(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_OPENGL	/usr/include/SDL/SDL_video.h	/^#define SDL_OPENGL /;"	d
SDL_OPENGLBLIT	/usr/include/SDL/SDL_video.h	/^#define SDL_OPENGLBLIT	/;"	d
SDL_OpenAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpec *obtained);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioSpec * desired,SDL_AudioSpec * obtained)
SDL_OutOfMemory	/usr/include/SDL/SDL_error.h	/^#define SDL_OutOfMemory(/;"	d	signature:()
SDL_Overlay	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_Overlay {$/;"	s
SDL_Overlay	/usr/include/SDL/SDL_video.h	/^} SDL_Overlay;$/;"	t	typeref:struct:SDL_Overlay
SDL_Overlay::UnusedBits	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits :31;$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32:31	access:public
SDL_Overlay::format	/usr/include/SDL/SDL_video.h	/^	Uint32 format;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32	access:public
SDL_Overlay::h	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
SDL_Overlay::hw_overlay	/usr/include/SDL/SDL_video.h	/^	Uint32 hw_overlay :1;	\/**< Flag: This overlay hardware accelerated? *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32:1	access:public
SDL_Overlay::hwdata	/usr/include/SDL/SDL_video.h	/^	struct private_yuvhwdata *hwdata;$/;"	m	struct:SDL_Overlay	typeref:struct:private_yuvhwdata *	access:public
SDL_Overlay::hwfuncs	/usr/include/SDL/SDL_video.h	/^	struct private_yuvhwfuncs *hwfuncs;$/;"	m	struct:SDL_Overlay	typeref:struct:private_yuvhwfuncs *	access:public
SDL_Overlay::pitches	/usr/include/SDL/SDL_video.h	/^	Uint16 *pitches;			\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint16 *	access:public
SDL_Overlay::pixels	/usr/include/SDL/SDL_video.h	/^	Uint8 **pixels;				\/**< Read-write *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint8 **	access:public
SDL_Overlay::planes	/usr/include/SDL/SDL_video.h	/^	int planes;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
SDL_Overlay::w	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
SDL_PASSED_BEGINTHREAD_ENDTHREAD	/usr/include/SDL/SDL_thread.h	/^#define SDL_PASSED_BEGINTHREAD_ENDTHREAD$/;"	d
SDL_PATCHLEVEL	/usr/include/SDL/SDL_version.h	/^#define SDL_PATCHLEVEL	/;"	d
SDL_PEEKEVENT	/usr/include/SDL/SDL_events.h	/^	SDL_PEEKEVENT,$/;"	e	enum:__anon7c9cd6cf0303	access:public
SDL_PHYSPAL	/usr/include/SDL/SDL_video.h	/^#define SDL_PHYSPAL /;"	d
SDL_PREALLOC	/usr/include/SDL/SDL_video.h	/^#define SDL_PREALLOC	/;"	d
SDL_PRESSED	/usr/include/SDL/SDL_events.h	/^#define SDL_PRESSED	/;"	d
SDL_Palette	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_Palette {$/;"	s
SDL_Palette	/usr/include/SDL/SDL_video.h	/^} SDL_Palette;$/;"	t	typeref:struct:SDL_Palette
SDL_Palette::colors	/usr/include/SDL/SDL_video.h	/^	SDL_Color *colors;$/;"	m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
SDL_Palette::ncolors	/usr/include/SDL/SDL_video.h	/^	int       ncolors;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
SDL_PauseAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudio(int pause_on);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int pause_on)
SDL_PeepEvents	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PeepEvents(SDL_Event *events, int numevents,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * events,int numevents,SDL_eventaction action,Uint32 mask)
SDL_PixelFormat	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_PixelFormat {$/;"	s
SDL_PixelFormat	/usr/include/SDL/SDL_video.h	/^} SDL_PixelFormat;$/;"	t	typeref:struct:SDL_PixelFormat
SDL_PixelFormat::Aloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Aloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Amask	/usr/include/SDL/SDL_video.h	/^	Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Ashift	/usr/include/SDL/SDL_video.h	/^	Uint8  Ashift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BitsPerPixel	/usr/include/SDL/SDL_video.h	/^	Uint8  BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Bloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Bshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Bshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BytesPerPixel	/usr/include/SDL/SDL_video.h	/^	Uint8  BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Gloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Gshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Gshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rloss	/usr/include/SDL/SDL_video.h	/^	Uint8  Rloss;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rmask	/usr/include/SDL/SDL_video.h	/^	Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Rshift	/usr/include/SDL/SDL_video.h	/^	Uint8  Rshift;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::alpha	/usr/include/SDL/SDL_video.h	/^	Uint8  alpha;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::colorkey	/usr/include/SDL/SDL_video.h	/^	Uint32 colorkey;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::palette	/usr/include/SDL/SDL_video.h	/^	SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
SDL_PollEvent	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PollEvent(SDL_Event *event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_PumpEvents	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_PumpEvents(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_PushEvent	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PushEvent(SDL_Event *event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_QUERY	/usr/include/SDL/SDL_events.h	/^#define SDL_QUERY	/;"	d
SDL_QUIT	/usr/include/SDL/SDL_events.h	/^       SDL_QUIT,			\/**< User-requested quit *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_QUITMASK	/usr/include/SDL/SDL_events.h	/^	SDL_QUITMASK		= SDL_EVENTMASK(SDL_QUIT),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_Quit	/usr/include/SDL/SDL.h	/^extern DECLSPEC void SDLCALL SDL_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_QuitEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_QuitEvent {$/;"	s
SDL_QuitEvent	/usr/include/SDL/SDL_events.h	/^} SDL_QuitEvent;$/;"	t	typeref:struct:SDL_QuitEvent
SDL_QuitEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint8	access:public
SDL_QuitRequested	/usr/include/SDL/SDL_quit.h	/^#define SDL_QuitRequested(/;"	d	signature:()
SDL_QuitSubSystem	/usr/include/SDL/SDL.h	/^extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 flags)
SDL_RELEASED	/usr/include/SDL/SDL_events.h	/^#define SDL_RELEASED	/;"	d
SDL_RESIZABLE	/usr/include/SDL/SDL_video.h	/^#define SDL_RESIZABLE	/;"	d
SDL_RLEACCEL	/usr/include/SDL/SDL_video.h	/^#define SDL_RLEACCEL	/;"	d
SDL_RLEACCELOK	/usr/include/SDL/SDL_video.h	/^#define SDL_RLEACCELOK	/;"	d
SDL_RWFromConstMem	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC SDL_RWops * SDLCALL SDL_RWFromConstMem(const void *mem, int size);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const void * mem,int size)
SDL_RWFromFP	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC SDL_RWops * SDLCALL SDL_RWFromFP(FILE *fp, int autoclose);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(FILE * fp,int autoclose)
SDL_RWFromFile	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC SDL_RWops * SDLCALL SDL_RWFromFile(const char *file, const char *mode);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const char * file,const char * mode)
SDL_RWFromMem	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC SDL_RWops * SDLCALL SDL_RWFromMem(void *mem, int size);$/;"	p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void * mem,int size)
SDL_RWclose	/usr/include/SDL/SDL_rwops.h	/^#define SDL_RWclose(/;"	d	signature:(ctx)
SDL_RWops	/usr/include/SDL/SDL_rwops.h	/^typedef struct SDL_RWops {$/;"	s
SDL_RWops	/usr/include/SDL/SDL_rwops.h	/^} SDL_RWops;$/;"	t	typeref:struct:SDL_RWops
SDL_RWops::SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *close)(struct SDL_RWops *context);$/;"	m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDL_RWops::SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *read)(struct SDL_RWops *context, void *ptr, int size, int maxnum);$/;"	m	struct:SDL_RWops	typeref:typename:int (* read)(struct SDL_RWops * context,void * ptr,int size,int maxnum)	access:public
SDL_RWops::SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *seek)(struct SDL_RWops *context, int offset, int whence);$/;"	m	struct:SDL_RWops	typeref:typename:int (* seek)(struct SDL_RWops * context,int offset,int whence)	access:public
SDL_RWops::SDLCALL	/usr/include/SDL/SDL_rwops.h	/^	int (SDLCALL *write)(struct SDL_RWops *context, const void *ptr, int size, int num);$/;"	m	struct:SDL_RWops	typeref:typename:int (* write)(struct SDL_RWops * context,const void * ptr,int size,int num)	access:public
SDL_RWops::__anon355864d5010a	/usr/include/SDL/SDL_rwops.h	/^	union {$/;"	u	struct:SDL_RWops	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	/usr/include/SDL/SDL_rwops.h	/^		struct {$/;"	s	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308::data	/usr/include/SDL/SDL_rwops.h	/^		    void *data;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:void *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308::left	/usr/include/SDL/SDL_rwops.h	/^		    int left;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:int	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308::size	/usr/include/SDL/SDL_rwops.h	/^		    int size;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:int	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::append	/usr/include/SDL/SDL_rwops.h	/^		int   append;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:typename:int	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::buffer	/usr/include/SDL/SDL_rwops.h	/^		} buffer;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50208::h	/usr/include/SDL/SDL_rwops.h	/^		void *h;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:typename:void *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50408	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50408::autoclose	/usr/include/SDL/SDL_rwops.h	/^		int autoclose;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	typeref:typename:int	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50408::fp	/usr/include/SDL/SDL_rwops.h	/^	 	FILE *fp;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	typeref:typename:FILE *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50508	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50508::base	/usr/include/SDL/SDL_rwops.h	/^		Uint8 *base;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50508::here	/usr/include/SDL/SDL_rwops.h	/^	 	Uint8 *here;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50508::stop	/usr/include/SDL/SDL_rwops.h	/^		Uint8 *stop;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50608	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
SDL_RWops::__anon355864d5010a::__anon355864d50608::data1	/usr/include/SDL/SDL_rwops.h	/^		void *data1;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50608	typeref:typename:void *	access:public
SDL_RWops::__anon355864d5010a::mem	/usr/include/SDL/SDL_rwops.h	/^	    } mem;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	access:public
SDL_RWops::__anon355864d5010a::stdio	/usr/include/SDL/SDL_rwops.h	/^	    } stdio;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	access:public
SDL_RWops::__anon355864d5010a::unknown	/usr/include/SDL/SDL_rwops.h	/^	    } unknown;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50608	access:public
SDL_RWops::__anon355864d5010a::win32io	/usr/include/SDL/SDL_rwops.h	/^	    } win32io;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	access:public
SDL_RWops::hidden	/usr/include/SDL/SDL_rwops.h	/^	} hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anon355864d5010a	access:public
SDL_RWops::type	/usr/include/SDL/SDL_rwops.h	/^	Uint32 type;$/;"	m	struct:SDL_RWops	typeref:typename:Uint32	access:public
SDL_RWread	/usr/include/SDL/SDL_rwops.h	/^#define SDL_RWread(/;"	d	signature:(ctx,ptr,size,n)
SDL_RWseek	/usr/include/SDL/SDL_rwops.h	/^#define SDL_RWseek(/;"	d	signature:(ctx,offset,whence)
SDL_RWtell	/usr/include/SDL/SDL_rwops.h	/^#define SDL_RWtell(/;"	d	signature:(ctx)
SDL_RWwrite	/usr/include/SDL/SDL_rwops.h	/^#define SDL_RWwrite(/;"	d	signature:(ctx,ptr,size,n)
SDL_ReadBE16	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadBE16(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE32	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadBE32(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE64	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadBE64(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE16	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadLE16(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE32	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadLE32(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE64	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadLE64(SDL_RWops *src);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_Rect	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_Rect {$/;"	s
SDL_Rect	/usr/include/SDL/SDL_video.h	/^} SDL_Rect;$/;"	t	typeref:struct:SDL_Rect
SDL_Rect::h	/usr/include/SDL/SDL_video.h	/^	Uint16 w, h;$/;"	m	struct:SDL_Rect	typeref:typename:Uint16	access:public
SDL_Rect::w	/usr/include/SDL/SDL_video.h	/^	Uint16 w, h;$/;"	m	struct:SDL_Rect	typeref:typename:Uint16	access:public
SDL_Rect::x	/usr/include/SDL/SDL_video.h	/^	Sint16 x, y;$/;"	m	struct:SDL_Rect	typeref:typename:Sint16	access:public
SDL_Rect::y	/usr/include/SDL/SDL_video.h	/^	Sint16 x, y;$/;"	m	struct:SDL_Rect	typeref:typename:Sint16	access:public
SDL_RegisterApp	/usr/include/SDL/SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_RegisterApp(char *name, Uint32 style, void *hInst);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(char * name,Uint32 style,void * hInst)
SDL_RemoveTimer	/usr/include/SDL/SDL_timer.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID t);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_TimerID t)
SDL_ResizeEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_ResizeEvent {$/;"	s
SDL_ResizeEvent	/usr/include/SDL/SDL_events.h	/^} SDL_ResizeEvent;$/;"	t	typeref:struct:SDL_ResizeEvent
SDL_ResizeEvent::h	/usr/include/SDL/SDL_events.h	/^	int h;		\/**< New height *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:int	access:public
SDL_ResizeEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_VIDEORESIZE *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:Uint8	access:public
SDL_ResizeEvent::w	/usr/include/SDL/SDL_events.h	/^	int w;		\/**< New width *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:int	access:public
SDL_SRCALPHA	/usr/include/SDL/SDL_video.h	/^#define SDL_SRCALPHA	/;"	d
SDL_SRCCOLORKEY	/usr/include/SDL/SDL_video.h	/^#define SDL_SRCCOLORKEY	/;"	d
SDL_SWSURFACE	/usr/include/SDL/SDL_video.h	/^#define SDL_SWSURFACE	/;"	d
SDL_SYSWMEVENT	/usr/include/SDL/SDL_events.h	/^       SDL_SYSWMEVENT,			\/**< System specific event *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_SYSWMEVENTMASK	/usr/include/SDL/SDL_events.h	/^	SDL_SYSWMEVENTMASK	= SDL_EVENTMASK(SDL_SYSWMEVENT)$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_SaveBMP	/usr/include/SDL/SDL_video.h	/^#define SDL_SaveBMP(/;"	d	signature:(surface,file)
SDL_SaveBMP_RW	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SaveBMP_RW$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_RWops * dst,int freedst)
SDL_SemPost	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemPost(SDL_sem *sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemTryWait	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemTryWait(SDL_sem *sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemValue	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC Uint32 SDLCALL SDL_SemValue(SDL_sem *sem);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_sem * sem)
SDL_SemWait	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWait(SDL_sem *sem);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemWaitTimeout	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem *sem, Uint32 ms);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem,Uint32 ms)
SDL_SetAlpha	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetAlpha(SDL_Surface *surface, Uint32 flag, Uint8 alpha);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint32 flag,Uint8 alpha)
SDL_SetClipRect	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetClipRect(SDL_Surface *surface, const SDL_Rect *rect);$/;"	p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Surface * surface,const SDL_Rect * rect)
SDL_SetColorKey	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetColorKey$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint32 flag,Uint32 key)
SDL_SetColors	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetColors(SDL_Surface *surface, $/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_Color * colors,int firstcolor,int ncolors)
SDL_SetCursor	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_SetCursor(SDL_Cursor *cursor);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_SetError	/usr/include/SDL/SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_SetError(const char *fmt, ...);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * fmt,...)
SDL_SetEventFilter	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_SetEventFilter(SDL_EventFilter filter);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter)
SDL_SetGamma	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetGamma(float red, float green, float blue);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(float red,float green,float blue)
SDL_SetGammaRamp	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetGammaRamp(const Uint16 *red, const Uint16 *green, const Uint1/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const Uint16 * red,const Uint16 * green,const Uint16 * blue)
SDL_SetModState	/usr/include/SDL/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetModState(SDLMod modstate);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDLMod modstate)
SDL_SetModuleHandle	/usr/include/SDL/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_SetModuleHandle(void *hInst);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * hInst)
SDL_SetPalette	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetPalette(SDL_Surface *surface, int flags,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,int flags,SDL_Color * colors,int firstcolor,int ncolors)
SDL_SetTimer	/usr/include/SDL/SDL_timer.h	/^extern DECLSPEC int SDLCALL SDL_SetTimer(Uint32 interval, SDL_TimerCallback callback);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 interval,SDL_TimerCallback callback)
SDL_SetVideoMode	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_SetVideoMode$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(int width,int height,int bpp,Uint32 flags)
SDL_ShowCursor	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_ShowCursor(int toggle);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int toggle)
SDL_SoftStretch	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SoftStretch(SDL_Surface *src, SDL_Rect *srcrect,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_Surface	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_Surface {$/;"	s
SDL_Surface	/usr/include/SDL/SDL_video.h	/^} SDL_Surface;$/;"	t	typeref:struct:SDL_Surface
SDL_Surface::clip_rect	/usr/include/SDL/SDL_video.h	/^	SDL_Rect clip_rect;			\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
SDL_Surface::flags	/usr/include/SDL/SDL_video.h	/^	Uint32 flags;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
SDL_Surface::format	/usr/include/SDL/SDL_video.h	/^	SDL_PixelFormat *format;		\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
SDL_Surface::format_version	/usr/include/SDL/SDL_video.h	/^	unsigned int format_version;		\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:unsigned int	access:public
SDL_Surface::h	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::hwdata	/usr/include/SDL/SDL_video.h	/^	struct private_hwdata *hwdata;$/;"	m	struct:SDL_Surface	typeref:struct:private_hwdata *	access:public
SDL_Surface::locked	/usr/include/SDL/SDL_video.h	/^	Uint32 locked;				\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
SDL_Surface::map	/usr/include/SDL/SDL_video.h	/^	struct SDL_BlitMap *map;		\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
SDL_Surface::offset	/usr/include/SDL/SDL_video.h	/^	int offset;				\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::pitch	/usr/include/SDL/SDL_video.h	/^	Uint16 pitch;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint16	access:public
SDL_Surface::pixels	/usr/include/SDL/SDL_video.h	/^	void *pixels;				\/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::refcount	/usr/include/SDL/SDL_video.h	/^	int refcount;				\/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::unused1	/usr/include/SDL/SDL_video.h	/^	Uint32 unused1;				\/**< for binary compatibility *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
SDL_Surface::w	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Swap16	/usr/include/SDL/SDL_endian.h	/^static __inline__ Uint16 SDL_Swap16(Uint16 x)$/;"	f	typeref:typename:Uint16	signature:(Uint16 x)
SDL_Swap32	/usr/include/SDL/SDL_endian.h	/^static __inline__ Uint32 SDL_Swap32(Uint32 x) {$/;"	f	typeref:typename:Uint32	signature:(Uint32 x)
SDL_Swap32	/usr/include/SDL/SDL_endian.h	/^static __inline__ Uint32 SDL_Swap32(Uint32 x)$/;"	f	typeref:typename:Uint32	signature:(Uint32 x)
SDL_Swap64	/usr/include/SDL/SDL_endian.h	/^#define SDL_Swap64(/;"	d	signature:(X)
SDL_Swap64	/usr/include/SDL/SDL_endian.h	/^static __inline__ Uint64 SDL_Swap64(Uint64 x)$/;"	f	typeref:typename:Uint64	signature:(Uint64 x)
SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	s	union:SDL_Swap64::__anon1210cd29010a	access:public
SDL_Swap64::__anon1210cd29010a::__anon1210cd290208::a	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon1210cd29010a::__anon1210cd290208::b	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon1210cd29010a::s	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	union:SDL_Swap64::__anon1210cd29010a	typeref:struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	access:public
SDL_Swap64::__anon1210cd29010a::u	/usr/include/SDL/SDL_endian.h	/^		Uint64 u;$/;"	m	union:SDL_Swap64::__anon1210cd29010a	typeref:typename:Uint64	access:public
SDL_SwapBE16	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapBE16(/;"	d	signature:(X)
SDL_SwapBE32	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapBE32(/;"	d	signature:(X)
SDL_SwapBE64	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapBE64(/;"	d	signature:(X)
SDL_SwapLE16	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapLE16(/;"	d	signature:(X)
SDL_SwapLE32	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapLE32(/;"	d	signature:(X)
SDL_SwapLE64	/usr/include/SDL/SDL_endian.h	/^#define SDL_SwapLE64(/;"	d	signature:(X)
SDL_SysWMEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_SysWMEvent {$/;"	s
SDL_SysWMEvent	/usr/include/SDL/SDL_events.h	/^} SDL_SysWMEvent;$/;"	t	typeref:struct:SDL_SysWMEvent
SDL_SysWMEvent::msg	/usr/include/SDL/SDL_events.h	/^	SDL_SysWMmsg *msg;$/;"	m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
SDL_SysWMEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint8	access:public
SDL_SysWMinfo	/usr/include/SDL/SDL_syswm.h	/^typedef struct SDL_SysWMinfo SDL_SysWMinfo;$/;"	t	typeref:struct:SDL_SysWMinfo
SDL_SysWMmsg	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_SysWMmsg SDL_SysWMmsg;$/;"	t	typeref:struct:SDL_SysWMmsg
SDL_TABLESIZE	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_TABLESIZE(/;"	d	signature:(table)
SDL_THREAD_PTHREAD	/usr/include/SDL/SDL_config.h	/^#define SDL_THREAD_PTHREAD /;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL/SDL_config.h	/^#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX /;"	d
SDL_TIMER_UNIX	/usr/include/SDL/SDL_config.h	/^#define SDL_TIMER_UNIX /;"	d
SDL_TIMESLICE	/usr/include/SDL/SDL_timer.h	/^#define SDL_TIMESLICE	/;"	d
SDL_TRUE	/usr/include/SDL/SDL_stdinc.h	/^	SDL_TRUE  = 1$/;"	e	enum:__anoncb8ed01f0103	access:public
SDL_TTF_MAJOR_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define SDL_TTF_MAJOR_VERSION	/;"	d
SDL_TTF_MINOR_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define SDL_TTF_MINOR_VERSION	/;"	d
SDL_TTF_PATCHLEVEL	/usr/include/SDL/SDL_ttf.h	/^#define SDL_TTF_PATCHLEVEL	/;"	d
SDL_TTF_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define SDL_TTF_VERSION(/;"	d	signature:(X)
SDL_Thread	/usr/include/SDL/SDL_thread.h	/^typedef struct SDL_Thread SDL_Thread;$/;"	t	typeref:struct:SDL_Thread
SDL_ThreadID	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ThreadID(void);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(void)
SDL_TimerCallback	/usr/include/SDL/SDL_timer.h	/^typedef Uint32 (SDLCALL *SDL_TimerCallback)(Uint32 interval);$/;"	t	typeref:typename:Uint32 (SDLCALL *)(Uint32 interval)
SDL_TimerID	/usr/include/SDL/SDL_timer.h	/^typedef struct _SDL_TimerID *SDL_TimerID;$/;"	t	typeref:struct:_SDL_TimerID *
SDL_UNSUPPORTED	/usr/include/SDL/SDL_error.h	/^	SDL_UNSUPPORTED,$/;"	e	enum:__anon412f3cc40103	access:public
SDL_USEREVENT	/usr/include/SDL/SDL_events.h	/^       SDL_USEREVENT = 24,$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_UYVY_OVERLAY	/usr/include/SDL/SDL_video.h	/^#define SDL_UYVY_OVERLAY /;"	d
SDL_UnloadObject	/usr/include/SDL/SDL_loadso.h	/^extern DECLSPEC void SDLCALL SDL_UnloadObject(void *handle);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * handle)
SDL_UnlockAudio	/usr/include/SDL/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudio(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_UnlockMutex	/usr/include/SDL/SDL_mutex.h	/^#define SDL_UnlockMutex(/;"	d	signature:(m)
SDL_UnlockSurface	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_UnlockSurface(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_UnlockYUVOverlay	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_UnlockYUVOverlay(SDL_Overlay *overlay);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Overlay * overlay)
SDL_UnregisterApp	/usr/include/SDL/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_UnregisterApp(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Unsupported	/usr/include/SDL/SDL_error.h	/^#define SDL_Unsupported(/;"	d	signature:()
SDL_UpdateRect	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_UpdateRect$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * screen,Sint32 x,Sint32 y,Uint32 w,Uint32 h)
SDL_UpdateRects	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_UpdateRects$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * screen,int numrects,SDL_Rect * rects)
SDL_UpperBlit	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlit$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_UserEvent	/usr/include/SDL/SDL_events.h	/^typedef struct SDL_UserEvent {$/;"	s
SDL_UserEvent	/usr/include/SDL/SDL_events.h	/^} SDL_UserEvent;$/;"	t	typeref:struct:SDL_UserEvent
SDL_UserEvent::code	/usr/include/SDL/SDL_events.h	/^	int code;	\/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:int	access:public
SDL_UserEvent::data1	/usr/include/SDL/SDL_events.h	/^	void *data1;	\/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::data2	/usr/include/SDL/SDL_events.h	/^	void *data2;	\/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_USEREVENT through SDL_NUMEVENTS-1 *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint8	access:public
SDL_VERSION	/usr/include/SDL/SDL_version.h	/^#define SDL_VERSION(/;"	d	signature:(X)
SDL_VERSIONNUM	/usr/include/SDL/SDL_version.h	/^#define SDL_VERSIONNUM(/;"	d	signature:(X,Y,Z)
SDL_VERSION_ATLEAST	/usr/include/SDL/SDL_version.h	/^#define SDL_VERSION_ATLEAST(/;"	d	signature:(X,Y,Z)
SDL_VIDEOEXPOSE	/usr/include/SDL/SDL_events.h	/^       SDL_VIDEOEXPOSE,			\/**< Screen needs to be redrawn *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_VIDEOEXPOSEMASK	/usr/include/SDL/SDL_events.h	/^	SDL_VIDEOEXPOSEMASK	= SDL_EVENTMASK(SDL_VIDEOEXPOSE),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_VIDEORESIZE	/usr/include/SDL/SDL_events.h	/^       SDL_VIDEORESIZE,			\/**< User resized video mode *\/$/;"	e	enum:__anon7c9cd6cf0103	access:public
SDL_VIDEORESIZEMASK	/usr/include/SDL/SDL_events.h	/^	SDL_VIDEORESIZEMASK	= SDL_EVENTMASK(SDL_VIDEORESIZE),$/;"	e	enum:__anon7c9cd6cf0203	access:public
SDL_VIDEO_DISABLE_SCREENSAVER	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DISABLE_SCREENSAVER /;"	d
SDL_VIDEO_DRIVER_CACA	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_CACA /;"	d
SDL_VIDEO_DRIVER_DGA	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_DGA /;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	d
SDL_VIDEO_DRIVER_FBCON	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_FBCON /;"	d
SDL_VIDEO_DRIVER_X11	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11 /;"	d
SDL_VIDEO_DRIVER_X11_DGAMOUSE	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_DGAMOUSE /;"	d
SDL_VIDEO_DRIVER_X11_VIDMODE	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_VIDMODE /;"	d
SDL_VIDEO_DRIVER_X11_XINERAMA	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XINERAMA /;"	d
SDL_VIDEO_DRIVER_X11_XME	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XME /;"	d
SDL_VIDEO_DRIVER_X11_XV	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_DRIVER_X11_XV /;"	d
SDL_VIDEO_OPENGL	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_OPENGL /;"	d
SDL_VIDEO_OPENGL_GLX	/usr/include/SDL/SDL_config.h	/^#define SDL_VIDEO_OPENGL_GLX /;"	d
SDL_VideoDriverName	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC char * SDLCALL SDL_VideoDriverName(char *namebuf, int maxlen);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * namebuf,int maxlen)
SDL_VideoInfo	/usr/include/SDL/SDL_video.h	/^typedef struct SDL_VideoInfo {$/;"	s
SDL_VideoInfo	/usr/include/SDL/SDL_video.h	/^} SDL_VideoInfo;$/;"	t	typeref:struct:SDL_VideoInfo
SDL_VideoInfo::UnusedBits1	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits1  :6;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:6	access:public
SDL_VideoInfo::UnusedBits2	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits2  :1;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::UnusedBits3	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits3  :16;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:16	access:public
SDL_VideoInfo::blit_fill	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_fill    :1;	\/**< Flag: Accelerated color fill *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_hw	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw      :1;	\/**< Flag: Accelerated blits HW --> HW *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_hw_A	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw_A    :1;	\/**< Flag: Accelerated blits with Alpha *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_hw_CC	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw_CC   :1;	\/**< Flag: Accelerated blits with Colorkey *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_sw	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw      :1;	\/**< Flag: Accelerated blits SW --> HW *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_sw_A	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw_A    :1;	\/**< Flag: Accelerated blits with Alpha *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::blit_sw_CC	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw_CC   :1;	\/**< Flag: Accelerated blits with Colorkey *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::current_h	/usr/include/SDL/SDL_video.h	/^	int    current_h;	\/**< Value: The current video mode height *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:int	access:public
SDL_VideoInfo::current_w	/usr/include/SDL/SDL_video.h	/^	int    current_w;	\/**< Value: The current video mode width *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:int	access:public
SDL_VideoInfo::hw_available	/usr/include/SDL/SDL_video.h	/^	Uint32 hw_available :1;	\/**< Flag: Can you create hardware surfaces? *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInfo::vfmt	/usr/include/SDL/SDL_video.h	/^	SDL_PixelFormat *vfmt;	\/**< Value: The format of the video surface *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:SDL_PixelFormat *	access:public
SDL_VideoInfo::video_mem	/usr/include/SDL/SDL_video.h	/^	Uint32 video_mem;	\/**< The total amount of video memory (in K) *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32	access:public
SDL_VideoInfo::wm_available	/usr/include/SDL/SDL_video.h	/^	Uint32 wm_available :1;	\/**< Flag: Can you talk to a window manager? *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
SDL_VideoInit	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_VideoInit(const char *driver_name, Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name,Uint32 flags)
SDL_VideoModeOK	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_VideoModeOK(int width, int height, int bpp, Uint32 flags);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(int width,int height,int bpp,Uint32 flags)
SDL_VideoQuit	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_VideoQuit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_WM_GetCaption	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_WM_GetCaption(char **title, char **icon);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(char ** title,char ** icon)
SDL_WM_GrabInput	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC SDL_GrabMode SDLCALL SDL_WM_GrabInput(SDL_GrabMode mode);$/;"	p	typeref:typename:DECLSPEC SDL_GrabMode SDLCALL	signature:(SDL_GrabMode mode)
SDL_WM_IconifyWindow	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_WM_IconifyWindow(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_WM_SetCaption	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_WM_SetCaption(const char *title, const char *icon);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * title,const char * icon)
SDL_WM_SetIcon	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_WM_SetIcon(SDL_Surface *icon, Uint8 *mask);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * icon,Uint8 * mask)
SDL_WM_ToggleFullScreen	/usr/include/SDL/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_WM_ToggleFullScreen(SDL_Surface *surface);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface)
SDL_WaitEvent	/usr/include/SDL/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEvent(SDL_Event *event);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_WaitThread	/usr/include/SDL/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_WaitThread(SDL_Thread *thread, int *status);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread,int * status)
SDL_WarpMouse	/usr/include/SDL/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_WarpMouse(Uint16 x, Uint16 y);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint16 x,Uint16 y)
SDL_WasInit	/usr/include/SDL/SDL.h	/^extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags);$/;"	p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(Uint32 flags)
SDL_WriteBE16	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteBE16(SDL_RWops *dst, Uint16 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteBE32	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteBE32(SDL_RWops *dst, Uint32 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteBE64	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteBE64(SDL_RWops *dst, Uint64 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_WriteLE16	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteLE16(SDL_RWops *dst, Uint16 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteLE32	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteLE32(SDL_RWops *dst, Uint32 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteLE64	/usr/include/SDL/SDL_rwops.h	/^extern DECLSPEC int SDLCALL SDL_WriteLE64(SDL_RWops *dst, Uint64 value);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_YUY2_OVERLAY	/usr/include/SDL/SDL_video.h	/^#define SDL_YUY2_OVERLAY /;"	d
SDL_YV12_OVERLAY	/usr/include/SDL/SDL_video.h	/^#define SDL_YV12_OVERLAY /;"	d
SDL_YVYU_OVERLAY	/usr/include/SDL/SDL_video.h	/^#define SDL_YVYU_OVERLAY /;"	d
SDL_abs	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_abs	/;"	d
SDL_arraysize	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_arraysize(/;"	d	signature:(array)
SDL_atof	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_atof /;"	d
SDL_atof	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_atof(/;"	d	signature:(X)
SDL_atoi	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_atoi /;"	d
SDL_atoi	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_atoi(/;"	d	signature:(X)
SDL_audiostatus	/usr/include/SDL/SDL_audio.h	/^} SDL_audiostatus;$/;"	t	typeref:enum:__anon1345158c0103
SDL_blit	/usr/include/SDL/SDL_video.h	/^typedef int (*SDL_blit)(struct SDL_Surface *src, SDL_Rect *srcrect,$/;"	t	typeref:typename:int (*)(struct SDL_Surface * src,SDL_Rect * srcrect,struct SDL_Surface * dst,SDL_Rect * dstrect)
SDL_bool	/usr/include/SDL/SDL_stdinc.h	/^} SDL_bool;$/;"	t	typeref:enum:__anoncb8ed01f0103
SDL_calloc	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_calloc	/;"	d
SDL_cond	/usr/include/SDL/SDL_mutex.h	/^typedef struct SDL_cond SDL_cond;$/;"	t	typeref:struct:SDL_cond
SDL_errorcode	/usr/include/SDL/SDL_error.h	/^} SDL_errorcode;$/;"	t	typeref:enum:__anon412f3cc40103
SDL_eventaction	/usr/include/SDL/SDL_events.h	/^} SDL_eventaction;$/;"	t	typeref:enum:__anon7c9cd6cf0303
SDL_free	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_free	/;"	d
SDL_getenv	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_getenv	/;"	d
SDL_iconv	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_iconv(SDL_iconv_t cd, const char **inbuf, size_t *inbytesleft/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_iconv_t cd,const char ** inbuf,size_t * inbytesleft,char ** outbuf,size_t * outbytesleft)
SDL_iconv_close	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_close /;"	d
SDL_iconv_close	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_iconv_close(SDL_iconv_t cd);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_iconv_t cd)
SDL_iconv_open	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_open /;"	d
SDL_iconv_open	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC SDL_iconv_t SDLCALL SDL_iconv_open(const char *tocode, const char *fromcode);$/;"	p	typeref:typename:DECLSPEC SDL_iconv_t SDLCALL	signature:(const char * tocode,const char * fromcode)
SDL_iconv_string	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_iconv_string(const char *tocode, const char *fromcode, const /;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * tocode,const char * fromcode,const char * inbuf,size_t inbytesleft)
SDL_iconv_t	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_t /;"	d
SDL_iconv_t	/usr/include/SDL/SDL_stdinc.h	/^typedef struct _SDL_iconv_t *SDL_iconv_t;$/;"	t	typeref:struct:_SDL_iconv_t *
SDL_iconv_utf8_locale	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_utf8_locale(/;"	d	signature:(S)
SDL_iconv_utf8_ucs2	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs2(/;"	d	signature:(S)
SDL_iconv_utf8_ucs4	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs4(/;"	d	signature:(S)
SDL_isdigit	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_isdigit(/;"	d	signature:(X)
SDL_isspace	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_isspace(/;"	d	signature:(X)
SDL_itoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_itoa /;"	d
SDL_itoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_itoa(/;"	d	signature:(value,string,radix)
SDL_keysym	/usr/include/SDL/SDL_keyboard.h	/^typedef struct SDL_keysym {$/;"	s
SDL_keysym	/usr/include/SDL/SDL_keyboard.h	/^} SDL_keysym;$/;"	t	typeref:struct:SDL_keysym
SDL_keysym::mod	/usr/include/SDL/SDL_keyboard.h	/^	SDLMod mod;			\/**< current key modifiers *\/$/;"	m	struct:SDL_keysym	typeref:typename:SDLMod	access:public
SDL_keysym::scancode	/usr/include/SDL/SDL_keyboard.h	/^	Uint8 scancode;			\/**< hardware specific scancode *\/$/;"	m	struct:SDL_keysym	typeref:typename:Uint8	access:public
SDL_keysym::sym	/usr/include/SDL/SDL_keyboard.h	/^	SDLKey sym;			\/**< SDL virtual keysym *\/$/;"	m	struct:SDL_keysym	typeref:typename:SDLKey	access:public
SDL_keysym::unicode	/usr/include/SDL/SDL_keyboard.h	/^	Uint16 unicode;			\/**< translated character *\/$/;"	m	struct:SDL_keysym	typeref:typename:Uint16	access:public
SDL_lltoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_lltoa /;"	d
SDL_lltoa	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char* SDLCALL SDL_lltoa(Sint64 value, char *string, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Sint64 value,char * string,int radix)
SDL_ltoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ltoa /;"	d
SDL_ltoa	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_ltoa(long value, char *string, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(long value,char * string,int radix)
SDL_main	/usr/include/SDL/SDL_main.h	/^extern C_LINKAGE int SDL_main(int argc, char *argv[]);$/;"	p	typeref:typename:C_LINKAGE int	signature:(int argc,char * argv[])
SDL_malloc	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_malloc	/;"	d
SDL_max	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_max(/;"	d	signature:(x,y)
SDL_memcmp	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memcmp /;"	d
SDL_memcmp	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_memcmp(const void *s1, const void *s2, size_t len);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const void * s1,const void * s2,size_t len)
SDL_memcpy	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memcpy /;"	d
SDL_memcpy	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memcpy(/;"	d	signature:(dst,src,len)
SDL_memcpy4	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memcpy4(/;"	d	signature:(dst,src,len)
SDL_memmove	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memmove /;"	d
SDL_memmove	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memmove(/;"	d	signature:(d,s,n)
SDL_memmove	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memmove(/;"	d	signature:(dst,src,len)
SDL_memset	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memset /;"	d
SDL_memset4	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_memset4(/;"	d	signature:(dst,val,len)
SDL_min	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_min(/;"	d	signature:(x,y)
SDL_mutex	/usr/include/SDL/SDL_mutex.h	/^typedef struct SDL_mutex SDL_mutex;$/;"	t	typeref:struct:SDL_mutex
SDL_mutexP	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_mutexP(SDL_mutex *mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_mutexV	/usr/include/SDL/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_mutexV(SDL_mutex *mutex);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_putenv	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_putenv	/;"	d
SDL_qsort	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_qsort	/;"	d
SDL_realloc	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_realloc	/;"	d
SDL_reinterpret_cast	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_reinterpret_cast(/;"	d	signature:(type,expression)
SDL_revcpy	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_revcpy(/;"	d	signature:(dst,src,len)
SDL_revcpy	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC void * SDLCALL SDL_revcpy(void *dst, const void *src, size_t len);$/;"	p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * dst,const void * src,size_t len)
SDL_sem	/usr/include/SDL/SDL_mutex.h	/^typedef struct SDL_semaphore SDL_sem;$/;"	t	typeref:struct:SDL_semaphore
SDL_snprintf	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_snprintf /;"	d
SDL_snprintf	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_snprintf(char *text, size_t maxlen, const char *fmt, ...);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(char * text,size_t maxlen,const char * fmt,...)
SDL_sscanf	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_sscanf /;"	d
SDL_sscanf	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_sscanf(const char *text, const char *fmt, ...);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text,const char * fmt,...)
SDL_stack_alloc	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_stack_alloc(/;"	d	signature:(type,count)
SDL_stack_free	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_stack_free(/;"	d	signature:(data)
SDL_static_cast	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_static_cast(/;"	d	signature:(type,expression)
SDL_strcasecmp	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strcasecmp /;"	d
SDL_strcasecmp	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcasecmp(const char *str1, const char *str2);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strchr	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strchr /;"	d
SDL_strchr	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strchr(const char *string, int c);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * string,int c)
SDL_strcmp	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strcmp /;"	d
SDL_strcmp	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcmp(const char *str1, const char *str2);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strdup	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strdup /;"	d
SDL_strdup	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strdup(const char *string);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * string)
SDL_strlcat	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strlcat /;"	d
SDL_strlcat	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcat(char *dst, const char *src, size_t maxlen);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(char * dst,const char * src,size_t maxlen)
SDL_strlcpy	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strlcpy /;"	d
SDL_strlcpy	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcpy(char *dst, const char *src, size_t maxlen);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(char * dst,const char * src,size_t maxlen)
SDL_strlen	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strlen /;"	d
SDL_strlen	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlen(const char *string);$/;"	p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const char * string)
SDL_strlwr	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strlwr /;"	d
SDL_strlwr	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strlwr(char *string);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * string)
SDL_strncasecmp	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strncasecmp /;"	d
SDL_strncasecmp	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncasecmp(const char *str1, const char *str2, size_t maxlen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t maxlen)
SDL_strncmp	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strncmp /;"	d
SDL_strncmp	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncmp(const char *str1, const char *str2, size_t maxlen);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t maxlen)
SDL_strrchr	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strrchr /;"	d
SDL_strrchr	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strrchr(const char *string, int c);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * string,int c)
SDL_strrev	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strrev /;"	d
SDL_strrev	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strrev(char *string);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * string)
SDL_strstr	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strstr /;"	d
SDL_strstr	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strstr(const char *haystack, const char *needle);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * haystack,const char * needle)
SDL_strtod	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strtod /;"	d
SDL_strtod	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_strtod(const char *string, char **endp);$/;"	p	typeref:typename:DECLSPEC double SDLCALL	signature:(const char * string,char ** endp)
SDL_strtol	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strtol /;"	d
SDL_strtol	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC long SDLCALL SDL_strtol(const char *string, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC long SDLCALL	signature:(const char * string,char ** endp,int base)
SDL_strtoll	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strtoll /;"	d
SDL_strtoll	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC Sint64 SDLCALL SDL_strtoll(const char *string, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(const char * string,char ** endp,int base)
SDL_strtoul	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strtoul /;"	d
SDL_strtoul	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC unsigned long SDLCALL SDL_strtoul(const char *string, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC unsigned long SDLCALL	signature:(const char * string,char ** endp,int base)
SDL_strtoull	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strtoull /;"	d
SDL_strtoull	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC Uint64 SDLCALL SDL_strtoull(const char *string, char **endp, int base);$/;"	p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(const char * string,char ** endp,int base)
SDL_strupr	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_strupr /;"	d
SDL_strupr	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_strupr(char *string);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * string)
SDL_tolower	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_tolower(/;"	d	signature:(X)
SDL_toupper	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_toupper(/;"	d	signature:(X)
SDL_uitoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_uitoa /;"	d
SDL_uitoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_uitoa(/;"	d	signature:(value,string,radix)
SDL_ulltoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ulltoa /;"	d
SDL_ulltoa	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char* SDLCALL SDL_ulltoa(Uint64 value, char *string, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Uint64 value,char * string,int radix)
SDL_ultoa	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_ultoa /;"	d
SDL_ultoa	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC char * SDLCALL SDL_ultoa(unsigned long value, char *string, int radix);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(unsigned long value,char * string,int radix)
SDL_version	/usr/include/SDL/SDL_version.h	/^typedef struct SDL_version {$/;"	s
SDL_version	/usr/include/SDL/SDL_version.h	/^} SDL_version;$/;"	t	typeref:struct:SDL_version
SDL_version::major	/usr/include/SDL/SDL_version.h	/^	Uint8 major;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::minor	/usr/include/SDL/SDL_version.h	/^	Uint8 minor;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::patch	/usr/include/SDL/SDL_version.h	/^	Uint8 patch;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_vsnprintf	/usr/include/SDL/SDL_stdinc.h	/^#define SDL_vsnprintf /;"	d
SDL_vsnprintf	/usr/include/SDL/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsnprintf(char *text, size_t maxlen, const char *fmt, va_list ap/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(char * text,size_t maxlen,const char * fmt,va_list ap)
STDC_HEADERS	/usr/include/SDL/SDL_config.h	/^#define STDC_HEADERS /;"	d
Sint16	/usr/include/SDL/SDL_stdinc.h	/^typedef int16_t		Sint16;$/;"	t	typeref:typename:int16_t
Sint32	/usr/include/SDL/SDL_stdinc.h	/^typedef int32_t		Sint32;$/;"	t	typeref:typename:int32_t
Sint64	/usr/include/SDL/SDL_stdinc.h	/^typedef int64_t		Sint64;$/;"	t	typeref:typename:int64_t
Sint64	/usr/include/SDL/SDL_stdinc.h	/^} Uint64, Sint64;$/;"	t	typeref:struct:__anoncb8ed01f0208
Sint8	/usr/include/SDL/SDL_stdinc.h	/^typedef int8_t		Sint8;$/;"	t	typeref:typename:int8_t
TCPsocket	/usr/include/SDL/SDL_net.h	/^typedef struct _TCPsocket *TCPsocket;$/;"	t	typeref:struct:_TCPsocket *
TIMER_RESOLUTION	/usr/include/SDL/SDL_timer.h	/^#define TIMER_RESOLUTION	/;"	d
TTF_ByteSwappedUNICODE	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_ByteSwappedUNICODE(int swapped);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(int swapped)
TTF_CloseFont	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_CloseFont(TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font)
TTF_Font	/usr/include/SDL/SDL_ttf.h	/^typedef struct _TTF_Font TTF_Font;$/;"	t	typeref:struct:_TTF_Font
TTF_FontAscent	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontAscent(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontDescent	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontDescent(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceFamilyName	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceFamilyName(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceIsFixedWidth	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontFaceIsFixedWidth(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceStyleName	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceStyleName(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaces	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC long SDLCALL TTF_FontFaces(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC long SDLCALL	signature:(const TTF_Font * font)
TTF_FontHeight	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontHeight(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontLineSkip	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontLineSkip(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetError	/usr/include/SDL/SDL_ttf.h	/^#define TTF_GetError	/;"	d
TTF_GetFontHinting	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontHinting(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerning	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontKerning(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerningSize	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int TTF_GetFontKerningSize(TTF_Font *font, int prev_index, int index);$/;"	p	typeref:typename:DECLSPEC int	signature:(TTF_Font * font,int prev_index,int index)
TTF_GetFontOutline	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontOutline(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontStyle	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontStyle(const TTF_Font *font);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GlyphIsProvided	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphIsProvided(const TTF_Font *font, Uint16 ch);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font,Uint16 ch)
TTF_GlyphMetrics	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphMetrics(TTF_Font *font, Uint16 ch,$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,Uint16 ch,int * minx,int * maxx,int * miny,int * maxy,int * advance)
TTF_HINTING_LIGHT	/usr/include/SDL/SDL_ttf.h	/^#define TTF_HINTING_LIGHT /;"	d
TTF_HINTING_MONO	/usr/include/SDL/SDL_ttf.h	/^#define TTF_HINTING_MONO /;"	d
TTF_HINTING_NONE	/usr/include/SDL/SDL_ttf.h	/^#define TTF_HINTING_NONE /;"	d
TTF_HINTING_NORMAL	/usr/include/SDL/SDL_ttf.h	/^#define TTF_HINTING_NORMAL /;"	d
TTF_Init	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_Init(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
TTF_Linked_Version	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC const SDL_version * SDLCALL TTF_Linked_Version(void);$/;"	p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
TTF_MAJOR_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define TTF_MAJOR_VERSION	/;"	d
TTF_MINOR_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define TTF_MINOR_VERSION	/;"	d
TTF_OpenFont	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFont(const char *file, int ptsize);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize)
TTF_OpenFontIndex	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndex(const char *file, int ptsize, long index);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize,long index)
TTF_OpenFontIndexRW	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndexRW(SDL_RWops *src, int freesrc, int ptsize, /;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize,long index)
TTF_OpenFontRW	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontRW(SDL_RWops *src, int freesrc, int ptsize);$/;"	p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize)
TTF_PATCHLEVEL	/usr/include/SDL/SDL_ttf.h	/^#define TTF_PATCHLEVEL	/;"	d
TTF_Quit	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_Quit(void);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
TTF_RenderGlyph_Blended	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderGlyph_Shaded	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg,SDL_Color bg)
TTF_RenderGlyph_Solid	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderText	/usr/include/SDL/SDL_ttf.h	/^#define TTF_RenderText(/;"	d	signature:(font,text,fg,bg)
TTF_RenderText_Blended	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderText_Shaded	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderText_Solid	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUNICODE	/usr/include/SDL/SDL_ttf.h	/^#define TTF_RenderUNICODE(/;"	d	signature:(font,text,fg,bg)
TTF_RenderUNICODE_Blended	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUNICODE_Shaded	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUNICODE_Solid	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUTF8	/usr/include/SDL/SDL_ttf.h	/^#define TTF_RenderUTF8(/;"	d	signature:(font,text,fg,bg)
TTF_RenderUTF8_Blended	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Blended(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUTF8_Shaded	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Shaded(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUTF8_Solid	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Solid(TTF_Font *font,$/;"	p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_STYLE_BOLD	/usr/include/SDL/SDL_ttf.h	/^#define TTF_STYLE_BOLD	/;"	d
TTF_STYLE_ITALIC	/usr/include/SDL/SDL_ttf.h	/^#define TTF_STYLE_ITALIC	/;"	d
TTF_STYLE_NORMAL	/usr/include/SDL/SDL_ttf.h	/^#define TTF_STYLE_NORMAL	/;"	d
TTF_STYLE_STRIKETHROUGH	/usr/include/SDL/SDL_ttf.h	/^#define TTF_STYLE_STRIKETHROUGH	/;"	d
TTF_STYLE_UNDERLINE	/usr/include/SDL/SDL_ttf.h	/^#define TTF_STYLE_UNDERLINE	/;"	d
TTF_SetError	/usr/include/SDL/SDL_ttf.h	/^#define TTF_SetError	/;"	d
TTF_SetFontHinting	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontHinting(TTF_Font *font, int hinting);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int hinting)
TTF_SetFontKerning	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontKerning(TTF_Font *font, int allowed);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int allowed)
TTF_SetFontOutline	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontOutline(TTF_Font *font, int outline);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int outline)
TTF_SetFontStyle	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontStyle(TTF_Font *font, int style);$/;"	p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int style)
TTF_SizeText	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeText(TTF_Font *font, const char *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_SizeUNICODE	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUNICODE(TTF_Font *font, const Uint16 *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const Uint16 * text,int * w,int * h)
TTF_SizeUTF8	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUTF8(TTF_Font *font, const char *text, int *w, int *h);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_VERSION	/usr/include/SDL/SDL_ttf.h	/^#define TTF_VERSION(/;"	d	signature:(X)
TTF_WasInit	/usr/include/SDL/SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_WasInit(void);$/;"	p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
UDPpacket	/usr/include/SDL/SDL_net.h	/^} UDPpacket;$/;"	t	typeref:struct:__anon1a0e7ea10208
UDPsocket	/usr/include/SDL/SDL_net.h	/^typedef struct _UDPsocket *UDPsocket;$/;"	t	typeref:struct:_UDPsocket *
UNICODE_BOM_NATIVE	/usr/include/SDL/SDL_ttf.h	/^#define UNICODE_BOM_NATIVE	/;"	d
UNICODE_BOM_SWAPPED	/usr/include/SDL/SDL_ttf.h	/^#define UNICODE_BOM_SWAPPED	/;"	d
Uint16	/usr/include/SDL/SDL_stdinc.h	/^typedef uint16_t	Uint16;$/;"	t	typeref:typename:uint16_t
Uint32	/usr/include/SDL/SDL_stdinc.h	/^typedef uint32_t	Uint32;$/;"	t	typeref:typename:uint32_t
Uint64	/usr/include/SDL/SDL_stdinc.h	/^typedef uint64_t	Uint64;$/;"	t	typeref:typename:uint64_t
Uint64	/usr/include/SDL/SDL_stdinc.h	/^} Uint64, Sint64;$/;"	t	typeref:struct:__anoncb8ed01f0208
Uint8	/usr/include/SDL/SDL_stdinc.h	/^typedef uint8_t		Uint8;$/;"	t	typeref:typename:uint8_t
UnusedBits	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits :31;$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32:31	access:public
UnusedBits1	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits1  :6;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:6	access:public
UnusedBits2	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits2  :1;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
UnusedBits3	/usr/include/SDL/SDL_video.h	/^	Uint32 UnusedBits3  :16;$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:16	access:public
WIN32_LEAN_AND_MEAN	/usr/include/SDL/SDL_opengl.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL/SDL_opengl.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WMcursor	/usr/include/SDL/SDL_mouse.h	/^typedef struct WMcursor WMcursor;	\/**< Implementation dependent *\/$/;"	t	typeref:struct:WMcursor
_SDLNet_GenericSocket	/usr/include/SDL/SDL_net.h	/^typedef struct _SDLNet_GenericSocket {$/;"	s
_SDLNet_GenericSocket::ready	/usr/include/SDL/SDL_net.h	/^	int ready;$/;"	m	struct:_SDLNet_GenericSocket	typeref:typename:int	access:public
_SDL_H	/usr/include/SDL/SDL.h	/^#define _SDL_H$/;"	d
_SDL_IMAGE_H	/usr/include/SDL/SDL_image.h	/^#define _SDL_IMAGE_H$/;"	d
_SDL_MIXER_H	/usr/include/SDL/SDL_mixer.h	/^#define _SDL_MIXER_H$/;"	d
_SDL_NET_H	/usr/include/SDL/SDL_net.h	/^#define _SDL_NET_H$/;"	d
_SDL_TTF_H	/usr/include/SDL/SDL_ttf.h	/^#define _SDL_TTF_H$/;"	d
_SDL_active_h	/usr/include/SDL/SDL_active.h	/^#define _SDL_active_h$/;"	d
_SDL_audio_h	/usr/include/SDL/SDL_audio.h	/^#define _SDL_audio_h$/;"	d
_SDL_cdrom_h	/usr/include/SDL/SDL_cdrom.h	/^#define _SDL_cdrom_h$/;"	d
_SDL_config_h	/usr/include/SDL/SDL_config.h	/^#define _SDL_config_h$/;"	d
_SDL_cpuinfo_h	/usr/include/SDL/SDL_cpuinfo.h	/^#define _SDL_cpuinfo_h$/;"	d
_SDL_endian_h	/usr/include/SDL/SDL_endian.h	/^#define _SDL_endian_h$/;"	d
_SDL_error_h	/usr/include/SDL/SDL_error.h	/^#define _SDL_error_h$/;"	d
_SDL_events_h	/usr/include/SDL/SDL_events.h	/^#define _SDL_events_h$/;"	d
_SDL_joystick_h	/usr/include/SDL/SDL_joystick.h	/^#define _SDL_joystick_h$/;"	d
_SDL_keyboard_h	/usr/include/SDL/SDL_keyboard.h	/^#define _SDL_keyboard_h$/;"	d
_SDL_keysym_h	/usr/include/SDL/SDL_keysym.h	/^#define _SDL_keysym_h$/;"	d
_SDL_loadso_h	/usr/include/SDL/SDL_loadso.h	/^#define _SDL_loadso_h$/;"	d
_SDL_main_h	/usr/include/SDL/SDL_main.h	/^#define _SDL_main_h$/;"	d
_SDL_mouse_h	/usr/include/SDL/SDL_mouse.h	/^#define _SDL_mouse_h$/;"	d
_SDL_mutex_h	/usr/include/SDL/SDL_mutex.h	/^#define _SDL_mutex_h$/;"	d
_SDL_platform_h	/usr/include/SDL/SDL_platform.h	/^#define _SDL_platform_h$/;"	d
_SDL_quit_h	/usr/include/SDL/SDL_quit.h	/^#define _SDL_quit_h$/;"	d
_SDL_rwops_h	/usr/include/SDL/SDL_rwops.h	/^#define _SDL_rwops_h$/;"	d
_SDL_stdinc_h	/usr/include/SDL/SDL_stdinc.h	/^#define _SDL_stdinc_h$/;"	d
_SDL_syswm_h	/usr/include/SDL/SDL_syswm.h	/^#define _SDL_syswm_h$/;"	d
_SDL_thread_h	/usr/include/SDL/SDL_thread.h	/^#define _SDL_thread_h$/;"	d
_SDL_timer_h	/usr/include/SDL/SDL_timer.h	/^#define _SDL_timer_h$/;"	d
_SDL_version_h	/usr/include/SDL/SDL_version.h	/^#define _SDL_version_h$/;"	d
_SDL_video_h	/usr/include/SDL/SDL_video.h	/^#define _SDL_video_h$/;"	d
_SDLname_h_	/usr/include/SDL/SDL_name.h	/^#define _SDLname_h_$/;"	d
__AIX__	/usr/include/SDL/SDL_platform.h	/^#define __AIX__	/;"	d
__BEOS__	/usr/include/SDL/SDL_platform.h	/^#define __BEOS__	/;"	d
__BSDI__	/usr/include/SDL/SDL_platform.h	/^#define __BSDI__	/;"	d
__DREAMCAST__	/usr/include/SDL/SDL_platform.h	/^#define __DREAMCAST__	/;"	d
__FREEBSD__	/usr/include/SDL/SDL_platform.h	/^#define __FREEBSD__	/;"	d
__HAIKU__	/usr/include/SDL/SDL_platform.h	/^#define __HAIKU__	/;"	d
__HAIKU__	/usr/include/SDL/SDL_platform.h	/^#define __HAIKU__ /;"	d
__HPUX__	/usr/include/SDL/SDL_platform.h	/^#define __HPUX__	/;"	d
__IRIX__	/usr/include/SDL/SDL_platform.h	/^#define __IRIX__	/;"	d
__LINUX__	/usr/include/SDL/SDL_platform.h	/^#define __LINUX__	/;"	d
__MACOSX__	/usr/include/SDL/SDL_platform.h	/^#define __MACOSX__	/;"	d
__MACOS__	/usr/include/SDL/SDL_platform.h	/^#define __MACOS__	/;"	d
__NETBSD__	/usr/include/SDL/SDL_platform.h	/^#define __NETBSD__	/;"	d
__OPENBSD__	/usr/include/SDL/SDL_platform.h	/^#define __OPENBSD__	/;"	d
__OS2__	/usr/include/SDL/SDL_platform.h	/^#define __OS2__	/;"	d
__OSF__	/usr/include/SDL/SDL_platform.h	/^#define __OSF__	/;"	d
__QNXNTO__	/usr/include/SDL/SDL_platform.h	/^#define __QNXNTO__	/;"	d
__RISCOS__	/usr/include/SDL/SDL_platform.h	/^#define __RISCOS__	/;"	d
__SOLARIS__	/usr/include/SDL/SDL_platform.h	/^#define __SOLARIS__	/;"	d
__WIN32__	/usr/include/SDL/SDL_platform.h	/^#define __WIN32__	/;"	d
__anon1210cd29010a	/usr/include/SDL/SDL_endian.h	/^	union { $/;"	u	function:SDL_Swap64
__anon1210cd290208	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	s	union:SDL_Swap64::__anon1210cd29010a	access:public
__anon1345158c0103	/usr/include/SDL/SDL_audio.h	/^typedef enum {$/;"	g
__anon188e16bc0103	/usr/include/SDL/SDL_keysym.h	/^typedef enum {$/;"	g
__anon188e16bc0203	/usr/include/SDL/SDL_keysym.h	/^typedef enum {$/;"	g
__anon1a0e7ea10108	/usr/include/SDL/SDL_net.h	/^typedef struct {$/;"	s
__anon1a0e7ea10108::host	/usr/include/SDL/SDL_net.h	/^	Uint32 host;			\/* 32-bit IPv4 host address *\/$/;"	m	struct:__anon1a0e7ea10108	typeref:typename:Uint32	access:public
__anon1a0e7ea10108::port	/usr/include/SDL/SDL_net.h	/^	Uint16 port;			\/* 16-bit protocol port *\/$/;"	m	struct:__anon1a0e7ea10108	typeref:typename:Uint16	access:public
__anon1a0e7ea10208	/usr/include/SDL/SDL_net.h	/^typedef struct {$/;"	s
__anon1a0e7ea10208::address	/usr/include/SDL/SDL_net.h	/^	IPaddress address;		\/* The source\/dest address of an incoming\/outgoing packet *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:IPaddress	access:public
__anon1a0e7ea10208::channel	/usr/include/SDL/SDL_net.h	/^	int channel;		\/* The src\/dst channel of the packet *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
__anon1a0e7ea10208::data	/usr/include/SDL/SDL_net.h	/^	Uint8 *data;		\/* The packet data *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:Uint8 *	access:public
__anon1a0e7ea10208::len	/usr/include/SDL/SDL_net.h	/^	int len;		\/* The length of the packet data *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
__anon1a0e7ea10208::maxlen	/usr/include/SDL/SDL_net.h	/^	int maxlen;		\/* The size of the data buffer *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
__anon1a0e7ea10208::status	/usr/include/SDL/SDL_net.h	/^	int status;		\/* packet status after sending *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
__anon355864d5010a	/usr/include/SDL/SDL_rwops.h	/^	union {$/;"	u	struct:SDL_RWops	access:public
__anon355864d50208	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
__anon355864d50308	/usr/include/SDL/SDL_rwops.h	/^		struct {$/;"	s	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	access:public
__anon355864d50408	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
__anon355864d50508	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
__anon355864d50608	/usr/include/SDL/SDL_rwops.h	/^	    struct {$/;"	s	union:SDL_RWops::__anon355864d5010a	access:public
__anon412f3cc40103	/usr/include/SDL/SDL_error.h	/^typedef enum {$/;"	g
__anon47cbf8510103	/usr/include/SDL/SDL_video.h	/^typedef enum {$/;"	g
__anon47cbf8510203	/usr/include/SDL/SDL_video.h	/^typedef enum {$/;"	g
__anon683629bd0103	/usr/include/SDL/SDL_image.h	/^{$/;"	g
__anon7c9cd6cf0103	/usr/include/SDL/SDL_events.h	/^typedef enum {$/;"	g
__anon7c9cd6cf0203	/usr/include/SDL/SDL_events.h	/^typedef enum {$/;"	g
__anon7c9cd6cf0303	/usr/include/SDL/SDL_events.h	/^typedef enum {$/;"	g
__anon8692752f0103	/usr/include/SDL/SDL_cdrom.h	/^typedef enum {$/;"	g
__anon9469cc5f0103	/usr/include/SDL/SDL_mixer.h	/^{$/;"	g
__anon9469cc5f0203	/usr/include/SDL/SDL_mixer.h	/^typedef enum {$/;"	g
__anon9469cc5f0303	/usr/include/SDL/SDL_mixer.h	/^typedef enum {$/;"	g
__anoncb8ed01f0103	/usr/include/SDL/SDL_stdinc.h	/^typedef enum {$/;"	g
__anoncb8ed01f0208	/usr/include/SDL/SDL_stdinc.h	/^typedef struct {$/;"	s
__anoncb8ed01f0208::hi	/usr/include/SDL/SDL_stdinc.h	/^	Uint32 hi;$/;"	m	struct:__anoncb8ed01f0208	typeref:typename:Uint32	access:public
__anoncb8ed01f0208::lo	/usr/include/SDL/SDL_stdinc.h	/^	Uint32 lo;$/;"	m	struct:__anoncb8ed01f0208	typeref:typename:Uint32	access:public
__anoncb8ed01f0303	/usr/include/SDL/SDL_stdinc.h	/^typedef enum {$/;"	g
__glext_h_	/usr/include/SDL/SDL_opengl.h	/^#define __glext_h_ /;"	d
__glext_h_	/usr/include/SDL/SDL_opengl.h	/^#define __glext_h_$/;"	d
__inline__	/usr/include/SDL/begin_code.h	/^#define __inline__	/;"	d
__inline__	/usr/include/SDL/begin_code.h	/^#define __inline__ /;"	d
__inline__	/usr/include/SDL/begin_code.h	/^#define __inline__$/;"	d
_begin_code_h	/usr/include/SDL/begin_code.h	/^#define _begin_code_h$/;"	d
a	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	typeref:typename:Uint32	access:public
abuf	/usr/include/SDL/SDL_mixer.h	/^	Uint8 *abuf;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8 *	access:public
active	/usr/include/SDL/SDL_events.h	/^	SDL_ActiveEvent active;$/;"	m	union:SDL_Event	typeref:typename:SDL_ActiveEvent	access:public
address	/usr/include/SDL/SDL_net.h	/^	IPaddress address;		\/* The source\/dest address of an incoming\/outgoing packet *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:IPaddress	access:public
alen	/usr/include/SDL/SDL_mixer.h	/^	Uint32 alen;$/;"	m	struct:Mix_Chunk	typeref:typename:Uint32	access:public
allocated	/usr/include/SDL/SDL_mixer.h	/^	int allocated;$/;"	m	struct:Mix_Chunk	typeref:typename:int	access:public
alpha	/usr/include/SDL/SDL_video.h	/^	Uint8  alpha;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
append	/usr/include/SDL/SDL_rwops.h	/^		int   append;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:typename:int	access:public
area	/usr/include/SDL/SDL_mouse.h	/^	SDL_Rect area;			\/**< The area of the mouse cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:SDL_Rect	access:public
autoclose	/usr/include/SDL/SDL_rwops.h	/^		int autoclose;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	typeref:typename:int	access:public
axis	/usr/include/SDL/SDL_events.h	/^	Uint8 axis;	\/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
b	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	typeref:typename:Uint32	access:public
b	/usr/include/SDL/SDL_video.h	/^	Uint8 b;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
ball	/usr/include/SDL/SDL_events.h	/^	Uint8 ball;	\/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
base	/usr/include/SDL/SDL_rwops.h	/^		Uint8 *base;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
blit_fill	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_fill    :1;	\/**< Flag: Accelerated color fill *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_hw	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw      :1;	\/**< Flag: Accelerated blits HW --> HW *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_hw_A	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw_A    :1;	\/**< Flag: Accelerated blits with Alpha *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_hw_CC	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_hw_CC   :1;	\/**< Flag: Accelerated blits with Colorkey *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_sw	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw      :1;	\/**< Flag: Accelerated blits SW --> HW *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_sw_A	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw_A    :1;	\/**< Flag: Accelerated blits with Alpha *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
blit_sw_CC	/usr/include/SDL/SDL_video.h	/^	Uint32 blit_sw_CC   :1;	\/**< Flag: Accelerated blits with Colorkey *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
buf	/usr/include/SDL/SDL_audio.h	/^	Uint8 *buf;			\/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
buffer	/usr/include/SDL/SDL_rwops.h	/^		} buffer;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	access:public
button	/usr/include/SDL/SDL_events.h	/^	SDL_MouseButtonEvent button;$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
button	/usr/include/SDL/SDL_events.h	/^	Uint8 button;	\/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
button	/usr/include/SDL/SDL_events.h	/^	Uint8 button;	\/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
channel	/usr/include/SDL/SDL_net.h	/^	int channel;		\/* The src\/dst channel of the packet *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
channels	/usr/include/SDL/SDL_audio.h	/^	Uint8  channels;	\/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
clip_rect	/usr/include/SDL/SDL_video.h	/^	SDL_Rect clip_rect;			\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
code	/usr/include/SDL/SDL_events.h	/^	int code;	\/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:int	access:public
colorkey	/usr/include/SDL/SDL_video.h	/^	Uint32 colorkey;$/;"	m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
colors	/usr/include/SDL/SDL_video.h	/^	SDL_Color *colors;$/;"	m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
cur_frame	/usr/include/SDL/SDL_cdrom.h	/^	int cur_frame;		\/**< Current frame offset within current track *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
cur_track	/usr/include/SDL/SDL_cdrom.h	/^	int cur_track;		\/**< Current track position *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
current_h	/usr/include/SDL/SDL_video.h	/^	int    current_h;	\/**< Value: The current video mode height *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:int	access:public
current_w	/usr/include/SDL/SDL_video.h	/^	int    current_w;	\/**< Value: The current video mode width *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:int	access:public
data	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *data;			\/**< B\/W cursor data *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 *	access:public
data	/usr/include/SDL/SDL_net.h	/^	Uint8 *data;		\/* The packet data *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:Uint8 *	access:public
data	/usr/include/SDL/SDL_rwops.h	/^		    void *data;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:void *	access:public
data1	/usr/include/SDL/SDL_events.h	/^	void *data1;	\/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
data1	/usr/include/SDL/SDL_rwops.h	/^		void *data1;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50608	typeref:typename:void *	access:public
data2	/usr/include/SDL/SDL_events.h	/^	void *data2;	\/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:void *	access:public
dst_format	/usr/include/SDL/SDL_audio.h	/^	Uint16 dst_format;		\/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint16	access:public
expose	/usr/include/SDL/SDL_events.h	/^	SDL_ExposeEvent expose;$/;"	m	union:SDL_Event	typeref:typename:SDL_ExposeEvent	access:public
filter_index	/usr/include/SDL/SDL_audio.h	/^	int filter_index;		\/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
flags	/usr/include/SDL/SDL_video.h	/^	Uint32 flags;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
format	/usr/include/SDL/SDL_audio.h	/^	Uint16 format;		\/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
format	/usr/include/SDL/SDL_video.h	/^	SDL_PixelFormat *format;		\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
format	/usr/include/SDL/SDL_video.h	/^	Uint32 format;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32	access:public
format_version	/usr/include/SDL/SDL_video.h	/^	unsigned int format_version;		\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:unsigned int	access:public
fp	/usr/include/SDL/SDL_rwops.h	/^	 	FILE *fp;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	typeref:typename:FILE *	access:public
freq	/usr/include/SDL/SDL_audio.h	/^	int freq;		\/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:int	access:public
g	/usr/include/SDL/SDL_video.h	/^	Uint8 g;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
gain	/usr/include/SDL/SDL_events.h	/^	Uint8 gain;	\/**< Whether given states were gained or lost (1\/0) *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
glActiveStencilFaceEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glActiveTexture	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glActiveTexture (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glActiveTextureARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glAlphaFragmentOp1ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint)
glAlphaFragmentOp2ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint)
glAlphaFragmentOp3ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint)
glApplyTextureEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glAreProgramsResidentNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei, const GLuint *, GLboolean *);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei,const GLuint *,GLboolean *)
glAreTexturesResidentEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei, const GLuint *, GLboolean *);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei,const GLuint *,GLboolean *)
glArrayElementEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glArrayObjectATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLuint,GLuint)
glAsyncMarkerSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glAttachObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB, GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLhandleARB)
glAttachShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glAttachShader (GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint)
glBeginFragmentShaderATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBeginOcclusionQueryNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glBeginQuery	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBeginQuery (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBeginQueryARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBeginVertexShaderEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBindAttribLocation	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint, GLuint, const GLchar *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,const GLchar *)
glBindAttribLocationARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB, GLuint, const GLcharARB *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLuint,const GLcharARB *)
glBindBuffer	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindBuffer (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindBufferARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindFragmentShaderATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glBindFramebufferEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindLightParameterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum,GLenum)
glBindMaterialParameterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum,GLenum)
glBindParameterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum)
glBindProgramARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindProgramNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindRenderbufferEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindTexGenParameterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum,GLenum,GLenum)
glBindTextureEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glBindTextureUnitParameterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum,GLenum)
glBindVertexArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glBindVertexShaderEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glBinormal3bEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte, GLbyte, GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte,GLbyte,GLbyte)
glBinormal3bvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte *)
glBinormal3dEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glBinormal3dvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glBinormal3fEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glBinormal3fvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glBinormal3iEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glBinormal3ivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glBinormal3sEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glBinormal3svEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glBinormalPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLvoid *)
glBlendColor	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendColor (GLclampf, GLclampf, GLclampf, GLclampf);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLclampf,GLclampf,GLclampf)
glBlendColorEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLclampf,GLclampf,GLclampf)
glBlendEquation	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquation (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glBlendEquationEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glBlendEquationSeparate	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glBlendEquationSeparateEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glBlendFuncSeparate	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glBlendFuncSeparateEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glBlendFuncSeparateINGR	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glBufferData	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBufferData (GLenum, GLsizeiptr, const GLvoid *, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizeiptr,const GLvoid *,GLenum)
glBufferDataARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum, GLsizeiptrARB, const GLvoid *, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizeiptrARB,const GLvoid *,GLenum)
glBufferSubData	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBufferSubData (GLenum, GLintptr, GLsizeiptr, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLintptr,GLsizeiptr,const GLvoid *)
glBufferSubDataARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum, GLintptrARB, GLsizeiptrARB, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLintptrARB,GLsizeiptrARB,const GLvoid *)
glCheckFramebufferStatusEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum);$/;"	p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum)
glClampColorARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glClampColorARB (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glClientActiveTexture	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glClientActiveTextureARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glClientActiveVertexStreamATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glColor3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glColor3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *)
glColor3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV)
glColor3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glColor4fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glColor4fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *, const GLfloat *, const GLflo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *,const GLfloat *)
glColor4hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV,GLhalfNV)
glColor4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glColor4ubVertex2fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte,GLubyte,GLubyte,GLubyte,GLfloat,GLfloat)
glColor4ubVertex2fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte *,const GLfloat *)
glColor4ubVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte,GLubyte,GLubyte,GLubyte,GLfloat,GLfloat,GLfloat)
glColor4ubVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte *,const GLfloat *)
glColorFragmentOp1ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint)
glColorFragmentOp2ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint)
glColorFragmentOp3ATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuin/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint,GLuint)
glColorPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,GLsizei,const GLvoid *)
glColorPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint, GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLint,const GLvoid **,GLint)
glColorPointervINTEL	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint, GLenum, const GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,const GLvoid **)
glColorSubTable	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorSubTable (GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glColorSubTableEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glColorTable	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTable (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *)
glColorTableEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *)
glColorTableParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glColorTableParameterfvSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glColorTableParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glColorTableParameterivSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glColorTableSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *)
glCombinerInputNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum,GLenum,GLenum)
glCombinerOutputNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum,GLenum,GLenum,GLenum,GLboolean,GLboolean,GLboolean)
glCombinerParameterfNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glCombinerParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glCombinerParameteriNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glCombinerParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glCombinerStageParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glCompileShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompileShader (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glCompileShaderARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB)
glCompressedTexImage1D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, cons/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexImage1DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexImage2D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexImage2DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexImage3D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexImage3DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *)
glCompressedTexSubImage1D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,const GLvoid *)
glCompressedTexSubImage1DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,const GLvoid *)
glCompressedTexSubImage2D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *)
glCompressedTexSubImage2DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *)
glCompressedTexSubImage3D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *)
glCompressedTexSubImage3DARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *)
glConvolutionFilter1D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *)
glConvolutionFilter1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLv/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *)
glConvolutionFilter2D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glConvolutionFilter2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glConvolutionParameterf	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glConvolutionParameterfEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glConvolutionParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glConvolutionParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glConvolutionParameteri	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glConvolutionParameteriEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glConvolutionParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glConvolutionParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glCopyColorSubTable	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum, GLsizei, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLint,GLint,GLsizei)
glCopyColorSubTableEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum, GLsizei, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLint,GLint,GLsizei)
glCopyColorTable	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum, GLenum, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei)
glCopyColorTableSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum, GLenum, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei)
glCopyConvolutionFilter1D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum, GLenum, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei)
glCopyConvolutionFilter1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum, GLenum, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei)
glCopyConvolutionFilter2D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei,GLsizei)
glCopyConvolutionFilter2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLint,GLsizei,GLsizei)
glCopyTexImage1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint)
glCopyTexImage2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint)
glCopyTexSubImage1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum, GLint, GLint, GLint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLsizei)
glCopyTexSubImage2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei)
glCopyTexSubImage3D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei)
glCopyTexSubImage3DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei)
glCreateProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(void)
glCreateProgramObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(void)
glCreateShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum)
glCreateShaderObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum)
glCullParameterdvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble *)
glCullParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat *)
glCurrentPaletteMatrixARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glDeformSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield)
glDeformationMap3dSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,const GLdouble *)
glDeformationMap3fSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,const GLfloat *)
glDeleteAsyncMarkersSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei)
glDeleteBuffers	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteBuffersARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteFencesAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteFencesNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteFragmentShaderATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDeleteFramebuffersEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB)
glDeleteOcclusionQueriesNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDeleteProgramsARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteProgramsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteQueries	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteQueriesARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteRenderbuffersEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteShader (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDeleteTexturesEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteVertexArraysAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glDeleteVertexShaderEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDepthBoundsEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd, GLclampd);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampd,GLclampd)
glDetachObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB, GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLhandleARB)
glDetachShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDetachShader (GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint)
glDetailTexFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLfloat *)
glDisableVariantClientStateEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDisableVertexAttribArray	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDisableVertexAttribArrayARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glDrawArraysEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLsizei)
glDrawBuffers	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei, const GLenum *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLenum *)
glDrawBuffersARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei, const GLenum *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLenum *)
glDrawBuffersATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei, const GLenum *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLenum *)
glDrawElementArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLsizei)
glDrawElementArrayATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei)
glDrawMeshArraysSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum, GLint, GLsizei, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLsizei,GLsizei)
glDrawRangeElementArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum, GLuint, GLuint, GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLint,GLsizei)
glDrawRangeElementArrayATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum, GLuint, GLuint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLsizei)
glDrawRangeElements	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLsizei,GLenum,const GLvoid *)
glDrawRangeElementsEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoi/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLsizei,GLenum,const GLvoid *)
glEdgeFlagPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei, GLsizei, const GLboolean *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLsizei,const GLboolean *)
glEdgeFlagPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint, const GLboolean* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLboolean **,GLint)
glElementPointerAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLvoid *)
glElementPointerATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLvoid *)
glEnableVariantClientStateEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glEnableVertexAttribArray	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glEnableVertexAttribArrayARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glEndFragmentShaderATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndOcclusionQueryNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndQuery	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEndQuery (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glEndQueryARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glEndVertexShaderEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEvalMapsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glExecuteProgramNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum, GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLfloat *)
glExtractComponentEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLuint)
glFinalCombinerInputNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glFinishAsyncSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint *)
glFinishFenceAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glFinishFenceNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glFinishObjectAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glFinishTextureSUNX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlushPixelDataRangeNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glFlushRasterSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlushVertexArrayRangeAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLvoid *)
glFlushVertexArrayRangeNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFogCoordPointer	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLvoid *)
glFogCoordPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLvoid *)
glFogCoordPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,const GLvoid **,GLint)
glFogCoordd	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble)
glFogCoorddEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble)
glFogCoorddv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glFogCoorddvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glFogCoordf	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat)
glFogCoordfEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat)
glFogCoordfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glFogCoordfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glFogCoordhNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV)
glFogCoordhvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glFogFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLfloat *)
glFragmentColorMaterialSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glFragmentLightModelfSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glFragmentLightModelfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glFragmentLightModeliSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glFragmentLightModelivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glFragmentLightfSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glFragmentLightfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glFragmentLightiSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glFragmentLightivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glFragmentMaterialfSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glFragmentMaterialfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glFragmentMaterialiSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glFragmentMaterialivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glFrameZoomSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glFramebufferRenderbufferEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum, GLenum, GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLuint)
glFramebufferTexture1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum, GLenum, GLenum, GLuint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLuint,GLint)
glFramebufferTexture2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum, GLenum, GLenum, GLuint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLuint,GLint)
glFramebufferTexture3DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum, GLenum, GLenum, GLuint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLuint,GLint,GLint)
glFreeObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glGenAsyncMarkersSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei)
glGenBuffers	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenBuffersARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenFencesAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenFencesNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenFragmentShadersATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint)
glGenFramebuffersEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenOcclusionQueriesNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenProgramsARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenProgramsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenQueries	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenQueries (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenQueriesARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenRenderbuffersEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenSymbolsEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum, GLenum, GLenum, GLuint);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum,GLenum,GLenum,GLuint)
glGenTexturesEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLuint *)
glGenVertexArraysAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glGenVertexShadersEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint)
glGenerateMipmapEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glGetActiveAttrib	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *)
glGetActiveAttribARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLen/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLcharARB *)
glGetActiveUniform	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *)
glGetActiveUniformARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLe/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLcharARB *)
glGetArrayObjectfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetArrayObjectivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetAttachedObjectsARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB, GLsizei, GLsizei *, GLhandleARB *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLsizei,GLsizei *,GLhandleARB *)
glGetAttachedShaders	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint, GLsizei, GLsizei *, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,GLsizei *,GLuint *)
glGetAttribLocation	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint, const GLchar *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint,const GLchar *)
glGetAttribLocationARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB, const GLcharARB *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB,const GLcharARB *)
glGetBufferParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetBufferParameterivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetBufferPointerv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLvoid **)
glGetBufferPointervARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLvoid **)
glGetBufferSubData	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum, GLintptr, GLsizeiptr, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLintptr,GLsizeiptr,GLvoid *)
glGetBufferSubDataARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum, GLintptrARB, GLsizeiptrARB, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLintptrARB,GLsizeiptrARB,GLvoid *)
glGetColorTable	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTable (GLenum, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *)
glGetColorTableEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *)
glGetColorTableParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetColorTableParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetColorTableParameterfvSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetColorTableParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetColorTableParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetColorTableParameterivSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetColorTableSGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *)
glGetCombinerInputParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum, GLenum, GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum,GLfloat *)
glGetCombinerInputParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum, GLenum, GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum,GLint *)
glGetCombinerOutputParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum, GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLfloat *)
glGetCombinerOutputParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum, GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLint *)
glGetCombinerStageParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetCompressedTexImage	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum, GLint, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLvoid *)
glGetCompressedTexImageARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum, GLint, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLvoid *)
glGetConvolutionFilter	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *)
glGetConvolutionFilterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *)
glGetConvolutionParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetConvolutionParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetConvolutionParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetConvolutionParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetDetailTexFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat *)
glGetFenceivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetFinalCombinerInputParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetFinalCombinerInputParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetFogFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat *)
glGetFragmentLightfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetFragmentLightivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetFragmentMaterialfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetFragmentMaterialivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetFramebufferAttachmentParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum, GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLint *)
glGetHandleARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum);$/;"	p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum)
glGetHistogram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogram (GLenum, GLboolean, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLboolean,GLenum,GLenum,GLvoid *)
glGetHistogramEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum, GLboolean, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLboolean,GLenum,GLenum,GLvoid *)
glGetHistogramParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetHistogramParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetHistogramParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetHistogramParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetImageTransformParameterfvHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetImageTransformParameterivHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetInfoLogARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB, GLsizei, GLsizei *, GLcharARB *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLsizei,GLsizei *,GLcharARB *)
glGetInstrumentsSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(void)
glGetInvariantBooleanvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint, GLenum, GLboolean *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLboolean *)
glGetInvariantFloatvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetInvariantIntegervEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetListParameterfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetListParameterivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetLocalConstantBooleanvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint, GLenum, GLboolean *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLboolean *)
glGetLocalConstantFloatvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetLocalConstantIntegervEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetMapAttribParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum, GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLfloat *)
glGetMapAttribParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum, GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLint *)
glGetMapControlPointsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLsizei,GLsizei,GLboolean,GLvoid *)
glGetMapParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetMapParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetMinmax	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmax (GLenum, GLboolean, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLboolean,GLenum,GLenum,GLvoid *)
glGetMinmaxEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum, GLboolean, GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLboolean,GLenum,GLenum,GLvoid *)
glGetMinmaxParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetMinmaxParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetMinmaxParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetMinmaxParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetObjectBufferfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetObjectBufferivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetObjectParameterfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLenum,GLfloat *)
glGetObjectParameterivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLenum,GLint *)
glGetOcclusionQueryivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetOcclusionQueryuivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint, GLenum, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLuint *)
glGetPixelTexGenParameterfvSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat *)
glGetPixelTexGenParameterivSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint *)
glGetPointervEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLvoid **)
glGetProgramEnvParameterdvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum, GLuint, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLdouble *)
glGetProgramEnvParameterfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum, GLuint, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLfloat *)
glGetProgramInfoLog	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint, GLsizei, GLsizei *, GLchar *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,GLsizei *,GLchar *)
glGetProgramLocalParameterdvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum, GLuint, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLdouble *)
glGetProgramLocalParameterfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum, GLuint, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLfloat *)
glGetProgramNamedParameterdvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint, GLsizei, const GLubyte *, GLdouble */;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,GLdouble *)
glGetProgramNamedParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint, GLsizei, const GLubyte *, GLfloat *)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,GLfloat *)
glGetProgramParameterdvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum, GLuint, GLenum, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLdouble *)
glGetProgramParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum, GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLfloat *)
glGetProgramStringARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum, GLenum, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLvoid *)
glGetProgramStringNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint, GLenum, GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLubyte *)
glGetProgramiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetProgramivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetProgramivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetQueryObjectiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetQueryObjectivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetQueryObjectuiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint, GLenum, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLuint *)
glGetQueryObjectuivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint, GLenum, GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLuint *)
glGetQueryiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetQueryivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetRenderbufferParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint *)
glGetSeparableFilter	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *,GLvoid *,GLvoid *)
glGetSeparableFilterEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLvoid *,GLvoid *,GLvoid *)
glGetShaderInfoLog	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint, GLsizei, GLsizei *, GLchar *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,GLsizei *,GLchar *)
glGetShaderSource	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint, GLsizei, GLsizei *, GLchar *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,GLsizei *,GLchar *)
glGetShaderSourceARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB, GLsizei, GLsizei *, GLcharARB *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLsizei,GLsizei *,GLcharARB *)
glGetShaderiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetSharpenTexFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat *)
glGetTexBumpParameterfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat *)
glGetTexBumpParameterivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint *)
glGetTexFilterFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat *)
glGetTrackMatrixivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum, GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLint *)
glGetUniformLocation	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint, const GLchar *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint,const GLchar *)
glGetUniformLocationARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB, const GLcharARB *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB,const GLcharARB *)
glGetUniformfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint, GLint, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLfloat *)
glGetUniformfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB, GLint, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLint,GLfloat *)
glGetUniformiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint, GLint, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLint *)
glGetUniformivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB, GLint, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLint,GLint *)
glGetVariantArrayObjectfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVariantArrayObjectivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetVariantBooleanvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint, GLenum, GLboolean *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLboolean *)
glGetVariantFloatvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVariantIntegervEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetVariantPointervEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLvoid **)
glGetVertexAttribArrayObjectfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVertexAttribArrayObjectivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetVertexAttribPointerv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLvoid **)
glGetVertexAttribPointervARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLvoid **)
glGetVertexAttribPointervNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint, GLenum, GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLvoid **)
glGetVertexAttribdv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint, GLenum, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLdouble *)
glGetVertexAttribdvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint, GLenum, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLdouble *)
glGetVertexAttribdvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint, GLenum, GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLdouble *)
glGetVertexAttribfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVertexAttribfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVertexAttribfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint, GLenum, GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat *)
glGetVertexAttribiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetVertexAttribivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGetVertexAttribivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint, GLenum, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint *)
glGlobalAlphaFactorbSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte)
glGlobalAlphaFactordSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble)
glGlobalAlphaFactorfSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat)
glGlobalAlphaFactoriSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glGlobalAlphaFactorsSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort)
glGlobalAlphaFactorubSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte)
glGlobalAlphaFactoruiSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glGlobalAlphaFactorusSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort)
glHintPGI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glHintPGI (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glHistogram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glHistogram (GLenum, GLsizei, GLenum, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLenum,GLboolean)
glHistogramEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum, GLsizei, GLenum, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLenum,GLboolean)
glIglooInterfaceSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLvoid *)
glImageTransformParameterfHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glImageTransformParameterfvHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glImageTransformParameteriHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glImageTransformParameterivHP	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glIndexFuncEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum, GLclampf);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLclampf)
glIndexMaterialEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glIndexPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum, GLsizei, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLsizei,const GLvoid *)
glIndexPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,const GLvoid **,GLint)
glInsertComponentEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLuint)
glInstrumentsBufferSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei, GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLint *)
glIsAsyncMarkerSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsBuffer	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsBufferARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsFenceAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsFenceNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsFramebufferEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsOcclusionQueryNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsProgramARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsProgramNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsQuery	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsQueryARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsRenderbufferEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsShader	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsTextureEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glIsVariantEnabledEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint, GLenum);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint,GLenum)
glIsVertexArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glLightEnviSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glLinkProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLinkProgram (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glLinkProgramARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB)
glListParameterfSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLfloat)
glListParameterfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,const GLfloat *)
glListParameteriSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLint)
glListParameterivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,const GLint *)
glLoadIdentityDeformationMapSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield)
glLoadProgramNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum, GLuint, GLsizei, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLsizei,const GLubyte *)
glLoadTransposeMatrixd	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glLoadTransposeMatrixdARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glLoadTransposeMatrixf	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glLoadTransposeMatrixfARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glLockArraysEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei)
glMapBuffer	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapBuffer (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLvoid * APIENTRY	signature:(GLenum,GLenum)
glMapBufferARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapBufferARB (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI GLvoid * APIENTRY	signature:(GLenum,GLenum)
glMapControlPointsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLsizei,GLsizei,GLint,GLint,GLboolean,const GLvoid *)
glMapObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapObjectBufferATI (GLuint);$/;"	p	typeref:typename:GLAPI GLvoid * APIENTRY	signature:(GLuint)
glMapParameterfvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glMapParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glMatrixIndexPointerARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,const GLvoid *)
glMatrixIndexubvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLubyte *)
glMatrixIndexuivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLuint *)
glMatrixIndexusvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLushort *)
glMinmax	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMinmax (GLenum, GLenum, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLboolean)
glMinmaxEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum, GLenum, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLboolean)
glMultTransposeMatrixd	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glMultTransposeMatrixdARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glMultTransposeMatrixf	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glMultTransposeMatrixfARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glMultiDrawArrays	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum, GLint *, GLsizei *, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint *,GLsizei *,GLsizei)
glMultiDrawArraysEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum, GLint *, GLsizei *, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint *,GLsizei *,GLsizei)
glMultiDrawElementArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum, const GLint *, const GLsizei *, GLsize/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *,const GLsizei *,GLsizei)
glMultiDrawElements	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLsizei *,GLenum,const GLvoid **,GLsizei)
glMultiDrawElementsEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLsizei *,GLenum,const GLvoid **,GLsizei)
glMultiDrawRangeElementArrayAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum, GLuint, GLuint, const GLint *, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,const GLint *,const GLsizei *,GLsizei)
glMultiModeDrawArraysIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *, const GLint *, const GLsizei *, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum *,const GLint *,const GLsizei *,GLsizei,GLint)
glMultiModeDrawElementsIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *, const GLsizei *, GLenum, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum *,const GLsizei *,GLenum,const GLvoid * const *,GLsizei,GLint)
glMultiTexCoord1d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble)
glMultiTexCoord1dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble)
glMultiTexCoord1dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord1dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord1f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glMultiTexCoord1fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glMultiTexCoord1fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord1fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord1hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLhalfNV)
glMultiTexCoord1hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLhalfNV *)
glMultiTexCoord1i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glMultiTexCoord1iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glMultiTexCoord1iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord1ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord1s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort)
glMultiTexCoord1sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort)
glMultiTexCoord1sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord1svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord2d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble)
glMultiTexCoord2dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble)
glMultiTexCoord2dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord2dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord2f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat)
glMultiTexCoord2fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat)
glMultiTexCoord2fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord2fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord2hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLhalfNV,GLhalfNV)
glMultiTexCoord2hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLhalfNV *)
glMultiTexCoord2i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint)
glMultiTexCoord2iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint)
glMultiTexCoord2iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord2ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord2s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort)
glMultiTexCoord2sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort)
glMultiTexCoord2sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord2svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord3d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble)
glMultiTexCoord3dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble)
glMultiTexCoord3dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord3dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord3f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat)
glMultiTexCoord3fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat)
glMultiTexCoord3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord3fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLhalfNV,GLhalfNV,GLhalfNV)
glMultiTexCoord3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLhalfNV *)
glMultiTexCoord3i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint)
glMultiTexCoord3iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint)
glMultiTexCoord3iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord3ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord3s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort)
glMultiTexCoord3sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort)
glMultiTexCoord3sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord3svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord4d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble,GLdouble)
glMultiTexCoord4dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble,GLdouble)
glMultiTexCoord4dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord4dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glMultiTexCoord4f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat,GLfloat)
glMultiTexCoord4fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat,GLfloat)
glMultiTexCoord4fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glMultiTexCoord4hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLhalfNV,GLhalfNV,GLhalfNV,GLhalfNV)
glMultiTexCoord4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLhalfNV *)
glMultiTexCoord4i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum, GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint)
glMultiTexCoord4iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint)
glMultiTexCoord4iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord4ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glMultiTexCoord4s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort,GLshort)
glMultiTexCoord4sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort,GLshort)
glMultiTexCoord4sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glMultiTexCoord4svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glNewObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei, const GLvoid *, GLenum);$/;"	p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei,const GLvoid *,GLenum)
glNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *)
glNormal3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV)
glNormal3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glNormalPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum, GLsizei, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLsizei,const GLvoid *)
glNormalPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,const GLvoid **,GLint)
glNormalPointervINTEL	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum, const GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLvoid **)
glNormalStream3bATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum, GLbyte, GLbyte, GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLbyte,GLbyte,GLbyte)
glNormalStream3bvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLbyte *)
glNormalStream3dATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble)
glNormalStream3dvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glNormalStream3fATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat)
glNormalStream3fvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glNormalStream3iATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint)
glNormalStream3ivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glNormalStream3sATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort)
glNormalStream3svATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glPNTrianglesfATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPNTrianglesiATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glPassTexCoordATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint, GLuint, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLenum)
glPixelDataRangeNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum, GLsizei, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,GLvoid *)
glPixelTexGenParameterfSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPixelTexGenParameterfvSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glPixelTexGenParameteriSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glPixelTexGenParameterivSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glPixelTexGenSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glPixelTransformParameterfEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum, GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLfloat)
glPixelTransformParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum, GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLfloat *)
glPixelTransformParameteriEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum, GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint)
glPixelTransformParameterivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum, GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,const GLint *)
glPointParameterf	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterf (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPointParameterfARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPointParameterfEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPointParameterfSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glPointParameterfv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glPointParameterfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glPointParameterfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glPointParameterfvSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glPointParameteri	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteri (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glPointParameteriNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glPointParameteriv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glPointParameterivNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glPollAsyncSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint *)
glPollInstrumentsSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *);$/;"	p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLint *)
glPolygonOffsetEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat)
glPrimitiveRestartIndexNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glPrimitiveRestartNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPrioritizeTexturesEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei, const GLuint *, const GLclampf *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *,const GLclampf *)
glProgramEnvParameter4dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glProgramEnvParameter4dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum, GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLdouble *)
glProgramEnvParameter4fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLflo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glProgramEnvParameter4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum, GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLfloat *)
glProgramLocalParameter4dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum, GLuint, GLdouble, GLdouble, GLdouble, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glProgramLocalParameter4dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum, GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLdouble *)
glProgramLocalParameter4fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glProgramLocalParameter4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum, GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLfloat *)
glProgramNamedParameter4dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint, GLsizei, const GLubyte *, GLdouble, GLd/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,GLdouble,GLdouble,GLdouble,GLdouble)
glProgramNamedParameter4dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint, GLsizei, const GLubyte *, const GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,const GLdouble *)
glProgramNamedParameter4fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint, GLsizei, const GLubyte *, GLfloat, GLfl/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,GLfloat,GLfloat,GLfloat,GLfloat)
glProgramNamedParameter4fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint, GLsizei, const GLubyte *, const GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *,const GLfloat *)
glProgramParameter4dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdoub/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glProgramParameter4dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum, GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLdouble *)
glProgramParameter4fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glProgramParameter4fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum, GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,const GLfloat *)
glProgramParameters4dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum, GLuint, GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,const GLdouble *)
glProgramParameters4fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum, GLuint, GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,const GLfloat *)
glProgramStringARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,const GLvoid *)
glReadInstrumentsSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glReferencePlaneSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glRenderbufferStorageEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum, GLenum, GLsizei, GLsizei);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLsizei)
glReplacementCodePointerSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum, GLsizei, const GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLvoid **)
glReplacementCodeubSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte)
glReplacementCodeubvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte *)
glReplacementCodeuiColor3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiColor3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *, const GLfloat *, con/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *, const GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *,const GLfloat *)
glReplacementCodeuiColor4ubVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint, GLubyte, GLubyte, GLubyte, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLubyte,GLubyte,GLubyte,GLubyte,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiColor4ubVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *, const GLubyte *, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLubyte *,const GLfloat *)
glReplacementCodeuiNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *, const GLfloat *, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *)
glReplacementCodeuiSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint, GLfloat, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *,const GLfloat *,const GLfloat *)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint, GLfloat, GLfloat, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *, const GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *,const GLfloat *)
glReplacementCodeuiTexCoord2fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiTexCoord2fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *, const GLfloat *, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *,const GLfloat *)
glReplacementCodeuiVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat)
glReplacementCodeuiVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *,const GLfloat *)
glReplacementCodeuivSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *)
glReplacementCodeusSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort)
glReplacementCodeusvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort *)
glRequestResidentProgramsNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLuint *)
glResetHistogram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glResetHistogram (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glResetHistogramEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glResetMinmax	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glResetMinmax (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glResetMinmaxEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glResizeBuffersMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glSampleCoverage	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSampleCoverage (GLclampf, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLboolean)
glSampleCoverageARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLclampf, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLboolean)
glSampleMapATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint, GLuint, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLenum)
glSampleMaskEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLboolean)
glSampleMaskSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf,GLboolean)
glSamplePatternEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glSamplePatternSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glSecondaryColor3b	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte, GLbyte, GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte,GLbyte,GLbyte)
glSecondaryColor3bEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte,GLbyte,GLbyte)
glSecondaryColor3bv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte *)
glSecondaryColor3bvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte *)
glSecondaryColor3d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glSecondaryColor3dEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glSecondaryColor3dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glSecondaryColor3dvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glSecondaryColor3f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glSecondaryColor3fEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glSecondaryColor3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glSecondaryColor3fvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glSecondaryColor3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV)
glSecondaryColor3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glSecondaryColor3i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glSecondaryColor3iEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glSecondaryColor3iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glSecondaryColor3ivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glSecondaryColor3s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glSecondaryColor3sEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glSecondaryColor3sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glSecondaryColor3svEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glSecondaryColor3ub	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte, GLubyte, GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte,GLubyte,GLubyte)
glSecondaryColor3ubEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte,GLubyte,GLubyte)
glSecondaryColor3ubv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte *)
glSecondaryColor3ubvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte *)
glSecondaryColor3ui	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLuint)
glSecondaryColor3uiEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLuint)
glSecondaryColor3uiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *)
glSecondaryColor3uivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint *)
glSecondaryColor3us	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort, GLushort, GLushort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort,GLushort,GLushort)
glSecondaryColor3usEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort, GLushort, GLushort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort,GLushort,GLushort)
glSecondaryColor3usv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort *)
glSecondaryColor3usvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort *)
glSecondaryColorPointer	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,const GLvoid *)
glSecondaryColorPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,const GLvoid *)
glSecondaryColorPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint, GLenum, GLint, const GLvoid* *, GLint/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLint,const GLvoid **,GLint)
glSeparableFilter2D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *,const GLvoid *)
glSeparableFilter2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, co/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *,const GLvoid *)
glSetFenceAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glSetFenceNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum)
glSetFragmentShaderConstantATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glSetInvariantEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,const GLvoid *)
glSetLocalConstantEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint, GLenum, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,const GLvoid *)
glShaderOp1EXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint)
glShaderOp2EXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum, GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint)
glShaderOp3EXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum, GLuint, GLuint, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLuint,GLuint,GLuint)
glShaderSource	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glShaderSource (GLuint, GLsizei, const GLchar* *, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLchar **,const GLint *)
glShaderSourceARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB, GLsizei, const GLcharARB* *, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB,GLsizei,const GLcharARB **,const GLint *)
glSharpenTexFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLfloat *)
glSpriteParameterfSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glSpriteParameterfvSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glSpriteParameteriSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glSpriteParameterivSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glStartInstrumentsSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glStencilFuncSeparate	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum, GLenum, GLint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLuint)
glStencilFuncSeparateATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum, GLenum, GLint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLint,GLuint)
glStencilMaskSeparate	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint)
glStencilOpSeparate	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glStencilOpSeparateATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLenum,GLenum)
glStopInstrumentsSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glStringMarkerGREMEDY	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLvoid *)
glSwizzleEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum)
glTagSampleBufferSGIX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glTangent3bEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte, GLbyte, GLbyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte,GLbyte,GLbyte)
glTangent3bvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte *)
glTangent3dEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glTangent3dvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glTangent3fEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glTangent3fvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glTangent3iEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glTangent3ivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glTangent3sEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glTangent3svEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glTangentPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLsizei,const GLvoid *)
glTbufferMask3DFX	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glTestFenceAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glTestFenceNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint)
glTestObjectAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum, GLuint);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum,GLuint)
glTexBumpParameterfvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glTexBumpParameterivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glTexCoord1hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV)
glTexCoord1hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glTexCoord2fColor3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord2fColor3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *, const GLfloat *, const GLf/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *,const GLfloat *)
glTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *, const GLfloat *, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *,const GLfloat *,const GLfloat *)
glTexCoord2fColor4ubVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLubyte,GLubyte,GLubyte,GLubyte,GLfloat,GLfloat,GLfloat)
glTexCoord2fColor4ubVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *, const GLubyte *, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLubyte *,const GLfloat *)
glTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *, const GLfloat *, const GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *,const GLfloat *)
glTexCoord2fVertex3fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord2fVertex3fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *)
glTexCoord2hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV)
glTexCoord2hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glTexCoord3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV)
glTexCoord3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glTexCoord4fColor4fNormal3fVertex4fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat, GLfloat, GLfloat, GLfloat, /;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord4fColor4fNormal3fVertex4fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *, const GLfloat *, c/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *,const GLfloat *,const GLfloat *)
glTexCoord4fVertex4fSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloa/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat)
glTexCoord4fVertex4fvSUN	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *,const GLfloat *)
glTexCoord4hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV,GLhalfNV)
glTexCoord4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glTexCoordPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,GLsizei,const GLvoid *)
glTexCoordPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint, GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLint,const GLvoid **,GLint)
glTexCoordPointervINTEL	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint, GLenum, const GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,const GLvoid **)
glTexFilterFuncSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum, GLenum, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum,GLsizei,const GLfloat *)
glTexImage3D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage3D (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid *)
glTexImage3DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid *)
glTexImage4DSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei,/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid *)
glTexSubImage1DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLv/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLsizei,GLenum,GLenum,const GLvoid *)
glTexSubImage2DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glTexSubImage3D	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsiz/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glTexSubImage3DEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GL/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glTexSubImage4DSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLs/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *)
glTextureColorMaskSGIS	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean, GLboolean, GLboolean, GLboolean);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLboolean,GLboolean,GLboolean,GLboolean)
glTextureLightEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glTextureMaterialEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLenum)
glTextureNormalEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum)
glTrackMatrixNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum, GLuint, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLuint,GLenum,GLenum)
glUniform1f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1f (GLint, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat)
glUniform1fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fARB (GLint, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat)
glUniform1fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fv (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform1fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform1i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1i (GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint)
glUniform1iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1iARB (GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint)
glUniform1iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1iv (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform1ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform2f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2f (GLint, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat)
glUniform2fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fARB (GLint, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat)
glUniform2fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fv (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform2fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform2i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2i (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glUniform2iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2iARB (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glUniform2iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2iv (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform2ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform3f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3f (GLint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat,GLfloat)
glUniform3fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fARB (GLint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat,GLfloat)
glUniform3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fv (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform3fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform3i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3i (GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint,GLint)
glUniform3iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3iARB (GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint,GLint)
glUniform3iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3iv (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform3ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform4f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4f (GLint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat,GLfloat,GLfloat)
glUniform4fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fARB (GLint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLfloat,GLfloat,GLfloat,GLfloat)
glUniform4fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fv (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLfloat *)
glUniform4i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4i (GLint, GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint,GLint,GLint)
glUniform4iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4iARB (GLint, GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint,GLint,GLint)
glUniform4iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4iv (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniform4ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint, GLsizei, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,const GLint *)
glUniformMatrix2fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUniformMatrix2fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUniformMatrix3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUniformMatrix3fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUniformMatrix4fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUniformMatrix4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint, GLsizei, GLboolean, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLsizei,GLboolean,const GLfloat *)
glUnlockArraysEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glUnmapBuffer	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum)
glUnmapBufferARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum);$/;"	p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum)
glUnmapObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glUpdateObjectBufferATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint, GLuint, GLsizei, const GLvoid *, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLsizei,const GLvoid *,GLenum)
glUseProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUseProgram (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glUseProgramObjectARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB)
glValidateProgram	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glValidateProgram (GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint)
glValidateProgramARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB)
glVariantArrayObjectATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint, GLenum, GLsizei, GLuint, GLuint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLsizei,GLuint,GLuint)
glVariantPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint, GLenum, GLuint, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLenum,GLuint,const GLvoid *)
glVariantbvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLbyte *)
glVariantdvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVariantfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVariantivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLint *)
glVariantsvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVariantubvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVariantuivEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLuint *)
glVariantusvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLushort *)
glVertex2hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV)
glVertex2hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glVertex3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV)
glVertex3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glVertex4hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV,GLhalfNV,GLhalfNV,GLhalfNV)
glVertex4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glVertexArrayParameteriAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glVertexArrayRangeAPPLE	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei, GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLvoid *)
glVertexArrayRangeNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,const GLvoid *)
glVertexAttrib1d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble)
glVertexAttrib1dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble)
glVertexAttrib1dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble)
glVertexAttrib1dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib1dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib1dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib1f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat)
glVertexAttrib1fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat)
glVertexAttrib1fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat)
glVertexAttrib1fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib1fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib1fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib1hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLhalfNV)
glVertexAttrib1hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLhalfNV *)
glVertexAttrib1s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort)
glVertexAttrib1sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort)
glVertexAttrib1sNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort)
glVertexAttrib1sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib1svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib1svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib2d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble)
glVertexAttrib2dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble)
glVertexAttrib2dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble)
glVertexAttrib2dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib2dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib2dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib2f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat)
glVertexAttrib2fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat)
glVertexAttrib2fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat)
glVertexAttrib2fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib2fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib2fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib2hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLhalfNV,GLhalfNV)
glVertexAttrib2hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLhalfNV *)
glVertexAttrib2s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort)
glVertexAttrib2sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort)
glVertexAttrib2sNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort)
glVertexAttrib2sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib2svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib2svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib3d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble)
glVertexAttrib3dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble)
glVertexAttrib3dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble)
glVertexAttrib3dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib3dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib3dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib3f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat)
glVertexAttrib3fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat)
glVertexAttrib3fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat)
glVertexAttrib3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib3fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib3fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib3hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLhalfNV,GLhalfNV,GLhalfNV)
glVertexAttrib3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLhalfNV *)
glVertexAttrib3s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort)
glVertexAttrib3sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort)
glVertexAttrib3sNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort)
glVertexAttrib3sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib3svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib3svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4Nbv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLbyte *)
glVertexAttrib4NbvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLbyte *)
glVertexAttrib4Niv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLint *)
glVertexAttrib4NivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLint *)
glVertexAttrib4Nsv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4NsvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4Nub	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint, GLubyte, GLubyte, GLubyte, GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLubyte,GLubyte,GLubyte,GLubyte)
glVertexAttrib4NubARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint, GLubyte, GLubyte, GLubyte, GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLubyte,GLubyte,GLubyte,GLubyte)
glVertexAttrib4Nubv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVertexAttrib4NubvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVertexAttrib4Nuiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLuint *)
glVertexAttrib4NuivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLuint *)
glVertexAttrib4Nusv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLushort *)
glVertexAttrib4NusvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLushort *)
glVertexAttrib4bv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLbyte *)
glVertexAttrib4bvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLbyte *)
glVertexAttrib4d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glVertexAttrib4dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glVertexAttrib4dNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLdouble,GLdouble,GLdouble,GLdouble)
glVertexAttrib4dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib4dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib4dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLdouble *)
glVertexAttrib4f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glVertexAttrib4fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glVertexAttrib4fNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLfloat,GLfloat,GLfloat,GLfloat)
glVertexAttrib4fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib4fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib4fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLfloat *)
glVertexAttrib4hNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLhalfNV,GLhalfNV,GLhalfNV,GLhalfNV)
glVertexAttrib4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLhalfNV *)
glVertexAttrib4iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLint *)
glVertexAttrib4ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLint *)
glVertexAttrib4s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort,GLshort)
glVertexAttrib4sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort,GLshort)
glVertexAttrib4sNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLshort,GLshort,GLshort,GLshort)
glVertexAttrib4sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLshort *)
glVertexAttrib4ubNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint, GLubyte, GLubyte, GLubyte, GLubyte);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLubyte,GLubyte,GLubyte,GLubyte)
glVertexAttrib4ubv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVertexAttrib4ubvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVertexAttrib4ubvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLubyte *)
glVertexAttrib4uiv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLuint *)
glVertexAttrib4uivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLuint *)
glVertexAttrib4usv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLushort *)
glVertexAttrib4usvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,const GLushort *)
glVertexAttribArrayObjectATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint, GLint, GLenum, GLboolean, GLsizei, GLu/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLenum,GLboolean,GLsizei,GLuint,GLuint)
glVertexAttribPointer	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvo/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLenum,GLboolean,GLsizei,const GLvoid *)
glVertexAttribPointerARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint, GLint, GLenum, GLboolean, GLsizei, const G/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLenum,GLboolean,GLsizei,const GLvoid *)
glVertexAttribPointerNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint, GLint, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLint,GLenum,GLsizei,const GLvoid *)
glVertexAttribs1dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint, GLsizei, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLdouble *)
glVertexAttribs1fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLfloat *)
glVertexAttribs1hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint, GLsizei, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLhalfNV *)
glVertexAttribs1svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint, GLsizei, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLshort *)
glVertexAttribs2dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint, GLsizei, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLdouble *)
glVertexAttribs2fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLfloat *)
glVertexAttribs2hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint, GLsizei, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLhalfNV *)
glVertexAttribs2svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint, GLsizei, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLshort *)
glVertexAttribs3dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint, GLsizei, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLdouble *)
glVertexAttribs3fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLfloat *)
glVertexAttribs3hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint, GLsizei, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLhalfNV *)
glVertexAttribs3svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint, GLsizei, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLshort *)
glVertexAttribs4dvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint, GLsizei, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLdouble *)
glVertexAttribs4fvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint, GLsizei, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLfloat *)
glVertexAttribs4hvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint, GLsizei, const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLhalfNV *)
glVertexAttribs4svNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint, GLsizei, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLshort *)
glVertexAttribs4ubvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint, GLsizei, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLsizei,const GLubyte *)
glVertexBlendARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint)
glVertexBlendEnvfATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glVertexBlendEnviATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glVertexPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,GLsizei,const GLvoid *)
glVertexPointerListIBM	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint, GLenum, GLint, const GLvoid* *, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLint,const GLvoid **,GLint)
glVertexPointervINTEL	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint, GLenum, const GLvoid* *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,const GLvoid **)
glVertexStream1dATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble)
glVertexStream1dvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glVertexStream1fATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat)
glVertexStream1fvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glVertexStream1iATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint)
glVertexStream1ivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glVertexStream1sATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort)
glVertexStream1svATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glVertexStream2dATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble)
glVertexStream2dvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glVertexStream2fATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat)
glVertexStream2fvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glVertexStream2iATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint)
glVertexStream2ivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glVertexStream2sATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort)
glVertexStream2svATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glVertexStream3dATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble)
glVertexStream3dvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glVertexStream3fATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat)
glVertexStream3fvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glVertexStream3iATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint)
glVertexStream3ivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glVertexStream3sATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort)
glVertexStream3svATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glVertexStream4dATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLdouble,GLdouble,GLdouble,GLdouble)
glVertexStream4dvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLdouble *)
glVertexStream4fATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLfloat,GLfloat,GLfloat,GLfloat)
glVertexStream4fvATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLfloat *)
glVertexStream4iATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum, GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLint,GLint,GLint,GLint)
glVertexStream4ivATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLint *)
glVertexStream4sATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum, GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,GLshort,GLshort,GLshort,GLshort)
glVertexStream4svATI	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum,const GLshort *)
glVertexWeightPointerEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLsizei, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei,GLenum,GLsizei,const GLvoid *)
glVertexWeightfEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat)
glVertexWeightfvEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glVertexWeighthNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV)
glVertexWeighthvNV	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV *)
glWeightPointerARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint, GLenum, GLsizei, const GLvoid *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLenum,GLsizei,const GLvoid *)
glWeightbvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightbvARB (GLint, const GLbyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLbyte *)
glWeightdvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightdvARB (GLint, const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLdouble *)
glWeightfvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightfvARB (GLint, const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLfloat *)
glWeightivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightivARB (GLint, const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLint *)
glWeightsvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightsvARB (GLint, const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLshort *)
glWeightubvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightubvARB (GLint, const GLubyte *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLubyte *)
glWeightuivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightuivARB (GLint, const GLuint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLuint *)
glWeightusvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWeightusvARB (GLint, const GLushort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,const GLushort *)
glWindowPos2d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble)
glWindowPos2dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble)
glWindowPos2dMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble)
glWindowPos2dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos2dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos2dvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos2f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat)
glWindowPos2fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat)
glWindowPos2fMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat)
glWindowPos2fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos2fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos2fvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos2i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2i (GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint)
glWindowPos2iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint)
glWindowPos2iMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint)
glWindowPos2iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos2ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos2ivMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos2s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort)
glWindowPos2sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort)
glWindowPos2sMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort)
glWindowPos2sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos2svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos2svMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos3d	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glWindowPos3dARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glWindowPos3dMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble)
glWindowPos3dv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos3dvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos3dvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos3f	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glWindowPos3fARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glWindowPos3fMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat)
glWindowPos3fv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos3fvARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos3fvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos3i	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3i (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glWindowPos3iARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glWindowPos3iMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint)
glWindowPos3iv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos3ivARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos3ivMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos3s	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glWindowPos3sARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glWindowPos3sMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort)
glWindowPos3sv	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos3svARB	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos3svMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWindowPos4dMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble, GLdouble, GLdouble, GLdouble);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble,GLdouble,GLdouble,GLdouble)
glWindowPos4dvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble *)
glWindowPos4fMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat, GLfloat, GLfloat, GLfloat);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat,GLfloat,GLfloat,GLfloat)
glWindowPos4fvMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat *)
glWindowPos4iMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint, GLint, GLint, GLint);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLint,GLint,GLint,GLint)
glWindowPos4ivMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint *)
glWindowPos4sMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort, GLshort, GLshort, GLshort);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort,GLshort,GLshort,GLshort)
glWindowPos4svMESA	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort *)
glWriteMaskEXT	/usr/include/SDL/SDL_opengl.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);$/;"	p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum)
h	/usr/include/SDL/SDL_events.h	/^	int h;		\/**< New height *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:int	access:public
h	/usr/include/SDL/SDL_rwops.h	/^		void *h;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	typeref:typename:void *	access:public
h	/usr/include/SDL/SDL_video.h	/^	Uint16 w, h;$/;"	m	struct:SDL_Rect	typeref:typename:Uint16	access:public
h	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
h	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
hat	/usr/include/SDL/SDL_events.h	/^	Uint8 hat;	\/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
here	/usr/include/SDL/SDL_rwops.h	/^	 	Uint8 *here;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
hi	/usr/include/SDL/SDL_stdinc.h	/^	Uint32 hi;$/;"	m	struct:__anoncb8ed01f0208	typeref:typename:Uint32	access:public
hidden	/usr/include/SDL/SDL_rwops.h	/^	} hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anon355864d5010a	access:public
host	/usr/include/SDL/SDL_net.h	/^	Uint32 host;			\/* 32-bit IPv4 host address *\/$/;"	m	struct:__anon1a0e7ea10108	typeref:typename:Uint32	access:public
hot_x	/usr/include/SDL/SDL_mouse.h	/^	Sint16 hot_x, hot_y;		\/**< The "tip" of the cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Sint16	access:public
hot_y	/usr/include/SDL/SDL_mouse.h	/^	Sint16 hot_x, hot_y;		\/**< The "tip" of the cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Sint16	access:public
hw_available	/usr/include/SDL/SDL_video.h	/^	Uint32 hw_available :1;	\/**< Flag: Can you create hardware surfaces? *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
hw_overlay	/usr/include/SDL/SDL_video.h	/^	Uint32 hw_overlay :1;	\/**< Flag: This overlay hardware accelerated? *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint32:1	access:public
hwdata	/usr/include/SDL/SDL_video.h	/^	struct private_hwdata *hwdata;$/;"	m	struct:SDL_Surface	typeref:struct:private_hwdata *	access:public
hwdata	/usr/include/SDL/SDL_video.h	/^	struct private_yuvhwdata *hwdata;$/;"	m	struct:SDL_Overlay	typeref:struct:private_yuvhwdata *	access:public
hwfuncs	/usr/include/SDL/SDL_video.h	/^	struct private_yuvhwfuncs *hwfuncs;$/;"	m	struct:SDL_Overlay	typeref:struct:private_yuvhwfuncs *	access:public
id	/usr/include/SDL/SDL_cdrom.h	/^	Uint8 id;		\/**< Track number *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint8	access:public
id	/usr/include/SDL/SDL_cdrom.h	/^	int id;			\/**< Private drive identifier *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
jaxis	/usr/include/SDL/SDL_events.h	/^	SDL_JoyAxisEvent jaxis;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
jball	/usr/include/SDL/SDL_events.h	/^	SDL_JoyBallEvent jball;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
jbutton	/usr/include/SDL/SDL_events.h	/^	SDL_JoyButtonEvent jbutton;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
jhat	/usr/include/SDL/SDL_events.h	/^	SDL_JoyHatEvent jhat;$/;"	m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
key	/usr/include/SDL/SDL_events.h	/^	SDL_KeyboardEvent key;$/;"	m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
keysym	/usr/include/SDL/SDL_events.h	/^	SDL_keysym keysym;$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:SDL_keysym	access:public
left	/usr/include/SDL/SDL_rwops.h	/^		    int left;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:int	access:public
len	/usr/include/SDL/SDL_audio.h	/^	int    len;			\/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len	/usr/include/SDL/SDL_net.h	/^	int len;		\/* The length of the packet data *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
len_cvt	/usr/include/SDL/SDL_audio.h	/^	int    len_cvt;			\/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_mult	/usr/include/SDL/SDL_audio.h	/^	int    len_mult;		\/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_ratio	/usr/include/SDL/SDL_audio.h	/^	double len_ratio; 	\/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
length	/usr/include/SDL/SDL_cdrom.h	/^	Uint32 length;		\/**< Length, in frames, of this track *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint32	access:public
lo	/usr/include/SDL/SDL_stdinc.h	/^	Uint32 lo;$/;"	m	struct:__anoncb8ed01f0208	typeref:typename:Uint32	access:public
locked	/usr/include/SDL/SDL_video.h	/^	Uint32 locked;				\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
main	/usr/include/SDL/SDL_main.h	/^#define main	/;"	d
major	/usr/include/SDL/SDL_version.h	/^	Uint8 major;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
map	/usr/include/SDL/SDL_video.h	/^	struct SDL_BlitMap *map;		\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
mask	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *mask;			\/**< B\/W cursor mask *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 *	access:public
maxlen	/usr/include/SDL/SDL_net.h	/^	int maxlen;		\/* The size of the data buffer *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
mem	/usr/include/SDL/SDL_rwops.h	/^	    } mem;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	access:public
minor	/usr/include/SDL/SDL_version.h	/^	Uint8 minor;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
mod	/usr/include/SDL/SDL_keyboard.h	/^	SDLMod mod;			\/**< current key modifiers *\/$/;"	m	struct:SDL_keysym	typeref:typename:SDLMod	access:public
motion	/usr/include/SDL/SDL_events.h	/^	SDL_MouseMotionEvent motion;$/;"	m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
msg	/usr/include/SDL/SDL_events.h	/^	SDL_SysWMmsg *msg;$/;"	m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
ncolors	/usr/include/SDL/SDL_video.h	/^	int       ncolors;$/;"	m	struct:SDL_Palette	typeref:typename:int	access:public
needed	/usr/include/SDL/SDL_audio.h	/^	int needed;			\/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:int	access:public
numtracks	/usr/include/SDL/SDL_cdrom.h	/^	int numtracks;		\/**< Number of tracks on disk *\/$/;"	m	struct:SDL_CD	typeref:typename:int	access:public
offset	/usr/include/SDL/SDL_cdrom.h	/^	Uint32 offset;		\/**< Offset, in frames, from start of disk *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint32	access:public
offset	/usr/include/SDL/SDL_video.h	/^	int offset;				\/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
padding	/usr/include/SDL/SDL_audio.h	/^	Uint16 padding;		\/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
palette	/usr/include/SDL/SDL_video.h	/^	SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
patch	/usr/include/SDL/SDL_version.h	/^	Uint8 patch;$/;"	m	struct:SDL_version	typeref:typename:Uint8	access:public
pfnSDL_CurrentBeginThread	/usr/include/SDL/SDL_thread.h	/^typedef int (*pfnSDL_CurrentBeginThread)(void (*func)(void *), void *, unsigned, void *arg); $/;"	t	typeref:typename:int (*)(void (* func)(void *),void *,unsigned,void * arg)
pfnSDL_CurrentBeginThread	/usr/include/SDL/SDL_thread.h	/^typedef uintptr_t (__cdecl *pfnSDL_CurrentBeginThread) (void *, unsigned,$/;"	t	typeref:typename:uintptr_t (__cdecl *)(void *,unsigned,unsigned (__stdcall * func)(void *),void * arg,unsigned,unsigned * threadID)
pfnSDL_CurrentEndThread	/usr/include/SDL/SDL_thread.h	/^typedef void (*pfnSDL_CurrentEndThread)(void);$/;"	t	typeref:typename:void (*)(void)
pfnSDL_CurrentEndThread	/usr/include/SDL/SDL_thread.h	/^typedef void (__cdecl *pfnSDL_CurrentEndThread)(unsigned code);$/;"	t	typeref:typename:void (__cdecl *)(unsigned code)
pitch	/usr/include/SDL/SDL_video.h	/^	Uint16 pitch;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint16	access:public
pitches	/usr/include/SDL/SDL_video.h	/^	Uint16 *pitches;			\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint16 *	access:public
pixels	/usr/include/SDL/SDL_video.h	/^	Uint8 **pixels;				\/**< Read-write *\/$/;"	m	struct:SDL_Overlay	typeref:typename:Uint8 **	access:public
pixels	/usr/include/SDL/SDL_video.h	/^	void *pixels;				\/**< Read-write *\/$/;"	m	struct:SDL_Surface	typeref:typename:void *	access:public
planes	/usr/include/SDL/SDL_video.h	/^	int planes;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
port	/usr/include/SDL/SDL_net.h	/^	Uint16 port;			\/* 16-bit protocol port *\/$/;"	m	struct:__anon1a0e7ea10108	typeref:typename:Uint16	access:public
quit	/usr/include/SDL/SDL_events.h	/^	SDL_QuitEvent quit;$/;"	m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
r	/usr/include/SDL/SDL_video.h	/^	Uint8 r;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
rate_incr	/usr/include/SDL/SDL_audio.h	/^	double rate_incr;		\/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:double	access:public
ready	/usr/include/SDL/SDL_net.h	/^	int ready;$/;"	m	struct:_SDLNet_GenericSocket	typeref:typename:int	access:public
refcount	/usr/include/SDL/SDL_video.h	/^	int refcount;				\/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
resize	/usr/include/SDL/SDL_events.h	/^	SDL_ResizeEvent resize;$/;"	m	union:SDL_Event	typeref:typename:SDL_ResizeEvent	access:public
s	/usr/include/SDL/SDL_endian.h	/^		struct { Uint32 a,b; } s;$/;"	m	union:SDL_Swap64::__anon1210cd29010a	typeref:struct:SDL_Swap64::__anon1210cd29010a::__anon1210cd290208	access:public
samples	/usr/include/SDL/SDL_audio.h	/^	Uint16 samples;		\/**< Audio buffer size in samples (power of 2) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
save	/usr/include/SDL/SDL_mouse.h	/^	Uint8 *save[2];			\/**< Place to save cursor area *\/$/;"	m	struct:SDL_Cursor	typeref:typename:Uint8 * [2]	access:public
scancode	/usr/include/SDL/SDL_keyboard.h	/^	Uint8 scancode;			\/**< hardware specific scancode *\/$/;"	m	struct:SDL_keysym	typeref:typename:Uint8	access:public
silence	/usr/include/SDL/SDL_audio.h	/^	Uint8  silence;		\/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
size	/usr/include/SDL/SDL_audio.h	/^	Uint32 size;		\/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
size	/usr/include/SDL/SDL_rwops.h	/^		    int size;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50208::__anon355864d50308	typeref:typename:int	access:public
src_format	/usr/include/SDL/SDL_audio.h	/^	Uint16 src_format;		\/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	typeref:typename:Uint16	access:public
state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< A mask of the focus states *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< SDL_PRESSED or SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
state	/usr/include/SDL/SDL_events.h	/^	Uint8 state;	\/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
status	/usr/include/SDL/SDL_cdrom.h	/^	CDstatus status;	\/**< Current drive status *\/$/;"	m	struct:SDL_CD	typeref:typename:CDstatus	access:public
status	/usr/include/SDL/SDL_net.h	/^	int status;		\/* packet status after sending *\/$/;"	m	struct:__anon1a0e7ea10208	typeref:typename:int	access:public
stdio	/usr/include/SDL/SDL_rwops.h	/^	    } stdio;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50408	access:public
stop	/usr/include/SDL/SDL_rwops.h	/^		Uint8 *stop;$/;"	m	struct:SDL_RWops::__anon355864d5010a::__anon355864d50508	typeref:typename:Uint8 *	access:public
sym	/usr/include/SDL/SDL_keyboard.h	/^	SDLKey sym;			\/**< SDL virtual keysym *\/$/;"	m	struct:SDL_keysym	typeref:typename:SDLKey	access:public
syswm	/usr/include/SDL/SDL_events.h	/^	SDL_SysWMEvent syswm;$/;"	m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
track	/usr/include/SDL/SDL_cdrom.h	/^	SDL_CDtrack track[SDL_MAX_TRACKS+1];$/;"	m	struct:SDL_CD	typeref:typename:SDL_CDtrack[]	access:public
type	/usr/include/SDL/SDL_cdrom.h	/^	Uint8 type;		\/**< Data or audio track *\/$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_ACTIVEEVENT *\/$/;"	m	struct:SDL_ActiveEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_KEYDOWN or SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_MOUSEBUTTONDOWN or SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_USEREVENT through SDL_NUMEVENTS-1 *\/$/;"	m	struct:SDL_UserEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_VIDEOEXPOSE *\/$/;"	m	struct:SDL_ExposeEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;	\/**< SDL_VIDEORESIZE *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;$/;"	m	struct:SDL_SysWMEvent	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_events.h	/^	Uint8 type;$/;"	m	union:SDL_Event	typeref:typename:Uint8	access:public
type	/usr/include/SDL/SDL_rwops.h	/^	Uint32 type;$/;"	m	struct:SDL_RWops	typeref:typename:Uint32	access:public
u	/usr/include/SDL/SDL_endian.h	/^		Uint64 u;$/;"	m	union:SDL_Swap64::__anon1210cd29010a	typeref:typename:Uint64	access:public
unicode	/usr/include/SDL/SDL_keyboard.h	/^	Uint16 unicode;			\/**< translated character *\/$/;"	m	struct:SDL_keysym	typeref:typename:Uint16	access:public
unknown	/usr/include/SDL/SDL_rwops.h	/^	    } unknown;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50608	access:public
unused	/usr/include/SDL/SDL_cdrom.h	/^	Uint16 unused;$/;"	m	struct:SDL_CDtrack	typeref:typename:Uint16	access:public
unused	/usr/include/SDL/SDL_video.h	/^	Uint8 unused;$/;"	m	struct:SDL_Color	typeref:typename:Uint8	access:public
unused1	/usr/include/SDL/SDL_video.h	/^	Uint32 unused1;				\/**< for binary compatibility *\/$/;"	m	struct:SDL_Surface	typeref:typename:Uint32	access:public
user	/usr/include/SDL/SDL_events.h	/^	SDL_UserEvent user;$/;"	m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
userdata	/usr/include/SDL/SDL_audio.h	/^	void  *userdata;$/;"	m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
value	/usr/include/SDL/SDL_events.h	/^	Sint16 value;	\/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
value	/usr/include/SDL/SDL_events.h	/^	Uint8 value;	\/**< The hat position value:$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
vfmt	/usr/include/SDL/SDL_video.h	/^	SDL_PixelFormat *vfmt;	\/**< Value: The format of the video surface *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:SDL_PixelFormat *	access:public
video_mem	/usr/include/SDL/SDL_video.h	/^	Uint32 video_mem;	\/**< The total amount of video memory (in K) *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32	access:public
volume	/usr/include/SDL/SDL_mixer.h	/^	Uint8 volume;		\/* Per-sample volume, 0-128 *\/$/;"	m	struct:Mix_Chunk	typeref:typename:Uint8	access:public
w	/usr/include/SDL/SDL_events.h	/^	int w;		\/**< New width *\/$/;"	m	struct:SDL_ResizeEvent	typeref:typename:int	access:public
w	/usr/include/SDL/SDL_video.h	/^	Uint16 w, h;$/;"	m	struct:SDL_Rect	typeref:typename:Uint16	access:public
w	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Overlay	typeref:typename:int	access:public
w	/usr/include/SDL/SDL_video.h	/^	int w, h;				\/**< Read-only *\/$/;"	m	struct:SDL_Surface	typeref:typename:int	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The joystick device index *\/$/;"	m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The keyboard device index *\/$/;"	m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The mouse device index *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
which	/usr/include/SDL/SDL_events.h	/^	Uint8 which;	\/**< The mouse device index *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint8	access:public
win32io	/usr/include/SDL/SDL_rwops.h	/^	    } win32io;$/;"	m	union:SDL_RWops::__anon355864d5010a	typeref:struct:SDL_RWops::__anon355864d5010a::__anon355864d50208	access:public
wm_available	/usr/include/SDL/SDL_video.h	/^	Uint32 wm_available :1;	\/**< Flag: Can you talk to a window manager? *\/$/;"	m	struct:SDL_VideoInfo	typeref:typename:Uint32:1	access:public
wm_cursor	/usr/include/SDL/SDL_mouse.h	/^	WMcursor *wm_cursor;		\/**< Window-manager cursor *\/$/;"	m	struct:SDL_Cursor	typeref:typename:WMcursor *	access:public
x	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint16	access:public
x	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse at press time *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint16	access:public
x	/usr/include/SDL/SDL_video.h	/^	Sint16 x, y;$/;"	m	struct:SDL_Rect	typeref:typename:Sint16	access:public
xrel	/usr/include/SDL/SDL_events.h	/^	Sint16 xrel;	\/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
xrel	/usr/include/SDL/SDL_events.h	/^	Sint16 xrel;	\/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint16	access:public
y	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Uint16	access:public
y	/usr/include/SDL/SDL_events.h	/^	Uint16 x, y;	\/**< The X\/Y coordinates of the mouse at press time *\/$/;"	m	struct:SDL_MouseButtonEvent	typeref:typename:Uint16	access:public
y	/usr/include/SDL/SDL_video.h	/^	Sint16 x, y;$/;"	m	struct:SDL_Rect	typeref:typename:Sint16	access:public
yrel	/usr/include/SDL/SDL_events.h	/^	Sint16 yrel;	\/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
yrel	/usr/include/SDL/SDL_events.h	/^	Sint16 yrel;	\/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	typeref:typename:Sint16	access:public
